//============================================================================================
/**
 * @file	debug_watanabe.dat
 * @brief	デバッグ＆テスト用データ
 * @date	2007.02.01
 */
//============================================================================================
//------------------------------------------------------------------
/**
 * @brief	データ
 */
//------------------------------------------------------------------
static const char g3DarcPath[] = {"src/sample_graphic/build_model.narc"};
static const char g3DarcPath2[] = {"src/sample_graphic/haruka.narc"};

#include "src/sample_graphic/build_model_id.h"
#include "src/sample_graphic/haruka.naix"

enum {
	G3DRES_HARUKA_BCA = 0,
	G3DRES_HARUKA_BMD,
	G3DRES_MAP_WALL,
	G3DRES_MAP_WALL1,
	G3DRES_MAP_WALL2_1,
	G3DRES_MAP_WALL2_2,
	G3DRES_MAP_WALL3,
	G3DRES_MAP_WALL0,
	G3DRES_MAP_FLOOR,
	G3DRES_ACCE_HAMMER,
	G3DRES_ACCE_BOW,
};

static const GFL_G3D_UTIL_RES g3Dutil_resTbl[] = {
	{ (u32)g3DarcPath2, NARC_haruka_haruka_nsbca,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_haruka_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_test_wall_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_test_wall1_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_test_wall2_1_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_test_wall2_2_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_test_wall3_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_test_wall0_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_test_floor_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_hammer_nsbmd,  GFL_G3D_UTIL_RESPATH },
	{ (u32)g3DarcPath2, NARC_haruka_bow_nsbmd,  GFL_G3D_UTIL_RESPATH },
};

//---------------------
static const GFL_G3D_UTIL_ANM g3Dutil_HarukaAnmTbl[] = {
	{ G3DRES_HARUKA_BCA, 0 },
};

//---------------------
enum {
	G3DOBJ_HARUKA = 0,
	G3DOBJ_HARUKA_STOP,
	G3DOBJ_MAP_WALL,
	G3DOBJ_MAP_WALL1,
	G3DOBJ_MAP_WALL2_1,
	G3DOBJ_MAP_WALL2_2,
	G3DOBJ_MAP_WALL3,
	G3DOBJ_MAP_WALL0,
	G3DOBJ_MAP_FLOOR,
	G3DOBJ_ACCE_HAMMER,
	G3DOBJ_ACCE_BOW,
};

static const GFL_G3D_UTIL_OBJ g3Dutil_objTbl[] = {
	{ G3DRES_HARUKA_BMD, 0, G3DRES_HARUKA_BMD, g3Dutil_HarukaAnmTbl, NELEMS(g3Dutil_HarukaAnmTbl) },
	{ G3DRES_HARUKA_BMD, 0, G3DRES_HARUKA_BMD, g3Dutil_HarukaAnmTbl, NELEMS(g3Dutil_HarukaAnmTbl) },
	{ G3DRES_MAP_WALL, 0, G3DRES_MAP_WALL, NULL, 0 },
	{ G3DRES_MAP_WALL1, 0, G3DRES_MAP_WALL1, NULL, 0 },
	{ G3DRES_MAP_WALL2_1, 0, G3DRES_MAP_WALL2_1, NULL, 0 },
	{ G3DRES_MAP_WALL2_2, 0, G3DRES_MAP_WALL2_2, NULL, 0 },
	{ G3DRES_MAP_WALL3, 0, G3DRES_MAP_WALL3, NULL, 0 },
	{ G3DRES_MAP_WALL0, 0, G3DRES_MAP_WALL0, NULL, 0 },
	{ G3DRES_MAP_FLOOR, 0, G3DRES_MAP_FLOOR, NULL, 0 },
	{ G3DRES_ACCE_HAMMER, 0, G3DRES_ACCE_HAMMER, NULL, 0 },
	{ G3DRES_ACCE_BOW, 0, G3DRES_ACCE_BOW, NULL, 0 },
};

//---------------------
static const GFL_G3D_UTIL_SETUP g3Dutil_setup = {
	g3Dutil_resTbl, NELEMS(g3Dutil_resTbl),
	g3Dutil_objTbl, NELEMS(g3Dutil_objTbl),
};

//---------------------
static const GFL_G3D_SCENEOBJ_DATA g3DsceneObjData[] = {
	{	G3DOBJ_HARUKA, 0, 1, 31, FALSE, TRUE, 
		{	{ 0, 0, 0 },
			{ FX32_ONE*2, FX32_ONE*2, FX32_ONE*2 },
			{ FX32_ONE, 0, 0, 0, FX32_ONE, 0, 0, 0, FX32_ONE },
		},moveHaruka,
	},
};

//---------------------
enum {
#if 0
	G3DACCE_HEAD = 0,
	G3DACCE_LEFTHAND,
	G3DACCE_RIGHTHAND,
	G3DACCE_LEFTLEG,
	G3DACCE_RIGHTLEG,
#else
	G3DACCE_RIGHTHAND = 0,
#endif
};

static const GFL_G3D_SCENEACCESORY_DATA g3DsceneAccesoryData[] = {
#if 0
	{	G3DOBJ_MAP_WALL, 31,
		{	{ 0, FX32_ONE*3, 0 },
			{ FX32_ONE/64, FX32_ONE/64, FX32_ONE/64 },
			{ FX32_ONE, 0, 0, 0, FX32_ONE, 0, 0, 0, FX32_ONE },
		},1
	},
	{	G3DOBJ_MAP_WALL, 31,
		{	{ FX32_ONE*2, FX32_ONE, 0 },
			{ FX32_ONE/64, FX32_ONE/64, FX32_ONE/64 },
			{ FX32_ONE, 0, 0, 0, FX32_ONE, 0, 0, 0, FX32_ONE },
		},3
	},
	{	G3DOBJ_ACCE_HAMMER, 31,
		{	{ -FX32_ONE*3/2, FX32_ONE, 0 },
			{ FX32_ONE/32, FX32_ONE/32, FX32_ONE/32 },
			{ FX32_ONE, 0, 0, 0, FX32_ONE, 0, 0, 0, FX32_ONE },
		},7
	},
	{	G3DOBJ_MAP_WALL, 31,
		{	{ FX32_ONE, -FX32_ONE, 0 },
			{ FX32_ONE/64, FX32_ONE/64, FX32_ONE/64 },
			{ FX32_ONE, 0, 0, 0, FX32_ONE, 0, 0, 0, FX32_ONE },
		},4
	},
	{	G3DOBJ_MAP_WALL, 31,
		{	{ -FX32_ONE, -FX32_ONE, 0 },
			{ FX32_ONE/64, FX32_ONE/64, FX32_ONE/64 },
			{ FX32_ONE, 0, 0, 0, FX32_ONE, 0, 0, 0, FX32_ONE },
		},8
	},
#else
	{	G3DOBJ_ACCE_HAMMER, 31,
		{	{ -FX32_ONE*3/2, FX32_ONE, 0 },
			{ FX32_ONE/32, FX32_ONE/32, FX32_ONE/32 },
			{ FX32_ONE, 0, 0, 0, FX32_ONE, 0, 0, 0, FX32_ONE },
		},7
	},
#endif
};

