
//=============================================================================================
/**
 * @file	sound.h
 * @brief	サウンドルーチン
 * @author	Hisashi Sogabe
 * @date	2007/04/17
 */
//=============================================================================================
#ifndef __SOUND_H_
#define __SOUND_H_

//--------------------------------------------------------------------------------------------
/**
 * サウンド初期化
 *
 * @param	sndHeap		サウンドヒープへのポインタ（静的に確保することを推奨）
 * @param	sndHeapSize	サウンドヒープのサイズ
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_Init( u8 *sndHeap,int sndHeapSize );

//--------------------------------------------------------------------------------------------
/**
 * サウンドメイン処理
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_Main( void );

//--------------------------------------------------------------------------------------------
/**
 * サウンド終了（呼ばれることはないだろうが、一応作成）
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_Exit( void );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータロード（アーカイブデータ）
 *
 * @param[in]	arcID		読み込むアーカイブファイルの種類インデックスナンバー
 * @param[in]	datID		読み込むデータのアーカイブファイル上のインデックスナンバー
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_LoadArchiveData( int arcID, int datID );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータロード（シーケンスデータ）
 *
 * @param	seq_no	シーケンスデータナンバー
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_LoadSequenceData( int seq_no );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータロード（シーケンスアーカイブデータ）
 *
 * @param	seqarc_no	シーケンスアーカイブデータナンバー
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_LoadSequenceArchiveData( int seqarc_no );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータロード（バンクデータ）
 *
 * @param	bank_no	バンクデータナンバー
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_LoadBankData( int bank_no );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータロード（グループデータ）
 *
 * @param	group_no	グループデータナンバー
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_LoadGroupData( int group_no );

//--------------------------------------------------------------------------------------------
/**
 * シーケンスナンバーからプレイヤーナンバーを取得
 *
 * @param	no	シーケンスナンバー
 *
 * @retval	プレイヤーナンバー or 0xff=取得失敗
 */
//--------------------------------------------------------------------------------------------
extern	u8	GFL_SOUND_GetPlayerNo( u16 no );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータ再生（BGM）
 *
 * @param	bgm_no	BGMナンバー
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_PlayBGM( int bgm_no );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータStop（BGM）
 *
 * 今鳴っているBGMを止める
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_StopBGM( void );

//--------------------------------------------------------------------------------------------
/**
 * サウンドデータ再生（SE）
 *
 * @param	se_no	BGMナンバー
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_PlaySE( int se_no );

//--------------------------------------------------------------------------------------------
/**
 * サウンドヒープ階層ロード
 *
 * @param	level	ロードする階層レベル
 */
//--------------------------------------------------------------------------------------------
extern	void	GFL_SOUND_LoadHeapState(int level);

//--------------------------------------------------------------------------------------------
/**
 * サウンドヒープ階層セーブ
 *
 * @retval	保存した階層レベル（-1でエラー）
 */
//--------------------------------------------------------------------------------------------
extern	int	GFL_SOUND_SaveHeapState(void);

#endif
