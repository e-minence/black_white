//=============================================================================================
/**
 * @file	bmp_win.h
 * @brief	ビットマップウィンドウシステム
 */
//=============================================================================================
#ifndef _BMP_WIN_H_
#define _BMP_WIN_H_

// BitmapWindowのビットモード
enum {
	GFL_BMPWIN_BITMODE_4 = 0,
	GFL_BMPWIN_BITMODE_8 = 1
};

///領域管理構造体
typedef struct {
	u32	start;
	u32	end;

}GFL_BMPWIN_LIMIT;

///ビットマップシステム設定構造体
typedef struct {
	GFL_BMPWIN_LIMIT	limit[ GFL_BG_FRAME_MAX ];

}GFL_BMPWIN_SET;

//----------------------------------------------------
/**
 *  ハンドル構造体の型宣言
 */
//----------------------------------------------------
typedef struct _GFL_BMPWIN	GFL_BMPWIN;

//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
/**
 *
 * ビットマップ管理システムの開始、終了
 *
 * 主にプロセス起動、終了時に呼ばれる。
 * ビットマップウインドウを使用するＢＧフレーム（複数指定可）、使用ＣＧＸ領域の設定を行う。
 * これ以後、各ビットマップ作成の際は、ここで設定したステータスが用いられる。
 */
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
/**
 * システム初期化
 *
 * @param	bgl		BGシステム構造体ポインタ
 * @param	set		使用領域設定構造体
 * @param	heapID	使用ヒープ領域
 */
//--------------------------------------------------------------------------------------------
extern void
	GFL_BMPWIN_sysInit
		( GFL_BG_INI *bgl, GFL_BMPWIN_SET* set, u16 heapID );
//--------------------------------------------------------------------------------------------
/**
 * システム終了
 */
//--------------------------------------------------------------------------------------------
extern void
	GFL_BMPWIN_sysExit
		( void );

//--------------------------------------------------------------------------------------------
/**
 * ビットマップウインドウの作成、破棄
 *
 * ビットマップとして使用したいＢＧフレーム、描画位置、使用ＣＧＸサイズの設定などを指定し
 * ビットマップウインドウ管理ハンドルを作成する。
 * 自動でＣＧＸバッファ領域のヒープ確保も行う。
 * 作成後のビットマップウインドウ操作は、ハンドルポインタによって行われる。
 */
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
/**
 * ビットマップウインドウの作成
 *
 * @param	frmnum	GFL_BGL使用フレーム
 * @param	posx	Ｘ座標（キャラクター単位）
 * @param	posy	Ｙ座標（キャラクター単位）
 * @param	sizx	Ｘサイズ（キャラクター単位）
 * @param	sizy	Ｙサイズ（キャラクター単位）
 * @param	panum	使用パレットナンバー
 * @param	dir		確保ＶＲＡＭ方向
 *
 * @return	ビットマップウインドウハンドルポインタ
 */
//--------------------------------------------------------------------------------------------
extern GFL_BMPWIN* 
	GFL_BMPWIN_Create
		( u8 frmnum, u8 posx, u8 posy, u8 sizx, u8 sizy, u8 palnum, u8 dir );
//--------------------------------------------------------------------------------------------
/**
 * ビットマップウインドウの破棄
 *
 * @param	bmpwin	ビットマップウインドウポインタ
 */
//--------------------------------------------------------------------------------------------
extern void
	GFL_BMPWIN_Delete
		( GFL_BMPWIN* bmpwin );

//--------------------------------------------------------------------------------------------
/**
 *
 * 描画制御
 *
 */
//--------------------------------------------------------------------------------------------
//---------------------------------------------------------
// ビットマップ用キャラクターを内部バッファからＶＲＡＭへ転送
extern void GFL_BMPWIN_UploadChar( GFL_BMPWIN* bmpwin );
//---------------------------------------------------------
// ビットマップ用スクリーンを関連ＢＧスクリーンバッファに作成する
extern void GFL_BMPWIN_MakeScrn( GFL_BMPWIN* bmpwin );
//---------------------------------------------------------
// 関連ＢＧスクリーンバッファのビットマップ用スクリーンをクリアする
extern void GFL_BMPWIN_ClearScrn( GFL_BMPWIN* bmpwin );

//--------------------------------------------------------------------------------------------
/**
 * ビットマップウインドウステータス取得
 */
//--------------------------------------------------------------------------------------------
// フレームナンバーの取得
extern u8 GFL_BMPWIN_GetFrame( GFL_BMPWIN* bmpwin );
//--------------------------------
// キャラクターＸサイズの取得
extern u8 GFL_BMPWIN_GetSizeX( GFL_BMPWIN* bmpwin );
//--------------------------------
// キャラクターＹサイズの取得
extern u8 GFL_BMPWIN_GetSizeY( GFL_BMPWIN* bmpwin );
//--------------------------------
// 描画Ｘ座標の取得
extern u8 GFL_BMPWIN_GetPosX( GFL_BMPWIN* bmpwin );
//--------------------------------
// 描画Ｙ座標の取得
extern u8 GFL_BMPWIN_GetPosY( GFL_BMPWIN* bmpwin );
//--------------------------------
// キャラクターナンバーの取得
extern u16 GFL_BMPWIN_GetChrNum( GFL_BMPWIN* bmpwin );
//--------------------------------
// ビットマップポインタの取得
GFL_BMP_DATA* GFL_BMPWIN_GetBmp( GFL_BMPWIN * bmpwin );

//--------------------------------------------------------------------------------------------
/**
 * ビットマップウインドウステータス変更
 */
//--------------------------------------------------------------------------------------------
// 描画Ｘ座標の変更
extern void GFL_BMPWIN_SetPosX( GFL_BMPWIN* bmpwin,u8 px );
//--------------------------------
// 描画Ｙ座標の変更
extern void GFL_BMPWIN_SetPosY( GFL_BMPWIN* bmpwin,u8 py );
//--------------------------------
// スクリーン描画サイズＸの変更
extern void GFL_BMPWIN_SetScrnSizX( GFL_BMPWIN* bmpwin, u8 sx );
//--------------------------------
// スクリーン描画サイズＹの変更
extern void GFL_BMPWIN_SetScrnSizY( GFL_BMPWIN* bmpwin, u8 sy );
//--------------------------------
// パレットの変更
extern void GFL_BMPWIN_SetPal( GFL_BMPWIN* bmpwin, u8 palnum );

#endif
