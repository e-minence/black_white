//======================================================================
//
//                debug_scr.ev
//
//    スクリプトファイル：debug_scr用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "msg_debug_scr.h"
  //.include  "debug_scr.h"

  .include  "pokecen_scr_def.h"

  .include  "debug_scr_local_iwasawa.h"
  
  .include  "c02.h"
  .include  "d06.h"
  .include  "d06r0101.h"

  .include "c08r0401_def.h"
  .include "t01.h"
  .include "hiden_def.h"

  .include "init_scr_def.h"
//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA   ev_debug_test
_EVENT_DATA   ev_debug_masafumi
_EVENT_DATA   ev_debug_ando
_EVENT_DATA   ev_debug_suginaka
_EVENT_DATA   ev_debug_murakami
_EVENT_DATA   ev_debug_tamada
_EVENT_DATA   ev_debug_kagaya
_EVENT_DATA   ev_debug_iwasawa
_EVENT_DATA   ev_debug_nozomu
_EVENT_DATA   ev_debug_tomoya
_EVENT_DATA   ev_debug_obata
_EVENT_DATA   ev_debug_hosaka
_EVENT_DATA   ev_debug_ariizumi
_EVENT_DATA   ev_debug_ohkubo
_EVENT_DATA   ev_debug_matsushima
_EVENT_DATA   ev_debug_common
_EVENT_DATA_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START ev_debug_test
{
  //_MAP_CHANGE( ZONE_ID_D09R1501, 5, 7, DIR_UP )
  _MAP_CHANGE( ZONE_ID_D02R0201, 10, 10, DIR_UP )
  //_MAP_CHANGE( ZONE_ID_C03R0301, 7, 7, DIR_LEFT )
  //_MAP_CHANGE( ZONE_ID_R06R0203, 3, 5, DIR_UP )
  //_GLOBAL_CALL  SCRID_ELEVATOR
  //_SXY_MOVE_EXIT_EVENT( DOOR_ID_T01_EXIT03, 786, 0, 757 )
  //_FLAG_RESET( FV_D02R0201_LEGEND3 )
  //_ADD_POKEMON_TO_PARTY( SCWK_ANSWER, MONSNO_HUSIGIDANE, 0, TOKUSYU_NULL, 10, 0 )
  //$SCWK_ANSWER = 255
  //_DEBUG_PRINT_WK( SCWK_ANSWER )
  //_ADD_POKEMON_TO_PARTY( SCWK_ANSWER, MONSNO_RIZAADON, 0, TOKUSYU_NULL, 10, 0 )
  //_SET_TEMOTI_NATSUKI( 1, 255 )
  //_GET_BOX_WALLPAPER( SCR_BOX_EX_WALLPAPER1 )
  //_SXY_MOVE_BG_EVENT( BG_T01_BOARD_01, 787, 0, 753 )
  //_SET_BADGE_FLAG( BADGE_ID_03 )
  //_SET_GYM_VICTORY_INFO( BADGE_ID_03 )
}
EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/
//EVENT_START ev_debug_tamada
{
ev_debug_tamada:
  _SET_TEMOTI_WAZA( 0, 0, WAZANO_DAIBINGU )
  _CHG_COMMON_SCR SCRID_HIDEN_DIVING
  //_MAP_CHANGE( ZONE_ID_C03R0301, 7, 7, DIR_LEFT )
  //_TRAINER_BTL_SET( TRID_VETERANW_03, 0 )
  //_TRAINER_MULTI_BTL_SET( TRID_SUPPORT_01, TRID_RIVAL_01, TRID_MINI_01 )
  //_TRAINER_LOSE_CHECK( SCWK_ANSWER )
  //IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
    //_TRAINER_WIN()			//勝ち(1)ならトレーナー勝利処理へ
  //ELSE
    //_TRAINER_LOSE()			//負け(0)ならトレーナー敗北処理へ(ここでスクリプト終了します）
  //ENDIF
  //_SET_GYM_VICTORY_INFO( BADGE_ID_01 )
  //_SET_FAVORITE_POKEMON( 0 )
  //DEFINE_LOCAL  LWK_X
  //DEFINE_LOCAL  LWK_Z

  //_PLAYER_POS_GET( LWK_X, LWK_Z )
  //$LWK_X -= 5
  //_DEBUG_PRINT_WK( LWK_X )
  //_DEBUG_PRINT_WK( LWK_Z )
  //_BMODEL_CHANGE_VIEW_FLAG( SCR_BMID_EVENT, LWK_X, LWK_Z, FALSE )
}
  //_GET_ROM_VERSION( SCWK_ANSWER )
  //_DEBUG_PRINT_WK ( SCWK_ANSWER )
  //_GOTO_GAMECLEAR_DEMO( 0 )

  //_BGM_FADEOUT( 0, 30 )
  //_BGM_STOP()
  //_BGM_NOW_MAP_RECOVER()
  //_END_EVENT_BGM()
EVENT_END


/************************************************************/
/*				斉藤マのデバッグメニュー					*/
/************************************************************/
EVENT_START ev_debug_masafumi
	$SCWK_TEMP0 = 0
	$SCWK_TEMP1 = 0
	
//	WHILE $SCWK_TEMP0 != 555

		//メニュー作成
		_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_TEMP1 )
		//リスト追加
		_BMPMENU_MAKE_LIST( msg_debug_masafumi_05, 0 )	//四天王部屋
		_BMPMENU_MAKE_LIST( msg_debug_01, 1 )	//テスト01
		_BMPMENU_MAKE_LIST( msg_debug_02, 2 )	//テスト02
		_BMPMENU_MAKE_LIST( msg_debug_03, 3 )	//テスト03
		_BMPMENU_MAKE_LIST( msg_debug_05, 4 )	//イベントＯＦＦ
		_BMPMENU_MAKE_LIST( msg_debug_07, 5 )	//マップ差し替え
		_BMPMENU_MAKE_LIST( msg_debug_00, 10 )	//やめる
		//メニュー表示
		_BMPMENU_START()
	
		IF $SCWK_TEMP1 == 0 THEN
			_CALL	ev_bigfour_menu
			$SCWK_TEMP0 = 555
		ELSIF $SCWK_TEMP1 == 1 THEN
			_FLAG_SET( FE_C09_FORBIDDEN )
			//育て屋じいさんを表示＆タマゴイベントを発生
			_FLAG_RESET( FV_R03_SODATEYA_01 )
			$WK_OTHER_DISCOVER_EGG = 1
			
			//R05のライバル戦POSイベントを有効
			$WK_SCENE_R05 = 1
			
			//研究所の博士を表示
			_FLAG_RESET( FV_T01R0401_HAKASE1 )
			_FLAG_RESET( FV_T01R0401_HAKASE2 )
			
		ELSIF $SCWK_TEMP1 == 2 THEN
			
			//マルチ戦闘呼び出しテスト
			_TRAINER_MULTI_BTL_SET( TRID_RIVAL_13, TRID_KINDERGARTENM_04, TRID_KINDERGARTENM_03 )
			//勝敗チェック
			_TRAINER_LOSE_CHECK( SCWK_ANSWER )
			IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
				_TRAINER_WIN()		//勝利
			ELSE
				_TRAINER_LOSE()		//負け
			ENDIF
			
			$SCWK_TEMP0 = 555
		ELSIF $SCWK_TEMP1 == 3 THEN
			$SCWK_TEMP0 = 555
			
			_FLAG_SET( FE_MUSEUM_TOUNAN )	//盗難イベントの開始
			_FLAG_RESET(FV_C02GYM0101_HAKAI)	//博物館のプラズマ団を表示
			$WK_SCENE_C02GYM0101  = 2
			
			_MAP_CHANGE( ZONE_ID_C02GYM0101, 12, 5, DIR_DOWN )
			
			
		ELSIF $SCWK_TEMP1 == 4 THEN
			_CALL	ev_event_off
 			$SCWK_TEMP0 = 555
			 
		ELSIF $SCWK_TEMP1 == 5 THEN
			_CALL	ev_change_mapmatrix
			$SCWK_TEMP0 = 555
			 
		ELSE
			$SCWK_TEMP0 = 555
		ENDIF
	
//	ENDWHILE
	
EVENT_END


//四天王部屋デバッグメニュー------------------------------------
ev_bigfour_menu:
	//メニュー作成
	_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
	//リスト追加
	_BMPMENU_MAKE_LIST( msg_debug_masafumi_07, 0 )	//勝利フラグ
	_BMPMENU_MAKE_LIST( msg_debug_04, 1 )	//ジャンプ ※階段前にジャンプ（アニメチェック用）
	_BMPMENU_MAKE_LIST( msg_debug_00, 10 )	//やめる
	//メニュー表示
	_BMPMENU_START()

	IF $SCWK_ANSWER == 0 THEN
		
		WHILE $SCWK_TEMP0 != 111
		
			_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_PARAM0 )
			_BMPMENU_MAKE_LIST( msg_debug_masafumi_01, 0 )	//ゴースト
			_BMPMENU_MAKE_LIST( msg_debug_masafumi_02, 1 )	//あく
			_BMPMENU_MAKE_LIST( msg_debug_masafumi_03, 2 )	//かくとう
			_BMPMENU_MAKE_LIST( msg_debug_masafumi_04, 3 )	//エスパー
			_BMPMENU_MAKE_LIST( msg_debug_00, 10 )	//やめる
			_BMPMENU_START()
			
			IF $SCWK_PARAM0 == 0 THEN
				_FLAG_SET( SYS_FLAG_BIGFOUR_GHOSTWIN )
			ELSIF $SCWK_PARAM0 == 1 THEN
				_FLAG_SET( SYS_FLAG_BIGFOUR_EVILWIN )
			ELSIF $SCWK_PARAM0 == 2 THEN
				_FLAG_SET( SYS_FLAG_BIGFOUR_FIGHTWIN )
			ELSIF $SCWK_PARAM0 == 3 THEN
				_FLAG_SET( SYS_FLAG_BIGFOUR_ESPWIN )
			ELSE
				$SCWK_TEMP0 = 111
			ENDIF
		
		ENDWHILE
		
	ELSIF $SCWK_ANSWER == 1 THEN
		
		
		_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_PARAM0 )
		_BMPMENU_MAKE_LIST( msg_debug_masafumi_01, 0 )	//ゴースト
		_BMPMENU_MAKE_LIST( msg_debug_masafumi_02, 1 )	//あく
		_BMPMENU_MAKE_LIST( msg_debug_masafumi_03, 2 )	//かくとう
		_BMPMENU_MAKE_LIST( msg_debug_masafumi_04, 3 )	//エスパー
		_BMPMENU_START()
		
		IF $SCWK_PARAM0 == 0 THEN
			_MAP_CHANGE( ZONE_ID_C09R0101, 15, 28, DIR_DOWN )
		ELSIF $SCWK_PARAM0 == 1 THEN
			_MAP_CHANGE( ZONE_ID_C09R0201, 15, 28, DIR_DOWN )
		ELSIF $SCWK_PARAM0 == 2 THEN
			_MAP_CHANGE( ZONE_ID_C09R0301, 15, 28, DIR_DOWN )
		ELSIF $SCWK_PARAM0 == 3 THEN
			_MAP_CHANGE( ZONE_ID_C09R0401, 15, 28, DIR_DOWN )
		ENDIF
		
		
	ENDIF

_RET


//イベントＯＦＦ-----------------------------------------------
ev_event_off:
	//メニュー作成
	_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
	//リスト追加
	_BMPMENU_MAKE_LIST( msg_debug_masafumi_06, 2 )	//Ｎの城
	_BMPMENU_MAKE_LIST( msg_debug_masafumi_08, 0 )	//チャンピオン部屋
	_BMPMENU_MAKE_LIST( msg_debug_masafumi_09, 1 )	//Ｔ01全イベント
	_BMPMENU_MAKE_LIST( msg_debug_00, 10 )	//やめる
	//メニュー表示
	_BMPMENU_START()
	
	IF $SCWK_ANSWER == 0 THEN
		//チャンピオン部屋のＮとのイベントを無効にする
		$WK_SCENE_C09R0501 = 1
		_FLAG_SET( FV_C09R0501_BOSS_01 )
		_FLAG_SET( FV_C09R0501_CHAMPION_01 )
		_MAP_CHANGE( ZONE_ID_C09R0501, 16, 18, DIR_UP )
		
	ELSIF $SCWK_ANSWER == 1 THEN
		//T01の初回イベントを全部OFF
		//図鑑入手イベント終わった状態にする
		$WK_SCENE_T01R0401 = 1
		_FLAG_SET( FV_T01R0401_HAKASE2 )
		_FLAG_SET( FV_T01R0401_RIVAL )
		_FLAG_SET( FV_T01R0401_SUPPORT )
		//サポート初回イベント終わった
		$WK_SCENE_T01R0201 = 1
		_FLAG_SET( FV_T01R0201_SUPPORT )
		_FLAG_RESET( FV_T01_SUPPORT )
		//主人公宅の初回イベント終わった
		$WK_SCENE_T01R0101 = 1
		_FLAG_SET( FV_T01R0101_FRIENDS )
		_FLAG_SET( FV_T01R0102_BALL00 )
		_FLAG_SET( FV_T01R0102_BALL01 )
		_FLAG_SET( FV_T01R0102_BALL02 )
		$WK_SCENE_T01R0102 = 2
		_FLAG_SET( FV_T01R0102_RIVAL )
		_FLAG_SET( FV_T01R0102_SUPPORT )
		
	ELSIF $SCWK_ANSWER == 2 THEN
		//Ｎの城１Ｆの初回イベント無効
		$WK_SCENE_N01R0101 = 2
		//Ｎの城２Ｆのダークトリニティイベント無効
		$WK_SCENE_N01R0201 = 1
		_MAP_CHANGE( ZONE_ID_N01R0101, 20, 20, DIR_UP )
	ENDIF
	
_RET


//マップ差し替え-----------------------------------------------
ev_change_mapmatrix:
	//マップマトリクスの差し替え全部ON
	_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_01, TRUE, TRUE )
	_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_02, TRUE, TRUE )
	_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_04, TRUE, TRUE )
	_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_05, TRUE, TRUE )
	_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_06, TRUE, TRUE )
	_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_07, TRUE, TRUE )
_RET


//イベントジャンプ-----------------------------------------------
ev_event_jump:
	{
	DEFINE_LOCAL LWK_EVTJUMP
	//メニュー作成
	_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, LWK_EVTJUMP )
	//リスト追加
	_BMPMENU_MAKE_LIST( msg_debug_masafumi_10, 1 )	//自宅２Fゲーム開始イベント
	_BMPMENU_MAKE_LIST( msg_debug_00, 10 )	//やめる
	//メニュー表示
	_BMPMENU_START()
	
	IF $LWK_EVTJUMP == 1 THEN
		//自宅２階のゲーム開始イベントを起動
		_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_07, FALSE, TRUE )
		_FLAG_SET( FV_T01R0102_SUPPORT )
		_FLAG_RESET( FV_T01R0102_RIVAL )
		_FLAG_RESET( FV_T01R0102_BALL00 )
		_FLAG_RESET( FV_T01R0102_BALL01 )
		_FLAG_RESET( FV_T01R0102_BALL02 )
		$WK_SCENE_T01R0102 = 0
		_MAP_CHANGE( ZONE_ID_T01R0102, 4, 5, DIR_DOWN )
		
	ENDIF
	}
	
_RET



/**************************************************************/
/* ANDO                                                           */
/**************************************************************/
EVENT_START   ev_debug_ando
	_FLAG_RESET( FV_C09R0501_CHAMPION_02 )
	_FLAG_SET( FV_C09R0501_BOSS_01 )
	_FLAG_SET( FV_C09R0501_CHAMPION_01 )
	$WK_SCENE_C09R0501 = 1
EVENT_END

/**************************************************************/
/*				杉中のデバッグメニュー						  */
/**************************************************************/
EVENT_START   ev_debug_suginaka
	$SCWK_TEMP0 = 0
	
	WHILE $SCWK_TEMP0 != 428

		//メニュー作成
		_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
		//リスト追加
		_BMPMENU_MAKE_LIST( msg_debug_suginaka_04, 0 )	//演説イベント
		_BMPMENU_MAKE_LIST( msg_debug_suginaka_05, 1 )	//D03R0101のイベント
		_BMPMENU_MAKE_LIST( msg_debug_suginaka_06, 2 )	//C03の誘導イベント
		_BMPMENU_MAKE_LIST( msg_debug_suginaka_07, 3 )	//ラストバトル前に移動
		_BMPMENU_MAKE_LIST( msg_debug_suginaka_08, 4 )	//ライトストーン所持
		_BMPMENU_MAKE_LIST( msg_debug_00, 5 )	//やめる
		//メニュー表示
		_BMPMENU_START()
	
		IF $SCWK_ANSWER == 0 THEN
			//=========フラグワーク操作==========//
	
			//博士案内イベント終了
			$WK_SCENE_T02PC0101 = 3
	
			//ライバルストッパー終了
			$WK_SCENE_T02 = 1	
	
			//ライバルストッパー解除
			_FLAG_SET( FV_T02_RIVAL )
			_FLAG_SET( FV_T02_HAKASE )

			//演説イベントフラグ開始
			_FLAG_RESET( FV_T02_SAGE )
			_FLAG_RESET( FV_T02_HAKAI )
			_FLAG_RESET( FV_T02_NNN )
			_FLAG_RESET( FV_T02_RIVAL_02 )
			_FLAG_RESET( FV_T02_MAN )
			_FLAG_RESET( FV_T02_SPEECH_BEFORE )
			_FLAG_SET( FV_T02_SPEECH_AFTER )

			//===================================//

			//マップチェンジ
			_MAP_CHANGE( ZONE_ID_T02, 796, 658, DIR_DOWN )
			
			$SCWK_TEMP0 = 428
		
		ELSIF $SCWK_ANSWER == 1 THEN
			
			//========================================/
	
			//D04遺跡イベント終了
			$WK_SCENE_D04R0601 = 1
		
			//D04遺跡イベントバニシュフラグ
			_FLAG_SET( FV_D04R0601_EVENT_01 )

			//D03R0101のイベント開始
			$WK_SCENE_D03R0101 = 4
	
			//D03R0101のバニシュフラグリセット
			_FLAG_RESET( FV_D03R0101_RIVAL_02 )
			_FLAG_RESET( FV_D03R0101_CHAMPION_01 )
	
			//C02の博士（父、娘）、チャンピオン、ジムリーダー,、サポートを表示
			_FLAG_RESET(FV_C02_STONEEVENT_01)	

			//D08のサポートを消す
			_FLAG_SET(FV_D08_SUPORT_01)	

			//C02でのライトストーン、ダークストーンのイベント有効
			$WK_SCENE_C02 = 6
	
			//========================================/
			
			//マップチェンジ
			_MAP_CHANGE( ZONE_ID_D03R0101, 61, 32, DIR_DOWN )
			
			$SCWK_TEMP0 = 428
			
		ELSIF $SCWK_ANSWER == 2 THEN
		
			//アーティ・ライバル削除
			_FLAG_RESET( FV_C03_GUIDE_01 )
		
			//ワークの値を0
			$WK_SCENE_C03 = 0

			//マップチェンジ
			_MAP_CHANGE( ZONE_ID_H01R0201, 2, 4, DIR_LEFT )
			
			$SCWK_TEMP0 = 428

		ELSIF $SCWK_ANSWER == 3 THEN

			//マップチェンジ
			_MAP_CHANGE( ZONE_ID_N01R0502, 16, 58, DIR_UP )
			
			//フラグリセット
			$WK_SCENE_N01R0502 = 0
			$WK_SYS_N01R0502_ITEMUSE = 0
			
			//OBJリセット
			_FLAG_SET( FV_N01R0502_LEGEND_01 )
			_FLAG_SET( FV_N01R0502_LEGEND_02 )
			_FLAG_SET( FV_N01R0502_EVENT_01 )
			
			$SCWK_TEMP0 = 428

		ELSIF $SCWK_ANSWER == 4 THEN

			$WK_SYS_N01R0502_ITEMUSE = 2
			
			$SCWK_TEMP0 = 428

		ELSE

			$SCWK_TEMP0 = 428
			
		ENDIF
	
	ENDWHILE
	
EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_murakami

		//メニュー作成
		_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_TEMP1 )
		//リスト追加
		_BMPMENU_MAKE_LIST( msg_debug_murakami_01, 1 )	//テスト01
		_BMPMENU_MAKE_LIST( msg_debug_murakami_02, 2 )	//テスト02
		_BMPMENU_MAKE_LIST( msg_debug_murakami_03, 3 )	//テスト用1
		_BMPMENU_MAKE_LIST( msg_debug_murakami_04, 4 )	//テスト用2
		_BMPMENU_MAKE_LIST( msg_debug_murakami_05, 5 )	//テスト用2
		_BMPMENU_MAKE_LIST( msg_debug_murakami_06, 6 )	//テスト用2
		_BMPMENU_MAKE_LIST( msg_debug_00, 10 )	//やめる
		//メニュー表示
		_BMPMENU_START()
		
		//C02　ストーン入手イベント
		IF $SCWK_TEMP1 == 1 THEN

			//C02の博士（父、娘）、チャンピオン、ジムリーダー、サポートを表示
			_FLAG_RESET(FV_C02_STONEEVENT_01)
			
			_OBJ_ADD( C02_CHAMPION_01 ) 
			_OBJ_ADD( C02_HAKASE1_01 ) 
			_OBJ_ADD( C02_HAKASE2_01 ) 
			_OBJ_ADD( C02_SUPPORT_02 ) 
			_OBJ_ADD( C02_LEADER02_01 ) 
	
			//C02でのライトストーン、ダークストーンのイベント有効
			$WK_SCENE_C02 = 6
			  
			_MAP_CHANGE( ZONE_ID_C02, 644, 587, DIR_UP )
		
		//リュウラセンイベント最初から
		ELSIF $SCWK_TEMP1 == 2 THEN
			
			//イベント関係者を表示
			_FLAG_RESET(FV_D08R0901_BOSS_01)
			_FLAG_RESET(FV_D08R0801_EVENT_01)
			_FLAG_RESET(FV_D08R0901_EVENT_01)
			_FLAG_RESET(FV_D08R0601_EVENT_01)
			_FLAG_RESET(FV_D08_HAKASE1_01)
			_FLAG_RESET(FV_D08_RIVAL_01)
			
			//d08r0101のマップを入り口が破壊されたマップに差し替える
			_CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_05, TRUE, TRUE )
			
			_MAP_CHANGE( ZONE_ID_D08, 180, 148, DIR_UP )
			$WK_SCENE_D08_LEGEND = 1
		
		//デンチュラの巣を破壊する		
		ELSIF $SCWK_TEMP1 == 3 THEN

			_MAP_CHANGE( ZONE_ID_D06, 107, 343, DIR_UP )
			_TIME_WAIT(90)
			
			//ヤーコンのポケモンが出現
			_OBJ_ADD_EX( 106, 341, DIR_UP, MMDL_ID_EVENTOBJ_00, POKE17, MV_DMY )
			
			//ポケモンが巣に向かう
			_OBJ_ANIME( MMDL_ID_EVENTOBJ_00,anm_poke2_kuru_01)
			_OBJ_ANIME_WAIT()
			
			//【仮】スクリプトの動きだけ出来るのか。エフェクトはいるのか
			//ポケモンがわざを出したような処理
			_OBJ_ANIME( MMDL_ID_EVENTOBJ_00,anm_poke2_waza_01)
			_OBJ_ANIME_WAIT()
										
			_OBJ_ANIME(D06_STOPPER_01,anm_stopper_01_hakai)
			_OBJ_ANIME_WAIT()
			
			_OBJ_DEL( D06_STOPPER_01 )
		
		//リュウラセン/シンムデモ・アニメ	
		ELSIF $SCWK_TEMP1 == 4 THEN
		
			$WK_SCENE_D08_LEGEND  = 8
			_MAP_CHANGE( ZONE_ID_D08R0901, 16, 24, DIR_UP )
		
		//リュウラセン/6F/塔揺れるデモ	
		ELSIF $SCWK_TEMP1 == 5 THEN
			
			$WK_SCENE_D08_LEGEND  = 6
			_MAP_CHANGE( ZONE_ID_D08R0801, 15, 27, DIR_UP )
		
		//テスト用	
		ELSIF $SCWK_TEMP1 == 6 THEN
			_MAP_FADE_BLACK_OUT()
			_MAP_FADE_END_CHECK()
			_CALL_3D_DEMO( DEMO3D_ID_N_CASTLE )
			_MAP_FADE_BLACK_IN()
			_MAP_FADE_END_CHECK()
		
		ENDIF
		
EVENT_END

//--------------------------------------------------------------------
//デンチュラの巣:壊れる                       
//--------------------------------------------------------------------
_ANIME_LABEL	anm_stopper_01_hakai
	_ANIME_DATA	AC_SPIDER_REMOVE,1
	_ANIME_DATA	ACMD_END,0 

//--------------------------------------------------------------------
// ポケモン: 巣まで移動する                    
//--------------------------------------------------------------------
_ANIME_LABEL	anm_poke2_kuru_01
	_ANIME_DATA AC_WALK_R_8F,1
	_ANIME_DATA AC_DIR_U,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
// ポケモン: わざを出す                     
//--------------------------------------------------------------------
_ANIME_LABEL	anm_poke2_waza_01

	_ANIME_DATA AC_STAY_JUMP_U_8F,1	
	_ANIME_DATA	AC_DIR_U,1
	_ANIME_DATA	AC_DIR_PAUSE_ON,1	
	_ANIME_DATA AC_WALK_U_4F,1
	_ANIME_DATA AC_WALK_D_4F,1
	_ANIME_DATA AC_WALK_U_4F,1
	_ANIME_DATA AC_WALK_D_4F,1
	_ANIME_DATA	AC_DIR_PAUSE_OFF,1
	_ANIME_DATA	ACMD_END,0
	
/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_kagaya
EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/

{ //DEBUG_IWASAWA_START
DEFINE_LOCAL  reg_iwasawa_return

EVENT_START   ev_debug_iwasawa
  _CALL sub_iwasawa_main
EVENT_END

sub_iwasawa_main:
{

  DEFINE_LOCAL  i_seq
  DEFINE_LOCAL  i_loop

  $i_loop = TRUE
  WHILE $i_loop == TRUE
    SWITCH $i_seq
    CASE SEQ_IWASAWA_MAIN_MENU THEN
      _CALL siwasawa_main_menu
      $i_seq = $reg_iwasawa_return

    CASE SEQ_IWASAWA_MV_POKE THEN
      _CALL siwasawa_mv_poke_menu
      $i_seq = $reg_iwasawa_return

    CASE SEQ_IWASAWA_EXIT THEN
      $i_loop = FALSE
    ENDSWITCH
  ENDWHILE

}
_RET

//メインメニュー
siwasawa_main_menu:
{
  DEFINE_LOCAL  i_ret

	//メニュー作成
	_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, i_ret )
	//リスト追加
	_BMPMENU_MAKE_LIST( msg_deb_iwasawa_main01, SEQ_IWASAWA_MV_POKE )	//いどうポケモン
	_BMPMENU_MAKE_LIST( msg_debug_00, SEQ_IWASAWA_EXIT )	//やめる
	//メニュー表示
	_BMPMENU_START()

  $reg_iwasawa_return = $i_ret
}
_RET

//移動ポケモン追加メニュー
siwasawa_mv_poke_menu:
{
  DEFINE_LOCAL  i_ret
  DEFINE_LOCAL  i_loop

  $i_loop = TRUE
  WHILE $i_loop == TRUE
	  //メニュー作成
	  _BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, i_ret )
	  //リスト追加
	  _BMPMENU_MAKE_LIST( msg_deb_iwasawa_mvp01, MOVE_POKE_RAIKAMI )	//ライカミ
	  _BMPMENU_MAKE_LIST( msg_deb_iwasawa_mvp02, MOVE_POKE_KAZAKAMI )	//カザカミ
	  _BMPMENU_MAKE_LIST( msg_debug_00, SEQ_IWASAWA_EXIT )	//やめる
	  //メニュー表示
	  _BMPMENU_START()

    IF $i_ret == SEQ_IWASAWA_EXIT THEN
      $i_loop = FALSE
    ELSE
      _ADD_MOVE_POKEMON( i_ret )
    ENDIF
  ENDWHILE
  $reg_iwasawa_return = SEQ_IWASAWA_MAIN_MENU
}
_RET

} //DEBUG_IWASAWA_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_nozomu
EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_tomoya
EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_obata

  _MAP_CHANGE_WARP( ZONE_ID_D02R0201, 10, 10, DIR_UP )

EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_hosaka
  _MAP_FADE_BLACK_OUT()
  _MAP_FADE_END_CHECK()

  //Nの城出現デモ呼び出し
  _CALL_3D_DEMO( DEMO3D_ID_N_CASTLE )

  //チャンピオン部屋のマップ置き換えリクエスト
  _CHANGE_MAPREPLACE_FLAG( MAPREPLACE_ID_CHAMPROOM, TRUE, TRUE )

  _MAP_FADE_BLACK_IN()
  _MAP_FADE_END_CHECK()
EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_ariizumi

  DEFINE_LOCAL  i_ret
	_FIELD_COMM_EXIT_EVENT_CALL( i_ret )
	_PALPARK_CALL() //ミュージカル呼び出し

//  _CALL_TVT_DEMO( 0 )
EVENT_END


/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_ohkubo

  _SET_BADGE_FLAG( BADGE_ID_01 )
  _SET_BADGE_FLAG( BADGE_ID_02 )
  _SET_BADGE_FLAG( BADGE_ID_03 )
  _SET_BADGE_FLAG( BADGE_ID_04 )
  _SET_BADGE_FLAG( BADGE_ID_05 )
  _SET_BADGE_FLAG( BADGE_ID_06 )
  _SET_BADGE_FLAG( BADGE_ID_07 )
  _SET_BADGE_FLAG( BADGE_ID_08 )

  _MAP_CHANGE( ZONE_ID_R10R0101, 15, 19, DIR_UP )
EVENT_END

/**************************************************************/
/*                                                            */
/**************************************************************/
EVENT_START   ev_debug_matsushima
  _MAP_CHANGE( ZONE_ID_R06R0203, 3, 5, DIR_UP )
EVENT_END

/************************************************************/
/*				一般向けデバッグメニュー					*/
/************************************************************/
EVENT_START ev_debug_common
	$SCWK_TEMP0 = 0
	
	WHILE $SCWK_TEMP0 != 555
		
		//メニュー作成
		_BMPMENU_INIT_EX( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
		//リスト追加
		_BMPMENU_MAKE_LIST( msg_debug_common_00, 0 )	//ゲームクリア
		_BMPMENU_MAKE_LIST( msg_debug_common_01, 1 )	//ジムバッジ全部
		_BMPMENU_MAKE_LIST( msg_debug_common_02, 2 )	//到着フラグ
		_BMPMENU_MAKE_LIST( msg_debug_08, 70 )	//イベントジャンプ
		_BMPMENU_MAKE_LIST( msg_debug_05, 80 )	//イベントＯＦＦ
		_BMPMENU_MAKE_LIST( msg_debug_07, 90 )	//マップ差し替え
		_BMPMENU_MAKE_LIST( msg_debug_00, 100 )	//やめる
		//メニュー表示
		_BMPMENU_START()
		
		IF $SCWK_ANSWER == 0 THEN
			
			//殿堂入り後にかかる処理を呼び出す
			_GLOBAL_CALL	SCRID_INIT_GAMECLEAR_SCRIPT
			
		ELSIF $SCWK_ANSWER == 1 THEN
			
			_SET_BADGE_FLAG( BADGE_ID_01 )
			_SET_BADGE_FLAG( BADGE_ID_02 )
			_SET_BADGE_FLAG( BADGE_ID_03 )
			_SET_BADGE_FLAG( BADGE_ID_04 )
			_SET_BADGE_FLAG( BADGE_ID_05 )
			_SET_BADGE_FLAG( BADGE_ID_06 )
			_SET_BADGE_FLAG( BADGE_ID_07 )
			_SET_BADGE_FLAG( BADGE_ID_08 )
			
		ELSIF $SCWK_ANSWER == 1 THEN
			
			_FLAG_SET( SYS_FLAG_ARRIVE_T01 )
			_FLAG_SET( SYS_FLAG_ARRIVE_T02 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C01 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C02 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C03 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C04 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C05 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C06 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C07 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C08 )
			_FLAG_SET( SYS_FLAG_ARRIVE_C09 )
			_FLAG_SET( SYS_FLAG_ARRIVE_T03 )
			
		ELSIF $SCWK_ANSWER == 70 THEN
			//イベントジャンプ
			_CALL	ev_event_jump
			$SCWK_TEMP0 = 555
			
		ELSIF $SCWK_ANSWER == 80 THEN
			//イベントＯＦＦ
			_CALL	ev_event_off
			$SCWK_TEMP0 = 555
			
		ELSIF $SCWK_ANSWER == 90 THEN
			//マップ差し替え
			_CALL	ev_change_mapmatrix
			$SCWK_TEMP0 = 555
			
		ELSE
			//やめる
			$SCWK_TEMP0 = 555
			
		ENDIF
	
	ENDWHILE

EVENT_END


