//======================================================================
//                trial_house_scr.ev
//
//    スクリプトファイル：トライアルハウス　trial_house_scr用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "../../message/dst/script/msg_trialhouse.h"
  .include  "c04r0901.h"

//----------------------------------------------------------------------
//               スクリプトテーブル
//----------------------------------------------------------------------

_EVENT_DATA   ev_tri_house_reception
_EVENT_DATA   ev_tri_house_rank_disp
_EVENT_DATA_END

DEFINE_LOCAL loop
DEFINE_LOCAL exit
DEFINE_LOCAL btl_count    //戦闘回数
DEFINE_LOCAL download_flg

//----------------------------------------------------------------------
//               受付
//----------------------------------------------------------------------
EVENT_START ev_tri_house_reception

  DEFINE_LOCAL dl_data_valid
  DEFINE_LOCAL first_list_ret
  DEFINE_LOCAL rank
  

  //トライアルハウススタート
  _TH_START()

  _TALK_OBJ_START()

  {
    DEFINE_LOCAL download_data
    DEFINE_LOCAL dl_data_msg
    //ダウンロードデータのタイプを取得　シングル　or ダブル　or データなし
    _TH_GET_DL_DATA_TYPE( download_data )
    IF $download_data == 1 THEN      //シングル
      $dl_data_msg = msg_trialhouse_022    //「ダウンロードしたシングルバトルする？」
      $dl_data_valid = TRUE
    ELSIF $download_data == 2 THEN   //ダブル
      $dl_data_msg = msg_trialhouse_030    //「ダウンロードしたダブルバトルする？」
      $dl_data_valid = TRUE
    ELSE                            //データ無し        
      $dl_data_valid = FALSE
    ENDIF

    IF $dl_data_valid == TRUE THEN
      _BALLOONWIN_OBJMSG_POS(dl_data_msg, SCWK_TARGET_OBJID, POS_DL )
      _YES_NO_WIN( SCWK_ANSWER )
      _BALLOONWIN_CLOSE()
      IF $SCWK_ANSWER == 0 THEN //ダウンロード挑戦
        $download_flg = TRUE
        _CALL charange
      ELSE                      //挑戦しない
        $exit = TRUE
      ENDIF
    ENDIF  
  }
  
  //ダウンロードデータが無いとき
  IF $dl_data_valid == FALSE THEN
    //ループ初期化
    $loop = TRUE

    //ランク取得
    _TH_GET_RANK(rank)
    //マスターランクになったか？
    IF $rank == TH_RANK_MASTER THEN
      //「ししょう！チャレンジする？」
      _BALLOONWIN_OBJMSG_POS(msg_trialhouse_002, SCWK_TARGET_OBJID, POS_DL )
    ELSE
      //「チャレンジする？」
      _BALLOONWIN_OBJMSG_POS(msg_trialhouse_001, SCWK_TARGET_OBJID, POS_DL )
    ENDIF

    WHILE $loop == TRUE
      $loop = FALSE
      //リスト作成
      _BMPMENU_INIT_EX( 1,1,0,1,first_list_ret )
      _BMPMENU_MAKE_LIST( msg_trialhouse_str1, 0 )    //チャレンジ
      _BMPMENU_MAKE_LIST( msg_trialhouse_str2, 1 )    //せつめい
      _BMPMENU_MAKE_LIST( msg_trialhouse_str8, 2 )    //ダウンロード
      _BMPMENU_MAKE_LIST( msg_trialhouse_str3, 3 )    //やめる
       _BMPMENU_START()
      //ウィンドウ閉じる
      _BALLOONWIN_CLOSE()
      IF $first_list_ret == EV_WIN_B_CANCEL THEN//キャンセル
        //やめるフラグＯＮ
        $exit = TRUE
      ELSE
        SWITCH $first_list_ret
        CASE 0 THEN   //チャレンジ
          //殿堂入りチェック
          IF FLAG_ON( SYS_FLAG_GAME_CLEAR ) THEN    //殿堂入り後
            $download_flg = FALSE
            _CALL charange
          ELSE                                      //殿堂入り前
            //ラストメッセージ「まだ早い」
            _BALLOONWIN_OBJMSG_POS(msg_trialhouse_004, SCWK_TARGET_OBJID, POS_DL )
             _LAST_KEYWAIT()
            _BALLOONWIN_CLOSE()
          ENDIF
        CASE 1 THEN //説明聴く
          $loop = TRUE      //ループフラグ立てる
          //説明メッセージコール
          _CALL explanation
        CASE 2 THEN //ダウンロード
          _CALL download
        CASE 3 THEN //やめる
          //やめるフラグＯＮ
          $exit = TRUE
        ENDSWITCH
      ENDIF
    ENDWHILE

  ENDIF //  $dl_data_valid == FALSE

  IF $exit == TRUE THEN
    //「またこんど」
    _BALLOONWIN_OBJMSG_POS(msg_trialhouse_005, SCWK_TARGET_OBJID, POS_DL )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
  ENDIF

  //トライアルハウス終了
  _TH_END()

EVENT_END

//説明
explanation:
  //説明メッセージ
  _BALLOONWIN_OBJMSG_POS(msg_trialhouse_028, SCWK_TARGET_OBJID, POS_DL )
_RET

charange:
  DEFINE_LOCAL    list_ret
  DEFINE_LOCAL    party_sel
  DEFINE_LOCAL    regulation
  DEFINE_LOCAL    btl_mode
  
  //ダウンロードデータで遊ぶかをセットする
  _TH_SET_DL_FLG( download_flg )

  IF $download_flg == FALSE THEN      //ロムデータのとき
     //シングル？ダブル?
    _BALLOONWIN_OBJMSG_POS(msg_trialhouse_006, SCWK_TARGET_OBJID, POS_DL )
    //リスト作成
    _BMPMENU_INIT_EX( 1,1,0,1,list_ret )
    _BMPMENU_MAKE_LIST( msg_trialhouse_str4, 0 )    //シングル
    _BMPMENU_MAKE_LIST( msg_trialhouse_str5, 1 )    //ダブル
    _BMPMENU_MAKE_LIST( msg_trialhouse_str3, 2 )    //やめる
    _BMPMENU_START()
    //ウィンドウ閉じる
    _BALLOONWIN_CLOSE()

    IF $list_ret == EV_WIN_B_CANCEL THEN  //キャンセル
      //やめるフラグＯＮ
      $exit = TRUE
      _RET
    ELSE
      SWITCH $list_ret
      CASE 0 THEN   //シングル
        $regulation = REG_SUBWAY_SINGLE   //バトルサブウェイシングルレギュレーションで代用
        $btl_mode = TH_PLAYMODE_SINGLE 
      CASE 1 THEN //ダブル
        $regulation = REG_SUBWAY_DOUBLE   //バトルサブウェイダブルレギュレーションで代用
        $btl_mode = TH_PLAYMODE_DOUBLE
      CASE 2 THEN //やめる
        //やめるフラグＯＮ
        $exit = TRUE
      _RET
      ENDSWITCH
    ENDIF
  ELSE                            //ダウンロードデータのとき
    //ダウンロードデータはシングルか？ダブルか？
    {
      DEFINE_LOCAL type
      _TH_GET_DL_DATA_TYPE( type )
      IF $type == TH_DL_DATA_TYPE_SINGLE THEN
        $regulation = REG_SUBWAY_SINGLE   //バトルサブウェイシングルレギュレーションで代用
        $btl_mode = TH_PLAYMODE_SINGLE 
      ELSIF $type == TH_DL_DATA_TYPE_DOUBLE THEN
        $regulation = REG_SUBWAY_DOUBLE   //バトルサブウェイダブルレギュレーションで代用
        $btl_mode = TH_PLAYMODE_DOUBLE
      ELSE
        //ここにくることはないけど
        $regulation = REG_SUBWAY_SINGLE   //バトルサブウェイシングルレギュレーションで代用
        $btl_mode = TH_PLAYMODE_SINGLE 
      ENDIF
    }
  ENDIF

  //戦闘モードセット
  _TH_SET_PLAY_MODE( btl_mode )
  //「早速はじめる」
  _BALLOONWIN_OBJMSG_POS(msg_trialhouse_011, SCWK_TARGET_OBJID, POS_DL )
  _BALLOONWIN_CLOSE()

  //手持ちかバトルボックスか選ぶウィンドウ表示(メンバチェック込み)
  _BTL_UTIL_PARTY_SELECT_CALL( regulation, party_sel )

  IF $party_sel == SCR_BTL_PARTY_SELECT_CANCEL THEN //キャンセル
    //やめるフラグＯＮ
    $exit = TRUE
  ELSIF $party_sel == SCR_BTL_PARTY_SELECT_NG THEN
    //参加できるポケモンがいません
    _BTL_UTIL_PARTY_REGULATION_NG_MSG_CALL( regulation )
    _RET
  ENDIF

  //ポケモンリストコール
  _TH_SEL_POKE(regulation, party_sel, SCWK_ANSWER)

  IF $SCWK_ANSWER == FALSE THEN   //キャンセルした
    //やめるフラグＯＮ
    $exit = TRUE
    _RET
  ENDIF

  //「でははじめるよ」
  _BALLOONWIN_OBJMSG_POS(msg_trialhouse_013, SCWK_TARGET_OBJID, POS_DL )
  _BALLOONWIN_CLOSE()

  //受付係はける
  _OBJ_ANIME( C04R0901_RECEPTION_01, anm_recep_open )
  _OBJ_ANIME_WAIT()
  //自機バトル場に移動
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_mov )
  _OBJ_ANIME_WAIT()
  //受付係中央
  _OBJ_ANIME( C04R0901_RECEPTION_01, anm_recep_center )
  _OBJ_ANIME_WAIT()

  //すれ違い通信用データセット
  _BEACON_SET_REQ_TRIAL_HOUSE_START()

  _CALL battle

  //受付係中央からどく
  _OBJ_ANIME( C04R0901_RECEPTION_01, anm_recep_ret )
  _OBJ_ANIME_WAIT()
  //自機受付に戻る
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_ret )
  _OBJ_ANIME_WAIT()
  //受付係もどる
  _OBJ_ANIME( C04R0901_RECEPTION_01, anm_recep_close )
  _OBJ_ANIME_WAIT()

  IF $SCWK_ANSWER == TRUE THEN
    DEFINE_LOCAL result_rank
    DEFINE_LOCAL before_rank
    DEFINE_LOCAL point       //@note 引数にとっているけど、戻り値としては使用しなくなった。
    DEFINE_LOCAL rank_msg

    //挑戦前ランクを取得
    _TH_GET_RANK( before_rank )

    //「おつかれさま」
    _BALLOONWIN_OBJMSG_POS(msg_trialhouse_014, SCWK_TARGET_OBJID, POS_DL )
    _BALLOONWIN_CLOSE()

    _TH_CALC_BTL_RESULT( result_rank, point )

    //ランクアップしたら、すれ違い通信用データをセット
    IF $before_rank < $result_rank THEN
      _BEACON_SET_REQ_TRIAL_HOUSE_RANK( result_rank )
    ENDIF

    //評価アプリ起動
    {
      _MAP_FADE_BLACK_OUT()
      _MAP_FADE_END_CHECK()
      _FIELD_CLOSE()
      _TH_CALL_RANK_APP(download_flg)
      _FIELD_OPEN()
      _MAP_FADE_BLACK_IN()
      _MAP_FADE_END_CHECK()
    }
    SWITCH $result_rank
    CASE TH_RANK_BEGINNER THEN
      //「ビギナー」
      $rank_msg = msg_trialhouse_021
    CASE TH_RANK_NOVICE THEN
      //「ノービス」
      $rank_msg = msg_trialhouse_020
    CASE TH_RANK_NORMAL THEN
      //「ノーマル」
      $rank_msg = msg_trialhouse_019
    CASE TH_RANK_SUPER THEN
      //「スーパー」
      $rank_msg = msg_trialhouse_018
    CASE TH_RANK_HYPER THEN
      //「ハイパー」
      $rank_msg = msg_trialhouse_017
    CASE TH_RANK_ELITE THEN
      //「エリート」
      $rank_msg = msg_trialhouse_016
    CASE TH_RANK_MASTER THEN
      //「マスター」
      $rank_msg = msg_trialhouse_015
    DEFAULT
      //ここにはこないがビギナーをセットしておく
      $rank_msg = msg_trialhouse_021
    ENDSWITCH

    //ラストメッセージ
    _BALLOONWIN_OBJMSG_POS(rank_msg, SCWK_TARGET_OBJID, POS_DL )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()

    //ダウンロードデータクリア
    IF $download_flg == TRUE THEN
      _TH_CLEAR_DL_DATA()
    ENDIF

  ENDIF
  
_RET

//バトル
battle:
  DEFINE_LOCAL obj_id
  
  $btl_count = 0
  WHILE $btl_count < 5
    //トレーナー抽選
    _TH_SET_TR(btl_count, obj_id)
    //ＯＢＪ追加
    _OBJ_ADD_EX( 7, 0, DIR_DOWN, MMDL_ID_EVENTOBJ_00 , obj_id, MV_DMY )
    //ＯＢＪ移動
    _OBJ_ANIME( MMDL_ID_EVENTOBJ_00, anm_enemy_mov )
    _OBJ_ANIME_WAIT()
    //バトル前メッセージ
    _TH_DISP_BEFORE_MSG()
    //バトル
    _TH_CALL_BATTLE()
    //ＯＢＪ退出
    _OBJ_ANIME( MMDL_ID_EVENTOBJ_00, anm_enemy_ret )
    _OBJ_ANIME_WAIT()
    //ＯＢＪ削除
    _OBJ_DEL(MMDL_ID_EVENTOBJ_00)
    //戦闘回数加算
    $btl_count += 1
    
    IF $btl_count < 5 THEN
      //回復演出
      _CALL recover_anm
    ENDIF

  ENDWHILE
  //５戦後の処理
  $SCWK_ANSWER = TRUE     //５戦消化したので評価してもらう
_RET

//回復演出
recover_anm:
  DEFINE_LOCAL next
  //受付係自機に近づく
  _OBJ_ANIME( C04R0901_RECEPTION_01, anm_recep_to_player )
  //自機受付の方向く
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_down )
  _OBJ_ANIME_WAIT()
  //回復ジングル
  _ME_PLAY( SEQ_ME_ASA )
  _ME_WAIT()

  $next = $btl_count
  $next += 1
  _NUMBER( 0, next, 1 )
  //「つぎは○人目」
  _BALLOONWIN_OBJMSG_POS(msg_trialhouse_029, SCWK_TARGET_OBJID, POS_DL )
  _BALLOONWIN_CLOSE()

  //自機左向く
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_left )
  //受付センターへ
  _OBJ_ANIME( C04R0901_RECEPTION_01, anm_recep_center2 )
  _OBJ_ANIME_WAIT()

_RET


//ダウンロード
download:
  //DSiの通信機能はＯＮになってるか？
  _GET_AVAILABLE_WIRELESS( SCWK_ANSWER )
  //FALSEのとき、無線通信は使えない
  IF $SCWK_ANSWER == FALSE THEN
   	//共通メッセージ呼び出し
    _CHG_COMMON_SCR SCRID_WIRELESS_OFF_MESSAGE
    $exit = TRUE
  ELSE
    //「特別な検定する?」
    _BALLOONWIN_OBJMSG_POS(msg_trialhouse_023, SCWK_TARGET_OBJID, POS_DL )
    _YES_NO_WIN( SCWK_ANSWER )
    _BALLOONWIN_CLOSE()
    IF $SCWK_ANSWER == 0 THEN //特別な検定やる
      IF $SCWK_ANSWER == SCR_FIELD_COMM_EXIT_CANCEL THEN
        _RET
      ELSIF $SCWK_ANSWER == SCR_FIELD_COMM_EXIT_ERROR THEN
        _RET
      ENDIF

      //ビーコンサーチ処理
      _TH_SEARCH_BEACON( SCWK_ANSWER )

      IF $SCWK_ANSWER == FALSE THEN
        //「ダウンロードするものがない」
        _BALLOONWIN_OBJMSG_POS(msg_trialhouse_024, SCWK_TARGET_OBJID, POS_DL )
        //メニュー選択やり直し
        $loop = TRUE
        _RET
      ENDIF
      
      //「ダウンロードしました」
      _BALLOONWIN_OBJMSG_POS(msg_trialhouse_025, SCWK_TARGET_OBJID, POS_DL )
      _BALLOONWIN_CLOSE()
      //「今すぐ挑戦？」
      _BALLOONWIN_OBJMSG_POS(msg_trialhouse_026, SCWK_TARGET_OBJID, POS_DL )
      _YES_NO_WIN( SCWK_ANSWER )
      _BALLOONWIN_CLOSE()
      IF $SCWK_ANSWER == 0 THEN //ダウンロード挑戦
        $download_flg = TRUE
        _CALL charange
      ELSE                      //挑戦しない
        //ラストメッセージ「じゃああとで」
        _BALLOONWIN_OBJMSG_POS(msg_trialhouse_027, SCWK_TARGET_OBJID, POS_DL )
        _LAST_KEYWAIT()
        _BALLOONWIN_CLOSE()
      ENDIF
    ELSE                      //特別な検定やらない
      $exit = TRUE
    ENDIF
  ENDIF
_RET

//--------------------------------------------------------------------
//受付係はける
//--------------------------------------------------------------------
_ANIME_LABEL	anm_recep_open
  _ANIME_DATA	AC_WALK_U_8F,1
  _ANIME_DATA	AC_WALK_L_8F,1
  _ANIME_DATA	AC_STAY_WALK_R_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//自機定位置へ
//--------------------------------------------------------------------
_ANIME_LABEL	anm_player_mov
  _ANIME_DATA	AC_WALK_U_8F,5
  _ANIME_DATA	AC_WALK_R_8F,2
  _ANIME_DATA	AC_STAY_WALK_L_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//受付係中央へ
//--------------------------------------------------------------------
_ANIME_LABEL	anm_recep_center
  _ANIME_DATA	AC_WALK_R_8F,1
  _ANIME_DATA	AC_STAY_WALK_U_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//対戦相手定位置へ
//--------------------------------------------------------------------
_ANIME_LABEL	anm_enemy_mov
  _ANIME_DATA AC_VANISH_OFF,1
  _ANIME_DATA	AC_WALK_D_8F,4
  _ANIME_DATA	AC_WALK_L_8F,2
  _ANIME_DATA	AC_STAY_WALK_R_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//対戦相手もどる
//--------------------------------------------------------------------
_ANIME_LABEL	anm_enemy_ret
  _ANIME_DATA	AC_WALK_R_8F,2
  _ANIME_DATA	AC_WALK_U_8F,4
  _ANIME_DATA AC_VANISH_ON,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//受付係道開ける
//--------------------------------------------------------------------
_ANIME_LABEL	anm_recep_ret
  _ANIME_DATA	AC_WALK_L_8F,1
  _ANIME_DATA	AC_STAY_WALK_R_8F,1
	_ANIME_DATA	ACMD_END,0
  

//--------------------------------------------------------------------
//自機もどる
//--------------------------------------------------------------------
_ANIME_LABEL	anm_player_ret
  _ANIME_DATA	AC_WALK_L_8F,2
  _ANIME_DATA	AC_WALK_D_8F,5
  _ANIME_DATA	AC_STAY_WALK_U_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//受付係もどる
//--------------------------------------------------------------------
_ANIME_LABEL	anm_recep_close
  _ANIME_DATA	AC_WALK_R_8F,1
  _ANIME_DATA	AC_WALK_D_8F,1
	_ANIME_DATA	ACMD_END,0
 
//--------------------------------------------------------------------
//受付係がプレーヤーに近づく
//--------------------------------------------------------------------
_ANIME_LABEL	anm_recep_to_player
  _ANIME_DATA	AC_WALK_R_8F,2
  _ANIME_DATA	AC_WALK_U_8F,2
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//自機下向き
//--------------------------------------------------------------------
_ANIME_LABEL	anm_player_down
  _ANIME_DATA	AC_STAY_WALK_D_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
//自機左向き
//--------------------------------------------------------------------
_ANIME_LABEL	anm_player_left
  _ANIME_DATA	AC_STAY_WALK_L_8F,1
	_ANIME_DATA	ACMD_END,0

 //--------------------------------------------------------------------
//受付係中央へ　バトルとバトルの間
//--------------------------------------------------------------------
_ANIME_LABEL	anm_recep_center2
  _ANIME_DATA	AC_WALK_D_8F,2
  _ANIME_DATA	AC_WALK_L_8F,2
  _ANIME_DATA	AC_STAY_WALK_U_8F,1
	_ANIME_DATA	ACMD_END,0


//----------------------------------------------------------------------
//               ランキング掲示板
//----------------------------------------------------------------------
EVENT_START ev_tri_house_rank_disp
  DEFINE_LOCAL dl_flg
  DEFINE_LOCAL app_call
  DEFINE_LOCAL state
  //ランキングセーブデータの状態を取得
  _TH_GET_RDAT_STATE(state)

  //アプリコールフラグ初期化
  $app_call = FALSE
  IF $state == TH_RDAT_ST_NONE THEN   //データなし
    //「データないよ」
    _SYSWIN_MSG_ALLPUT_DOWN( msg_trialhouse_032 )
    _LAST_KEYWAIT()
    _SYSWIN_CLOSE()
  ELSIF $state == TH_RDAT_ST_ROM THEN   //ＲＯＭデータのみ
    $app_call = TRUE
    $dl_flg = FALSE
  ELSIF $state == TH_RDAT_ST_DL THEN   //ダウンロードのみ
    $app_call = TRUE
    $dl_flg = TRUE
  ELSE                //両方あり
    //「どっちみる？」
    _SYSWIN_MSG_ALLPUT_DOWN( msg_trialhouse_033 )
    //選択しだす
    _BMPMENU_INIT_EX( 1,1,0,1,SCWK_ANSWER )
    _BMPMENU_MAKE_LIST( msg_trialhouse_str9, 0 )    //ROM
    _BMPMENU_MAKE_LIST( msg_trialhouse_str10, 1 )    //ダウンロード
    _BMPMENU_MAKE_LIST( msg_trialhouse_str3, 2 )    //やめる
    _BMPMENU_START()
    _SYSWIN_CLOSE()
     SWITCH $SCWK_ANSWER
     CASE 0 THEN   //ＲＯＭ
      $app_call = TRUE
      $dl_flg = FALSE
     CASE 1 THEN  //ダウンロード
      $app_call = TRUE
      $dl_flg = TRUE
     ENDSWITCH
  ENDIF

  IF $app_call == TRUE THEN
  //評価アプリ起動
  {
    _MAP_FADE_BLACK_OUT()
    _MAP_FADE_END_CHECK()
    _FIELD_CLOSE()
    _TH_CALL_RANK_APP(dl_flg)
    _FIELD_OPEN()
    _MAP_FADE_BLACK_IN()
    _MAP_FADE_END_CHECK()
  }
  ENDIF
EVENT_END

