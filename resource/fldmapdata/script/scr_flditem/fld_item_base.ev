  .include "../../../prog/include/bugfix.h"

//--------------------------------------------------------------------
//  フィールド上のモンスターボール
//  SCWK_TEMP0  アイテムナンバー
//  SCWK_TEMP1  個数
//  SCWK_TEMP2  成功か失敗か
//--------------------------------------------------------------------
ev_fld_item2:
{
  DEFINE_LOCAL item_check
  DEFINE_LOCAL not_illegal_code
  
  _TALK_OBJ_START()
//  _SE_WAIT() //話しかけ開始音の終了待ち
  
  //パラメータ保存
  _LDWK( SCWK_TEMP0, SCWK_REG0 )              //アイテムナンバー
  _LDWK( SCWK_TEMP1, SCWK_REG1 )              //個数
  
  _CHG_COMMON_SCR SCRID_POCKET_ME_SET //MEセット
  
  //アイテムを加えられるかチェック
  _ADD_ITEM_CHK( SCWK_TEMP0, SCWK_TEMP1, item_check )
  
  //自機の表示コードが自機専用のものかどうか
  _CHECK_PLAYER_ILLEGAL_OBJCODE( not_illegal_code )
  
  IF $item_check == 1 THEN //アイテム追加可能
    //話し掛け対象のイベントフラグを取得しセット
    _GET_OBJ_EV_FLAG( SCWK_TARGET_OBJID, SCWK_ANSWER )
    _FLAG_SET( SCWK_ANSWER )
    
    //話しかけ対象のモンスターボールを消す
    _OBJ_DEL( SCWK_TARGET_OBJID )
    
    //BUGFIX_GFBTS2003_20100726
    //フィールドに配置してあるモンスターボールのアイテムを取ると、
    //ボールが一瞬化けます。を修正。
    //下記_TIME_WAIT()を行い、ビルボードアクターの更新を通る事で
    //モンスターボール削除が画面に反映される。
    //
    //これまではこの後のアイテムゲット自機リクエストで行われる
    //通信負荷の画面乱れを防ぐ独自Vブランク待ちにより
    //状況によってはモンスターボールが自機に化ける事があった。
    _TIME_WAIT( 0 ) //0org(コマンド呼び出しで1frame,コマンド実行、終了で1frameの計2フレーム待ち)
    
    //自機ゲットポーズ
    IF $not_illegal_code == TRUE THEN
      _PLAYER_REQUEST( FIELD_PLAYER_REQBIT_ITEMGET )
      _OBJ_ANIME( MMDL_ID_PLAYER, anm_hero_itemget )
    ENDIF
  ENDIF
  
  //入手したアイテムが技マシンかチェック
  _WAZA_ITEM_CHK( SCWK_TEMP0, SCWK_ANSWER )
  
  //○○をみつけた！
  IF $SCWK_ANSWER == 1 THEN
    _CALL ev_itemget_flditem_yes_wazam
  ELSE
    _CALL ev_itemget_flditem_no_wazam
  ENDIF
  
  //取得結果でメッセージを分岐させる
  IF $item_check == 1 THEN
    _CALL ev_itemget_flditem_true    //成功
  ELSE
    _CALL ev_itemget_flditem_false //失敗
  ENDIF
}
_RET

//--------------------------------------------------------------------
//  成功終了
//--------------------------------------------------------------------
ev_itemget_flditem_true:
{
  DEFINE_LOCAL not_illegal_code
  
  //自機の表示コードが自機専用のものかどうか
  _CHECK_PLAYER_ILLEGAL_OBJCODE( not_illegal_code )

  //アイテム追加
  _ADD_ITEM( SCWK_TEMP0, SCWK_TEMP1, SCWK_ANSWER )
  _BEACON_SET_REQ_ITEM_GET( SCWK_TEMP0 )
  
  //ME待ち
  _ME_WAIT()
  
  //自機の表示コードが正常であればアニメ待ち
  IF $not_illegal_code == TRUE THEN
    _OBJ_ANIME_WAIT()
    
    //自機元に戻す
    _CHG_COMMON_SCR SCRID_ITEM_GET_PLAYER_FORM_RETURN
  ENDIF
  
  //MSG キーウェイト
  _AB_KEYWAIT_MARK()
  
  //自機名、アイテム名
  _PLAYER_NAME( 0 )
  _ITEM_NAME( 1, SCWK_TEMP0 )
  
  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID( SCWK_TEMP0, SCWK_ANSWER )
  _POCKET_NAME( 2, SCWK_ANSWER )
  
  //○○ポケットにしまった
  _SYSWIN_MSG( msg_item_get_pocket_nowait, POS_DOWN )
  _LAST_KEYWAIT()
  
  //最後に成功したことをSCWK_ANSWERに代入しておく！
  _LDVAL( SCWK_ANSWER,1 )
  
  //ウィンドウクローズ
  _SYSWIN_CLOSE()
}
_RET

//--------------------------------------------------------------------
//  自機ゲットポーズ
//--------------------------------------------------------------------
_ANIME_LABEL  anm_hero_itemget
  _ANIME_DATA AC_HERO_ITEMGET,1
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------------
//  技マシンかによってメッセージ分岐
//--------------------------------------------------------------------
//「技マシン」
ev_itemget_flditem_yes_wazam:
{
  _PLAYER_NAME( 0 )
  _ITEM_NAME( 1,SCWK_TEMP0 )
  _ITEM_WAZA_NAME( 2,SCWK_TEMP0)
  _SYSWIN_MSG( msg_item_get_field_03 , POS_DOWN )
}
_RET

//「技マシン」以外
ev_itemget_flditem_no_wazam:
{
  _PLAYER_NAME(  0 )
  _ITEM_NAME( 1,SCWK_TEMP0 )
  _SYSWIN_MSG( msg_item_get_field_02 , POS_DOWN )
}
_RET

//--------------------------------------------------------------------
//  失敗終了
//--------------------------------------------------------------------
ev_itemget_flditem_false:
{
  //ME待ち
  _ME_WAIT()

  //MSG キーウェイト
  _AB_KEYWAIT_MARK()
  _ITEM_NAME( 0, SCWK_TEMP0 )
  /*
  _SYSWIN_MSG( msg_item_get_fail_field , POS_DOWN )
  */
  _SYSWIN_MSG( msg_item_get_fail_nowait, POS_DOWN )
  
  _LAST_KEYWAIT()
  _SYSWIN_CLOSE()

  //最後に失敗したことをSCWK_ANSWERに代入しておく！
  _LDVAL( SCWK_ANSWER,0 )
}
_RET
