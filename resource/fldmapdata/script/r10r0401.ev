
//======================================================================
//                r10r0401.ev
//
//    スクリプトファイル：r10r0401用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "msg_r10r0401.h"
  .include  "r10r0401.h"

//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA     ev_r10r0401_veteranm_01
_EVENT_DATA     ev_pos_r10r0401_limitter_01
_EVENT_DATA     ev_zone_r10r0401
_EVENT_DATA     ev_init_r10r0401
_EVENT_DATA     ev_recover_r10r0401
_EVENT_DATA_END


/**************************************************************/
/*            特殊スクリプト：ゾーン切り替えタイミング  　    */
/**************************************************************/
INIT_EVENT_START ev_zone_r10r0401

  IF  FLAG_ON( FE_BADGEGATE04_OPEN ) THEN
    $LOCALWORK0 = 1
  ENDIF
INIT_EVENT_END


/**************************************************************/
/*            特殊スクリプト：マップ構築タイミング（初回）  　*/
/**************************************************************/
INIT_EVENT_START  ev_init_r10r0401
  IF FLAG_ON( FE_BADGEGATE04_OPEN ) THEN
    _BMODEL_DIRECT_ANIME_SET_FINISHED( SCR_BMID_DOOR, 15, 7 )
  ENDIF
INIT_EVENT_END


/**************************************************************/
/*            特殊スクリプト：マップ構築タイミング（毎回）  　*/
/**************************************************************/
INIT_EVENT_START  ev_recover_r10r0401
  IF FLAG_ON( FE_BADGEGATE04_OPEN ) THEN
    _BMODEL_DIRECT_ANIME_SET_FINISHED( SCR_BMID_DOOR, 15, 7 )
  ENDIF
INIT_EVENT_END

/**************************************************************/
/* OBJイベント・バッジチェックゲート                          */
/**************************************************************/
EVENT_START     ev_r10r0401_veteranm_01
  _TALK_OBJ_START()

  IF FLAG_ON( FE_BADGEGATE04_OPEN ) THEN
    //「〜バッジをもつものよ！さきにすすみゆうきをしめせ！」
    _BALLOONWIN_OBJMSG( msg_r10r0401_badge_03, R10R0401_VETERANM )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
  ELSE
    //とりあえず
    _CALL ev_sub_gate_event
  ENDIF

EVENT_END


/**************************************************************/
/* POSイベント・バッジチェックゲート                          */
/**************************************************************/
EVENT_START     ev_pos_r10r0401_limitter_01
  _OBJ_ANIME( R10R0401_VETERANM, anm_turn_to_hero )
  _OBJ_ANIME_WAIT()
  //_TURN_HERO_SITE()

  //待てい！2010.05.06 テンポを良くするためカット
  //_BALLOONWIN_OBJMSG( msg_r10r0401_badge_05, R10R0401_VETERANM )

  _CALL ev_sub_gate_event

  //POSの場合は一歩戻します
  IF $SCWK_ANSWER == FALSE THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_limitter_hero_go_down )
    _OBJ_ANIME_WAIT()
  ENDIF

EVENT_END


/**************************************************************/
/* イベント・バッジチェックゲート（共通部分）                 */
/**************************************************************/
ev_sub_gate_event:
  //「〜バッジをもっているのか？」
  _BALLOONWIN_OBJMSG( msg_r10r0401_badge_01, R10R0401_VETERANM )

  _GET_BADGE_FLAG( SCWK_ANSWER, BADGE_ID_04 )
  IF $SCWK_ANSWER == TRUE THEN

    _FLAG_SET( FE_BADGEGATE04_OPEN )
    //バッジもってる→「うむ！よろしい！」2010.01.29 テンポを良くするためカット
    //_BALLOONWIN_OBJMSG( msg_r10r0401_badge_02, R10R0401_VETERANM )
    //_BALLOONWIN_CLOSE()

    _BALLOONWIN_CLOSE() //カメラ移動前にMSGウィンドウを閉じる
    _CALL ev_sub_gate_open_demo

	  _MAP_CHANGE_NO_FADE( ZONE_ID_R10R0501, 15, 0, 20, DIR_UP )

    _MAP_FADE_BLACK_IN()
    _MAP_FADE_END_CHECK()
    _RET
  ELSE

    //バッジもってない→「まずはてにいれるのだ」（この処理にはシナリオ上来ない）
    _BALLOONWIN_OBJMSG( msg_r10r0401_badge_04, R10R0401_VETERANM )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()

  ENDIF
  _RET


/**************************************************************/
/*  カメラ切り替え→ゲートが開く→自機でていく演出            */
/**************************************************************/
ev_sub_gate_open_demo:
    _CAMERA_START()

    _CAMERA_PURGE() //対象物とカメラのバインドを解く（この場面で対象物＝自機）
    _CAMERA_MOVE_BY_ID( BADGEGATE_CAM_01 , 30 )
    //_CAMERA_MOVE(5720,0,970752,1015808,135168,360448, 60 ) 
    _CAMERA_WAIT_MOVE()

    {
      //ローカル定義
      DEFINE_LOCAL	DOOR_ANIME_ID

      //ゲートアニメ制御
      _BMODEL_ANIME_CREATE( DOOR_ANIME_ID, SCR_BMID_DOOR, 15, 7 )
      _BMODEL_ANIME_SET( DOOR_ANIME_ID, SCR_BMANM_DOOR_OPEN )
      _SE_PLAY( SEQ_SE_FLD_93 )
      _TIME_WAIT( 50 )
      _SE_STOP()
      _SE_PLAY( SEQ_SE_FLD_94 )
      _SE_WAIT()
      _BMODEL_ANIME_WAIT( DOOR_ANIME_ID )

      {
        DEFINE_LOCAL  HEROX
        DEFINE_LOCAL  HEROY
        _PLAYER_POS_GET( HEROX, HEROY )
        //「〜バッジをもつものよ！さきにすすみゆうきをしめせ！」
        IF $HEROX == 19 || $HEROX == 20 THEN
          _BALLOONWIN_OBJMSG_POS( msg_r10r0401_badge_03, R10R0401_VETERANM, POS_UP )
        ELSE
          _BALLOONWIN_OBJMSG_POS( msg_r10r0401_badge_03, R10R0401_VETERANM, POS_UP )
        ENDIF
        _AB_KEYWAIT_MARK()
        _BALLOONWIN_CLOSE()

        SWITCH $HEROX
        CASE 19 THEN
          _OBJ_ANIME( MMDL_ID_PLAYER, anm_walkout_hero_talk_up )
          _OBJ_ANIME_WAIT()
        CASE 20 THEN
          _OBJ_ANIME( MMDL_ID_PLAYER, anm_walkout_hero_talk_left )
          _OBJ_ANIME_WAIT()
        CASE 18 THEN
          _OBJ_ANIME( MMDL_ID_PLAYER, anm_walkout_hero_talk_right )
          _OBJ_ANIME_WAIT()
        DEFAULT
          _OBJ_ANIME( MMDL_ID_PLAYER, anm_walkout_hero_other )
          _OBJ_ANIME_WAIT()
        ENDSWITCH
      }

      //フェードアウト
      _MAP_FADE_BLACK_OUT()
      _MAP_FADE_END_CHECK()

      _BMODEL_ANIME_DELETE( DOOR_ANIME_ID )
    }

    _CAMERA_PURGE() //対象物とカメラのバインドを解く（この場面で対象物＝自機）
    _CAMERA_END()

    _RET

//--------------------------------------------------------------------
//主人公：一歩下がる
//--------------------------------------------------------------------
_ANIME_LABEL  anm_limitter_hero_go_down
	_ANIME_DATA	AC_WALK_D_4F,1
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL  anm_walkout_hero_talk_up
	_ANIME_DATA	AC_WALK_L_8F,4
  _ANIME_DATA AC_WALK_U_8F,4
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL  anm_walkout_hero_talk_left
	_ANIME_DATA	AC_WALK_D_8F,1
	_ANIME_DATA	AC_WALK_L_8F,5
  _ANIME_DATA AC_WALK_U_8F,4
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL  anm_walkout_hero_talk_right
	_ANIME_DATA	AC_WALK_L_8F,3
  _ANIME_DATA AC_WALK_U_8F,3
	_ANIME_DATA	ACMD_END,0


_ANIME_LABEL  anm_walkout_hero_other
  _ANIME_DATA AC_WALK_U_8F,3
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL  anm_turn_to_hero
  _ANIME_DATA AC_DIR_L, 1
  _ANIME_DATA ACMD_END, 0
