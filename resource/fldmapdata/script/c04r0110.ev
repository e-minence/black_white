//======================================================================
//                c04r0110.ev
//    スクリプトファイル：c04r0110用
//  バトルサブウェイ　列車内
//======================================================================

  .text
  .include "scr_seq_def.h"
  .include "msg_c04r0110.h"
  .include "c04r0110.h"
  .include "bsubway_scr_def.h"
  .include "../../../prog/src/field/bsubway_scr_def.h"

//--------------------------------------------------------------
//  スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA ev_init_c04r0110
_EVENT_DATA ev_train_entry_first
_EVENT_DATA ev_train_entry_continue
_EVENT_DATA_END

//======================================================================
//  バトルサブウェイ　列車内　初期化
//======================================================================
//--------------------------------------------------------------
//  列車内　初期化
//--------------------------------------------------------------
INIT_EVENT_START ev_init_c04r0110
{
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL multi_flag
  
  IF $WK_OTHER_BSUBWAY_TRAIN != BSWAY_SCENE_TRAIN_NON  THEN
    //自機非表示
    _BSUBWAY_TOOL( BSWTOOL_OBJ_VANISH, MMDL_ID_PLAYER, TRUE, BSW_NULL )
    
    _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
    _BSUBWAY_TOOL( BSWTOOL_CHK_MODE_MULTI, play_mode, BSW_NULL, multi_flag )
    
    IF $multi_flag == TRUE THEN //マルチか？
      _CALL sub_init_add_trainer_multi
    ELSE //その他
      _CALL sub_init_add_trainer
    ENDIF
    
    //BGMスイッチをラウンド数に合わせてON
    _BSUBWAY_TOOL( BSWSUB_SET_TRAIN_BGM_ROUND_SW, BSW_NULL, BSW_NULL, BSW_NULL )
  ENDIF
}
INIT_EVENT_END

//--------------------------------------------------------------
//  列車内、初期化　トレーナー配置　一人
//--------------------------------------------------------------
sub_init_add_trainer:
{
  DEFINE_LOCAL ver
  DEFINE_LOCAL round

  //トレーナー抽選
  _BSUBWAY_TOOL( BSWSUB_CHOICE_BTL_PARTNER, BSW_NULL, BSW_NULL, BSW_NULL )
   
  //ボスステージか
  _BSUBWAY_TOOL( BSWTOOL_GET_NOW_ROUND, BSW_NULL, BSW_NULL, round )
  _CALL sub_common_check_boss_stage
   
  IF $SCWK_ANSWER == TRUE && $round == BSWAY_CLEAR_WINCNT THEN
    _GET_ROM_VERSION( ver )
    
    IF $ver == VERSION_WHITE THEN
      $OBJCHRWORK2 = TBOSS
    ELSE
      $OBJCHRWORK2 = TBOSSBL
    ENDIF
  ELSE
    _BSUBWAY_TOOL( BSWSUB_GET_ENEMY_OBJ, 0, BSW_NULL, SCWK_ANSWER )
    $OBJCHRWORK2 = $SCWK_ANSWER
  ENDIF
   
  $OBJCHRWORK3 = $OBJCHRWORK2
  
  _OBJ_ADD_EX( 9, 4, DIR_LEFT, BSW_TRAIN_OBJID_TRAINER_0, WKOBJCODE02, MV_DMY )
}
_RET

//--------------------------------------------------------------
//  列車内、初期化　トレーナー配置　マルチ
//--------------------------------------------------------------
sub_init_add_trainer_multi:
{
  DEFINE_LOCAL ver
  DEFINE_LOCAL round
  
  //トレーナー抽選
  _BSUBWAY_TOOL( BSWSUB_CHOICE_BTL_PARTNER, BSW_NULL, BSW_NULL, BSW_NULL )
   
  //ボスステージか
  _BSUBWAY_TOOL( BSWTOOL_GET_NOW_ROUND, BSW_NULL, BSW_NULL, round )
  _CALL sub_common_check_boss_stage
   
  IF $SCWK_ANSWER == TRUE && $round == BSWAY_CLEAR_WINCNT THEN
    _GET_ROM_VERSION( ver )
    
    IF $ver == VERSION_WHITE THEN
      $OBJCHRWORK2 = TBOSS
    ELSE
      $OBJCHRWORK2 = TBOSSBL
    ENDIF

    $OBJCHRWORK3 = $OBJCHRWORK2
  ELSE
    _BSUBWAY_TOOL( BSWSUB_GET_ENEMY_OBJ, 0, BSW_NULL, OBJCHRWORK2 )
    _BSUBWAY_TOOL( BSWSUB_GET_ENEMY_OBJ, 1, BSW_NULL, OBJCHRWORK3 )
  ENDIF
  
  _OBJ_ADD_EX( 9, 4, DIR_LEFT, BSW_TRAIN_OBJID_TRAINER_0, WKOBJCODE02, MV_DMY )
  _OBJ_ADD_EX( 9, 3, DIR_LEFT, BSW_TRAIN_OBJID_TRAINER_1, WKOBJCODE03, MV_DMY )
}
_RET

//======================================================================
//  列車内　ゲーム初回
//======================================================================
//--------------------------------------------------------------
//  列車内　ゲーム初回
//--------------------------------------------------------------
EVENT_START ev_train_entry_first
{
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL multi_flag
  
  $WK_OTHER_BSUBWAY_TRAIN = BSWAY_SCENE_TRAIN_NON

  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_CHK_MODE_MULTI, play_mode, BSW_NULL, multi_flag )

  //自機設置
  IF $multi_flag == TRUE THEN //マルチか？
    _BSUBWAY_TOOL( BSWTOOL_GET_MINE_OBJ, BSW_NULL, BSW_NULL, OBJCHRWORK0 )
    _OBJ_ADD_EX( 4, 4, DIR_RIGHT, BSW_TRAIN_OBJID_JIKI, WKOBJCODE00, MV_DMY )
    //パートナー
    _BSUBWAY_TOOL( BSWTOOL_GET_OBJCODE_PARTNER, BSW_NULL, BSW_NULL, OBJCHRWORK1 )
    _OBJ_ADD_EX( 4, 3, DIR_RIGHT, BSW_TRAIN_OBJID_PARTNER, WKOBJCODE01, MV_DMY )
  ELSE //その他
    _BSUBWAY_TOOL( BSWTOOL_GET_MINE_OBJ, BSW_NULL, BSW_NULL, OBJCHRWORK0 )
    _OBJ_ADD_EX( 4, 4, DIR_RIGHT, BSW_TRAIN_OBJID_JIKI, WKOBJCODE00, MV_DMY )
  ENDIF
  
  //マップフェード
  _MAP_FADE_BLACK_IN()
  _MAP_FADE_END_CHECK()
  
  //自機入場アニメ
  IF $multi_flag == TRUE THEN //マルチか？
    _CALL sub_anm_player_in_first_multi
  ELSE //その他
    _CALL sub_anm_player_in_first
  ENDIF
  
  //対戦
  _CALL sub_train_battle
}
EVENT_END

//--------------------------------------------------------------
//  列車内　ゲーム初回　自機入場アニメ
//--------------------------------------------------------------
sub_anm_player_in_first:
{
/*
  _BSUBWAY_TOOL( BSWTOOL_GET_MINE_OBJ, BSW_NULL, BSW_NULL, OBJCHRWORK0 )
  _OBJ_ADD_EX( 2, 8, DIR_UP, BSW_TRAIN_OBJID_JIKI, WKOBJCODE00, MV_DMY )
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_player_in_first )
  _OBJ_ANIME_WAIT()
*/
}
_RET

_ANIME_LABEL  anm_player_in_first
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WALK_U_8F,4
  _ANIME_DATA AC_WALK_R_8F,2
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  列車内　ゲーム初回　自機入場アニメ　マルチ
//--------------------------------------------------------------
sub_anm_player_in_first_multi:
{
/*
  _BSUBWAY_TOOL( BSWTOOL_GET_MINE_OBJ, BSW_NULL, BSW_NULL, OBJCHRWORK0 )
  
  _OBJ_ADD_EX( 2, 8, DIR_UP, BSW_TRAIN_OBJID_JIKI, WKOBJCODE00, MV_DMY )
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_player_in_first_multi_0 )
  _OBJ_ANIME_WAIT()
  
  $OBJCHRWORK1 = SUPPORT
  _OBJ_ADD_EX( 2, 8, DIR_UP, BSW_TRAIN_OBJID_PARTNER, WKOBJCODE01, MV_DMY )
  
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_player_in_first_multi_1 )
  _OBJ_ANIME( BSW_TRAIN_OBJID_PARTNER, anm_player_in_first_multi_2 )
  _OBJ_ANIME_WAIT()
*/
}
_RET

_ANIME_LABEL  anm_player_in_first_multi_0
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL  anm_player_in_first_multi_1
  _ANIME_DATA AC_WALK_U_8F,3
  _ANIME_DATA AC_WALK_R_8F,2
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL  anm_player_in_first_multi_2
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WALK_U_8F,5
  _ANIME_DATA AC_WALK_R_8F,2
  _ANIME_DATA ACMD_END,0

//======================================================================
//  列車内　ゲーム続きから
//======================================================================
//--------------------------------------------------------------
//  列車内　ゲーム続きから
//--------------------------------------------------------------
EVENT_START ev_train_entry_continue
{
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL multi_flag
  
  $WK_OTHER_BSUBWAY_TRAIN = BSWAY_SCENE_TRAIN_NON
  
  //マップフェード
  _MAP_FADE_BLACK_IN()
  _MAP_FADE_END_CHECK()
  
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_CHK_MODE_MULTI, play_mode, BSW_NULL, multi_flag )
  
  //自機入場アニメ
  IF $multi_flag == TRUE THEN //マルチか？
    _CALL sub_anm_player_in_continue_multi
  ELSE //その他
    _CALL sub_anm_player_in_continue
  ENDIF
  
  //対戦
  _CALL sub_train_battle
}
EVENT_END

//--------------------------------------------------------------
//  列車内　ゲーム続きから　自機入場アニメ
//--------------------------------------------------------------
sub_anm_player_in_continue:
{
  _BSUBWAY_TOOL( BSWTOOL_GET_MINE_OBJ, BSW_NULL, BSW_NULL, OBJCHRWORK0 )
  _OBJ_ADD_EX( 0, 4, DIR_RIGHT, BSW_TRAIN_OBJID_JIKI, WKOBJCODE00, MV_DMY )
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_player_in_continue )
  _OBJ_ANIME_WAIT()
}
_RET

_ANIME_LABEL  anm_player_in_continue
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WALK_R_8F,4
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  列車内　ゲーム続きから　自機入場アニメ　マルチ
//--------------------------------------------------------------
sub_anm_player_in_continue_multi:
{
  _BSUBWAY_TOOL( BSWTOOL_GET_MINE_OBJ, BSW_NULL, BSW_NULL, OBJCHRWORK0 )
  
  _OBJ_ADD_EX( 0, 4, DIR_RIGHT, BSW_TRAIN_OBJID_JIKI, WKOBJCODE00, MV_DMY )
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_player_in_continue_multi0 )
  _OBJ_ANIME_WAIT()
  
  _BSUBWAY_TOOL( BSWTOOL_GET_OBJCODE_PARTNER, BSW_NULL, BSW_NULL, OBJCHRWORK1 )
  _OBJ_ADD_EX( 0, 4, DIR_RIGHT, BSW_TRAIN_OBJID_PARTNER, WKOBJCODE01, MV_DMY )
  
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_player_in_continue_multi1 )
  _OBJ_ANIME( BSW_TRAIN_OBJID_PARTNER, anm_player_in_continue_multi2 )
  _OBJ_ANIME_WAIT()

}
_RET

_ANIME_LABEL  anm_player_in_continue_multi0
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WALK_R_8F,1
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL  anm_player_in_continue_multi1
  _ANIME_DATA AC_WALK_R_8F,3
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL  anm_player_in_continue_multi2
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WALK_R_8F,3
  _ANIME_DATA AC_WALK_U_8F,1
  _ANIME_DATA AC_WALK_R_8F,1
  _ANIME_DATA ACMD_END,0

//======================================================================
//  列車内　対戦
//======================================================================
//--------------------------------------------------------------
//  対戦
//--------------------------------------------------------------
sub_train_battle:
{
  DEFINE_LOCAL debug
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL win_lose
  
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //デバッグ　バトルスキップ
  _BSUBWAY_TOOL( BSWTOOL_DEBUG_CHK_FLAG, BSW_DEBUG_FLAG_BTL_SKIP, BSW_NULL, debug )
  
  IF $debug == TRUE THEN
    SWITCH $play_mode
    CASE BSWAY_MODE_SINGLE THEN
      _CALL sub_anm_battle_start
    CASE BSWAY_MODE_S_SINGLE THEN
      _CALL sub_anm_battle_start
    CASE BSWAY_MODE_DOUBLE THEN
      _CALL sub_anm_battle_start
    CASE BSWAY_MODE_S_DOUBLE THEN
      _CALL sub_anm_battle_start
    CASE BSWAY_MODE_MULTI THEN
      _CALL sub_anm_battle_start_multi
    CASE BSWAY_MODE_S_MULTI THEN
      _CALL sub_anm_battle_start_multi
    CASE BSWAY_MODE_COMM_MULTI THEN
      _CALL sub_anm_battle_start_multi
    CASE BSWAY_MODE_S_COMM_MULTI THEN
      _CALL sub_anm_battle_start_multi
    CASE BSWAY_MODE_WIFI THEN
      _CALL sub_anm_battle_start
    ENDSWITCH
    
    _BLACK_OUT()
    _DISP_FADE_END_CHECK()
    _BLACK_IN()
    _DISP_FADE_END_CHECK()
    _CALL sub_train_battle_win
    _RET
  ENDIF
  
  //戦闘録画データ存在チェック呼び出し
  _BSUBWAY_TOOL( BSWSUB_CALL_BTLREC_EXIST, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //対戦へ
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    _CALL sub_battle_single_double
  CASE BSWAY_MODE_S_SINGLE THEN
    _CALL sub_battle_single_double
  CASE BSWAY_MODE_DOUBLE THEN
    _CALL sub_battle_single_double
  CASE BSWAY_MODE_S_DOUBLE THEN
    _CALL sub_battle_single_double
  CASE BSWAY_MODE_MULTI THEN
    _CALL sub_battle_multi
  CASE BSWAY_MODE_S_MULTI THEN
    _CALL sub_battle_multi
  CASE BSWAY_MODE_COMM_MULTI THEN
    _CALL sub_battle_comm_multi
  CASE BSWAY_MODE_S_COMM_MULTI THEN
    _CALL sub_battle_comm_multi
  CASE BSWAY_MODE_WIFI THEN
    _CALL sub_battle_single_double
  ENDSWITCH
  
  $win_lose = $SCWK_ANSWER
  
  //戦闘復帰　マップフェードイン <-バトル処理で行う
//_MAP_FADE_BLACK_IN()
//_MAP_FADE_END_CHECK()
  
  //回復
  _TEMOTI_POKEMON_KAIFUKU()
  
  //対戦結果
  IF $win_lose == 0 THEN //負け
    _CALL sub_common_retmap_lose_retire
  ELSE //勝ち
    _CALL sub_train_battle_win
  ENDIF
}
_RET

//--------------------------------------------------------------
//  対戦　勝ち
//--------------------------------------------------------------
sub_train_battle_win:
{
  DEFINE_LOCAL play_mode
  
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //連勝数取得
  _BSUBWAY_TOOL( BSWTOOL_GET_RENSHOU_CNT, play_mode, BSW_NULL, SCWK_ANSWER )
  
  //送信ビーコンセット：バトルサブウェイ連勝中
  //挑戦中に一勝するごとに呼んでください
  _BEACON_SET_REQ_SUBWAY_WIN( SCWK_ANSWER )
  
  //ラウンド更新
  _BSUBWAY_TOOL( BSWTOOL_INC_ROUND,BSW_NULL, BSW_NULL,SCWK_ANSWER )
  
  //クリアしてるかチェック
  _BSUBWAY_TOOL( BSWSUB_IS_CLEAR, BSW_NULL, BSW_NULL, SCWK_ANSWER )
  
  IF $SCWK_ANSWER == 1 THEN //クリア
    _CALL sub_train_battle_win_clear
  ELSE //クリアまだ
    _CALL sub_train_battle_win_next
  ENDIF
}
_RET

//--------------------------------------------------------------
//  対戦　勝ち　クリア
//--------------------------------------------------------------
sub_train_battle_win_clear:
{
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL multi_flag
  DEFINE_LOCAL b_clear

  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //ボスクリアフラグOFF
  $b_clear = FALSE
  
  //ボスステージチェック
  _CALL sub_common_check_boss_stage
  
  IF $SCWK_ANSWER == TRUE THEN
    $b_clear = TRUE
  ENDIF
  
  //ボスクリアフラグセット
	_BSUBWAY_TOOL( BSWSUB_SET_PLAY_BOSS_CLEAR, b_clear, BSW_NULL, BSW_NULL )
  
  //クリアした状況を反映
  _BSUBWAY_TOOL( BSWSUB_SET_CLEAR_SCORE, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //退場アニメ
  _BSUBWAY_TOOL( BSWTOOL_CHK_MODE_MULTI, play_mode, BSW_NULL, multi_flag )
  
  IF $multi_flag == TRUE THEN //マルチか？
    _CALL sub_anm_train_battle_win_clear_multi
  ELSE //その他
    _CALL sub_anm_train_battle_win_clear
  ENDIF
  
  //アニメを少し表示しながらフェードアウト
  _TIME_WAIT( 70 )
  _MAP_FADE_BLACK_OUT()
  _MAP_FADE_END_CHECK()
  
  //OBJアニメ待ち
  _OBJ_ANIME_WAIT()

  //フラグセット
  $WK_OTHER_BSUBWAY_HOME = BSWAY_SCENE_HOME_GAME_CLEAR //クリア状態に
  
  //戦闘後のワーク開放
  _BSUBWAY_TOOL( BSWSUB_FREE_BTLPRM, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //マップ遷移
  _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0111, 75, 0, 12, DIR_DOWN )
}
_RET

//--------------------------------------------------------------
//  対戦　勝ち　クリア　自機退場アニメ
//--------------------------------------------------------------
sub_anm_train_battle_win_clear:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_train_battle_win_clear_jiki )
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_0, anm_train_battle_win_clear_trainer )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_train_battle_win_clear_scroll_jiki )
// _OBJ_ANIME_WAIT() //呼び先で待つ
}
_RET

_ANIME_LABEL  anm_train_battle_win_clear_trainer
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_U_8F,2
  _ANIME_DATA  AC_STAY_WALK_D_8F,1
  _ANIME_DATA  ACMD_END,0

_ANIME_LABEL  anm_train_battle_win_clear_jiki 
  _ANIME_DATA  AC_WAIT_8F,1
  _ANIME_DATA  AC_WALK_R_8F,6
  _ANIME_DATA  AC_WALK_D_8F,4
//  _ANIME_DATA  AC_STAY_WALK_D_8F,1
//  _ANIME_DATA  AC_VANISH_ON,1
  _ANIME_DATA  ACMD_END,0

//スクロール用自機アニメ
_ANIME_LABEL anm_train_battle_win_clear_scroll_jiki
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WAIT_8F,1
  _ANIME_DATA AC_WALK_R_6F,4
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  対戦　勝ち　クリア　自機退場アニメ　マルチ
//--------------------------------------------------------------
sub_anm_train_battle_win_clear_multi:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_train_battle_win_clear_multi_jiki )
  _OBJ_ANIME( BSW_TRAIN_OBJID_PARTNER, anm_train_battle_win_clear_multi_partner )
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_0, anm_train_battle_win_clear_multi_trainer0 )
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_1, anm_train_battle_win_clear_multi_trainer1 )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_train_battle_win_clear_scroll_jiki )
  
//  _OBJ_ANIME_WAIT() 呼び先で待つ
}
_RET

_ANIME_LABEL  anm_train_battle_win_clear_multi_trainer0
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_U_8F,2
  _ANIME_DATA  AC_WALK_L_8F,1
  _ANIME_DATA  AC_STAY_WALK_D_8F,1
  _ANIME_DATA  ACMD_END,0

_ANIME_LABEL  anm_train_battle_win_clear_multi_trainer1
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_U_8F,1
  _ANIME_DATA  AC_STAY_WALK_D_8F,1
  _ANIME_DATA  ACMD_END,0
  
_ANIME_LABEL  anm_train_battle_win_clear_multi_jiki 
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_R_8F,6
  _ANIME_DATA  AC_WALK_D_8F,4
  _ANIME_DATA  ACMD_END,0
  
_ANIME_LABEL  anm_train_battle_win_clear_multi_partner
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_R_8F,6
  _ANIME_DATA  AC_WALK_D_8F,4
  _ANIME_DATA  ACMD_END,0

//--------------------------------------------------------------
//  対戦　勝ち　次の車両へ
//--------------------------------------------------------------
sub_train_battle_win_next:
{
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL multi_flag
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_CHK_MODE_MULTI, play_mode, BSW_NULL, multi_flag )
  
  //アニメ　敵下がる、自機回復マシンへ
  IF $multi_flag == TRUE THEN //マルチか？
    _CALL ev_anm_train_battle_win_heal_multi
  ELSE //その他
    _CALL ev_anm_train_battle_win_heal
  ENDIF
  
  //回復SE
  _ME_PLAY( SEQ_ME_ASA )
  _ME_WAIT()
  
  IF $play_mode == BSWAY_MODE_COMM_MULTI THEN
    _CALL sub_train_battle_win_next_menu_comm_multi //通信専用
  ELSIF $play_mode == BSWAY_MODE_S_COMM_MULTI THEN
    _CALL sub_train_battle_win_next_menu_comm_multi //通信専用
  ELSE
    _CALL sub_train_battle_win_next_menu //通常メニュー
  ENDIF
}
_RET

//--------------------------------------------------------------
//  対戦　勝ち　メニュー処理　シングル、ダブル、マルチ、WiFi
//--------------------------------------------------------------
sub_train_battle_win_next_menu:
{
  DEFINE_LOCAL ret
  DEFINE_LOCAL loop
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL multi_flag
  DEFINE_LOCAL flag
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_CHK_MODE_MULTI, play_mode, BSW_NULL, multi_flag )
  
  $loop = 1
  
  WHILE $loop == 1
    //ただいま？連勝…次は？両目　対戦を続けますか
    _BSUBWAY_TOOL( BSWTOOL_GET_RENSHOU_CNT, play_mode, BSW_NULL, SCWK_ANSWER )
    _NUMBER( 0, SCWK_ANSWER, 4 )
    _BSUBWAY_TOOL( BSWTOOL_GET_NEXT_ROUND, BSW_NULL, BSW_NULL, SCWK_ANSWER )
    _NUMBER( 1, SCWK_ANSWER, 1 )
    _SYSWIN_MSG( msg_c04r0110_01 , POS_DOWN )
    
    
    _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 0, SCWK_ANSWER ) //Bキャン無効
    _BMPMENU_MAKE_LIST( msg_c04r0110_02, 0 )  //つづける
    _BMPMENU_MAKE_LIST( msg_c04r0110_03, 1 )  //きろくする
    _BMPMENU_MAKE_LIST( msg_c04r0110_04, 2 )  //やすむ
    _BMPMENU_MAKE_LIST( msg_c04r0110_05, 3 )  //リタイア
    _BMPMENU_START()
    
    SWITCH $SCWK_ANSWER
    CASE 0 THEN //続ける
      //ウィンドウ消す
      _SYSWIN_CLOSE()
      //自機移動アニメ
      IF $multi_flag == TRUE THEN //マルチか？
        _CALL sub_anm_jiki_next_car_multi
      ELSE //その他
        _CALL sub_anm_jiki_next_car
      ENDIF
      
      //フェードアウト
      _MAP_FADE_BLACK_OUT()
      _MAP_FADE_END_CHECK()
      
      //戦闘後のワーク開放
      _BSUBWAY_TOOL( BSWSUB_FREE_BTLPRM, BSW_NULL, BSW_NULL, BSW_NULL )

      //シーン制御を継続に
      $WK_OTHER_BSUBWAY_TRAIN = BSWAY_SCENE_TRAIN_CONTINUE
      //マップチェンジ
      _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0110, 7, 0, 4, DIR_UP )
      $loop = 0
    CASE 1 THEN //記録する
      $flag = TRUE
      _BSUBWAY_TOOL( BSWSUB_CHK_BTLREC_EXIST, BSW_NULL, BSW_NULL, ret )
      
      IF $ret == TRUE THEN //既存ビデオあり
        _SYSWIN_MSG( msg_c04r0110_09 , POS_DOWN )
        _YES_NO_WIN( ret )
        _SYSWIN_CLOSE()
        
        IF $ret == SCR_NO THEN
          $flag = FALSE
        ENDIF
      ENDIF
      
      IF $flag == TRUE THEN
        _SYSWIN_MSG( msg_c04r0110_13, POS_DOWN )
        _BSUBWAY_TOOL( BSWSUB_SAVE_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )
        _PLAYER_NAME( 0 )
        _SYSWIN_MSG( msg_c04r0110_14, POS_DOWN )
        _AB_KEYWAIT()
        _SYSWIN_CLOSE()
      ENDIF
    CASE 2 THEN //休む
      //休むか
      _SYSWIN_MSG( msg_c04r0110_07 , POS_DOWN )
      _YES_NO_WIN( SCWK_ANSWER )
      _SYSWIN_CLOSE()
      
      IF $SCWK_ANSWER == 0 THEN //はい
        //受付コンテニュー状態に
        $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_CONTINUE
        //プレイデータ反映
        _BSUBWAY_TOOL( BSWSUB_SAVE_REST_PLAY_DATA, BSW_NULL, BSW_NULL, BSW_NULL )
        //戦闘後のワーク開放
        _BSUBWAY_TOOL( BSWSUB_FREE_BTLPRM, BSW_NULL, BSW_NULL, BSW_NULL )
        
        //ワーク開放
        _BSUBWAY_WORK_RELEASE()
        //レポート
        _SYSWIN_MSG( msg_c04r0110_08 , POS_DOWN )
        _REPORT_CALL( SCWK_ANSWER )
        //フェードアウト
        _BLACK_OUT()
        _DISP_FADE_END_CHECK()
        _SYSWIN_CLOSE()
        _BSUBWAY_TOOL( BSWTOOL_SYSTEM_RESET, BSW_NULL, BSW_NULL, BSW_NULL )
        _END
      ENDIF
    CASE 3 THEN //リタイア
      //リタイアするか
      _SYSWIN_MSG( msg_c04r0110_06 , POS_DOWN )
      _YES_NO_WIN( SCWK_ANSWER )
      _SYSWIN_CLOSE()
      
      IF $SCWK_ANSWER == 0 THEN
        _CALL sub_common_retmap_lose_retire //受付へ
        $loop = 0
      ENDIF
    ENDSWITCH
  ENDWHILE
}
_RET

//--------------------------------------------------------------
//  対戦　勝ち　メニュー処理　通信マルチ
//--------------------------------------------------------------
sub_train_battle_win_next_menu_comm_multi:
{
  DEFINE_LOCAL ret
  DEFINE_LOCAL loop
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL multi_flag
  DEFINE_LOCAL flag
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_CHK_MODE_MULTI, play_mode, BSW_NULL, multi_flag )
  
  //メニュー表示前の同期
  _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_MENU_START, BSW_NULL, BSW_NULL )
  
  $loop = 1
  
  WHILE $loop == 1
    //ただいま？連勝…次は？両目　対戦を続けますか
    _BSUBWAY_TOOL( BSWTOOL_GET_RENSHOU_CNT, play_mode, BSW_NULL, SCWK_ANSWER )
    _NUMBER( 0, SCWK_ANSWER, 4 )
    _BSUBWAY_TOOL( BSWTOOL_GET_NEXT_ROUND, BSW_NULL, BSW_NULL, SCWK_ANSWER )
    _NUMBER( 1, SCWK_ANSWER, 1 )
    _SYSWIN_MSG( msg_c04r0110_01 , POS_DOWN )
    
    _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 0, SCWK_ANSWER ) //Bキャン無効
    _BMPMENU_MAKE_LIST( msg_c04r0110_02, 0 )  //つづける
    _BMPMENU_MAKE_LIST( msg_c04r0110_03, 1 )  //きろくする
    _BMPMENU_MAKE_LIST( msg_c04r0110_05, 3 )  //リタイア
    _BMPMENU_START()
    _SYSWIN_CLOSE()
    
    $LOCALWORK0 = 0
    
    SWITCH $SCWK_ANSWER
    CASE 0 THEN //続ける
      //お友達の選択を待っています
      _SYSWIN_MSG( msg_c04r0110_10 , POS_DOWN )
      
      //受信バッファクリア
      _BSUBWAY_TOOL( BSWSUB_RECV_BUF_CLEAR, BSW_NULL, BSW_NULL, BSW_NULL )
      
      //選択待ち通信同期
      _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_MENU_SELECT, BSW_NULL, BSW_NULL )
      
      $LOCALWORK0 = BSWAY_COMM_ROUND_SEL_NEXT
      
      //選択結果送信
      _BSUBWAY_TOOL( BSWSUB_COMM_SEND_BUF, BSWAY_COMM_RETIRE_SELECT, LOCALWORK0, BSW_NULL )
      //選択結果受信
      _BSUBWAY_TOOL( BSWSUB_COMM_RECV_BUF, BSWAY_COMM_RETIRE_SELECT, BSW_NULL, LOCALWORK0 )
      
      _SYSWIN_CLOSE()
      
      IF $LOCALWORK0 == BSWAY_COMM_ROUND_SEL_RETIRE THEN //相手リタイア
        _SYSWIN_MSG( msg_c04r0110_12 , POS_DOWN )
        _TIME_WAIT( 30 )
        _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_RETIRE_WAIT, BSW_NULL, BSW_NULL )
        _SYSWIN_CLOSE()
        _CALL sub_common_retmap_lose_retire //受付へ
      ELSE //相手続ける
        //移動アニメ
        _CALL sub_anm_jiki_next_car_multi
        //フェードアウト
        _MAP_FADE_BLACK_OUT()
        _MAP_FADE_END_CHECK()
        
        //戦闘後のワーク開放
        _BSUBWAY_TOOL( BSWSUB_FREE_BTLPRM, BSW_NULL, BSW_NULL, BSW_NULL )

        //シーン制御を継続に
        $WK_OTHER_BSUBWAY_TRAIN = BSWAY_SCENE_TRAIN_CONTINUE
        //マップチェンジ
        _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0110, 7, 0, 4, DIR_UP )
      ENDIF
      
      $loop = 0
    CASE 1 THEN //記録する
      $flag = TRUE
      _BSUBWAY_TOOL( BSWSUB_CHK_BTLREC_EXIST, BSW_NULL, BSW_NULL, ret )
      
      IF $ret == TRUE THEN //既存ビデオあり
        _SYSWIN_MSG( msg_c04r0110_09 , POS_DOWN )
        _YES_NO_WIN( ret )
        _SYSWIN_CLOSE()
        
        IF $ret == SCR_NO THEN
          $flag = FALSE
        ENDIF
      ENDIF
      
      IF $flag == TRUE THEN
        _SYSWIN_MSG( msg_c04r0110_13, POS_DOWN )
        _BSUBWAY_TOOL( BSWSUB_SAVE_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )
        _PLAYER_NAME( 0 )
        _SYSWIN_MSG( msg_c04r0110_14, POS_DOWN )
        _AB_KEYWAIT()
        _SYSWIN_CLOSE()
      ENDIF
    DEFAULT //リタイア
      //リタイアするか
      _SYSWIN_MSG( msg_c04r0110_06 , POS_DOWN )
      _YES_NO_WIN( SCWK_ANSWER )
      _SYSWIN_CLOSE()
      
      IF $SCWK_ANSWER == SCR_YES THEN
        //お友達の選択を待っています
        _SYSWIN_MSG( msg_c04r0110_10 , POS_DOWN )

        //受信バッファクリア
        _BSUBWAY_TOOL( BSWSUB_RECV_BUF_CLEAR, BSW_NULL, BSW_NULL, BSW_NULL )
        
        //選択待ち通信同期
        _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_MENU_SELECT, BSW_NULL, BSW_NULL )
        
        $LOCALWORK0 = BSWAY_COMM_ROUND_SEL_RETIRE
        
        //選択結果送信
        _BSUBWAY_TOOL( BSWSUB_COMM_SEND_BUF, BSWAY_COMM_RETIRE_SELECT, LOCALWORK0, BSW_NULL )
        //選択結果受信
        _BSUBWAY_TOOL( BSWSUB_COMM_RECV_BUF, BSWAY_COMM_RETIRE_SELECT, BSW_NULL, LOCALWORK0 )
        
        //戻ります
        _SYSWIN_MSG( msg_c04r0110_12 , POS_DOWN )
        _TIME_WAIT( 30 )
        _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_RETIRE_WAIT, BSW_NULL, BSW_NULL )
        _SYSWIN_CLOSE()
        _CALL sub_common_retmap_lose_retire //受付へ
        $loop = 0
      ENDIF
    ENDSWITCH
  ENDWHILE
}
_RET

//--------------------------------------------------------------
//  対戦　勝ち　PC回復移動アニメ
//--------------------------------------------------------------
ev_anm_train_battle_win_heal:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_0, anm_train_battle_win_heal_trainer )
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_train_battle_win_heal_jiki )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_train_battle_win_scroll_jiki )
  _OBJ_ANIME_WAIT()
}
_RET

_ANIME_LABEL  anm_train_battle_win_heal_trainer
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_U_8F,2
  _ANIME_DATA  AC_STAY_WALK_D_8F,1
  _ANIME_DATA  ACMD_END,0

_ANIME_LABEL  anm_train_battle_win_heal_jiki
  _ANIME_DATA  AC_WAIT_8F,1
  _ANIME_DATA  AC_WALK_R_8F,8
  _ANIME_DATA  AC_WALK_U_8F,2
  _ANIME_DATA  ACMD_END,0

//スクロール用自機アニメ
_ANIME_LABEL anm_train_battle_win_scroll_jiki
  _ANIME_DATA AC_WAIT_4F,1
  _ANIME_DATA AC_WAIT_8F,1
  _ANIME_DATA AC_WALK_R_8F,6
  _ANIME_DATA AC_WALK_U_8F,2
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  対戦　勝ち　PC回復移動アニメ マルチ
//--------------------------------------------------------------
ev_anm_train_battle_win_heal_multi:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_0, anm_train_battle_win_heal_multi_tr0 )
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_1, anm_train_battle_win_heal_multi_tr1 )
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_train_battle_win_heal_jiki )
  _OBJ_ANIME( BSW_TRAIN_OBJID_PARTNER, anm_train_battle_win_heal_multi_pt )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_train_battle_win_scroll_jiki )
  _OBJ_ANIME_WAIT()
}
_RET

_ANIME_LABEL  anm_train_battle_win_heal_multi_tr0
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_U_8F,2
  _ANIME_DATA  AC_WALK_L_8F,1
  _ANIME_DATA  AC_STAY_WALK_D_8F,1
  _ANIME_DATA  ACMD_END,0

_ANIME_LABEL  anm_train_battle_win_heal_multi_tr1
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_WALK_U_8F,1
  _ANIME_DATA  AC_STAY_WALK_D_8F,1
  _ANIME_DATA  ACMD_END,0

_ANIME_LABEL  anm_train_battle_win_heal_multi_pt
  _ANIME_DATA  AC_WAIT_8F,1
  _ANIME_DATA  AC_WALK_R_8F,7
  _ANIME_DATA  AC_WALK_U_8F,1
  _ANIME_DATA  ACMD_END,0
 
//--------------------------------------------------------------
//  対戦　勝ち　次の車両へ　自機を次の車両へ移動するアニメ
//--------------------------------------------------------------
sub_anm_jiki_next_car:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_jiki_next_car )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_jiki_next_car_scroll )
  _OBJ_ANIME_WAIT()
}
_RET

sub_anm_jiki_next_car_multi:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_jiki_next_car )
  _OBJ_ANIME( BSW_TRAIN_OBJID_PARTNER, anm_jiki_next_car_pt )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_jiki_next_car_scroll )
  _OBJ_ANIME_WAIT()
}
_RET

_ANIME_LABEL anm_jiki_next_car
  _ANIME_DATA AC_WALK_D_8F,2
  _ANIME_DATA AC_WALK_R_8F,1
  _ANIME_DATA AC_STAY_WALK_R_16F,1
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL anm_jiki_next_car_pt
  _ANIME_DATA AC_WALK_D_8F,2
  _ANIME_DATA AC_WALK_R_8F,1
  _ANIME_DATA AC_STAY_WALK_R_16F,1
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//スクロール用アニメ
_ANIME_LABEL anm_jiki_next_car_scroll
  _ANIME_DATA AC_WALK_D_8F,2
  _ANIME_DATA AC_WALK_R_8F,1
  _ANIME_DATA ACMD_END,0

//======================================================================
//  列車内　対戦
//======================================================================
//--------------------------------------------------------------
//  シングル、ダブルバトル
//--------------------------------------------------------------
sub_battle_single_double:
{
  //対戦前台詞
  _BSUBWAY_TOOL( BSWSUB_TRAINER_BEFORE_MSG, 0, BSW_NULL, BSW_NULL )
  
  //互いに近づく
  _CALL sub_anm_battle_start
  
  //バトル呼び出し
  _BSUBWAY_TOOL( BSWSUB_LOCAL_BTL_CALL, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //戦闘録画データを格納
  _BSUBWAY_TOOL( BSWSUB_STORE_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //バトル録画呼び出し うざいとの事で無効
//  _TIME_WAIT( 15 ) //間を入れる
//  _BSUBWAY_TOOL( BSWSUB_CALL_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //戦闘結果をSCWK_ANSWERへ
  _BSUBWAY_TOOL( BSWSUB_GET_BATTLE_RESULT, BSW_NULL, BSW_NULL, SCWK_ANSWER )
}
_RET

//--------------------------------------------------------------
//  マルチバトル
//--------------------------------------------------------------
sub_battle_multi:
{
  //対戦前台詞
  _BSUBWAY_TOOL( BSWSUB_TRAINER_BEFORE_MSG, 0, BSW_NULL, BSW_NULL )
  
  //対戦前台詞
  _BSUBWAY_TOOL( BSWSUB_TRAINER_BEFORE_MSG, 1, BSW_NULL, BSW_NULL )
  
  //互いに近づく
  _CALL sub_anm_battle_start_multi
  
  //バトル呼び出し
  _BSUBWAY_TOOL( BSWSUB_LOCAL_BTL_CALL, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //戦闘録画データを格納
  _BSUBWAY_TOOL( BSWSUB_STORE_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //バトル録画呼び出し うざいとの事で無効
//  _TIME_WAIT( 15 ) //間を入れる
//  _BSUBWAY_TOOL( BSWSUB_CALL_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )

  //結果をSCWK_ANSWERへ
  _BSUBWAY_TOOL( BSWSUB_GET_BATTLE_RESULT, BSW_NULL, BSW_NULL, SCWK_ANSWER )
}
_RET

//--------------------------------------------------------------
//  通信マルチバトル
//--------------------------------------------------------------
sub_battle_comm_multi:
{
  //対戦前台詞
  _BSUBWAY_TOOL( BSWSUB_TRAINER_BEFORE_MSG, 0, BSW_NULL, BSW_NULL )
  
  //対戦前台詞
  _BSUBWAY_TOOL( BSWSUB_TRAINER_BEFORE_MSG, 1, BSW_NULL, BSW_NULL )

  //互いに近づく
  _CALL sub_anm_battle_start_multi
  
  //通信同期
  _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_BATTLE_START, BSW_NULL, BSW_NULL )
  
  //バトル呼び出し
  _BSUBWAY_TOOL( BSWSUB_LOCAL_BTL_CALL, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //戦闘録画データを格納
  _BSUBWAY_TOOL( BSWSUB_STORE_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )

  //バトル録画呼び出し うざいとの事で無効
//  _TIME_WAIT( 15 ) //間を入れる
//  _BSUBWAY_TOOL( BSWSUB_CALL_BTLREC, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //結果をSCWK_ANSWERへ
  _BSUBWAY_TOOL( BSWSUB_GET_BATTLE_RESULT, BSW_NULL, BSW_NULL, SCWK_ANSWER )
}
_RET

//======================================================================
//  共通処理
//======================================================================
//--------------------------------------------------------------
//  敗北、リタイア共通　受付戻り
//--------------------------------------------------------------
sub_common_retmap_lose_retire:
{
  DEFINE_LOCAL play_mode
  
  //受付制御　キャンセルゲームに
  $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_CANCEL
  
  //ゲームモード取得
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //通信マルチの際は終了同期
  IF $play_mode == BSWAY_MODE_COMM_MULTI || $play_mode == BSWAY_MODE_S_COMM_MULTI THEN
    _TIME_WAIT( 30 )
    _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_EXIT_WAIT, BSW_NULL, BSW_NULL )
    
    //通信切断
    _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_ROUND_SIO_END, BSW_NULL, BSW_NULL )
    _BSUBWAY_TOOL( BSWSUB_COMM_END, BSW_NULL, BSW_NULL, BSW_NULL )
  ENDIF
  
  //マップフェードアウト
  _MAP_FADE_BLACK_OUT()
  _MAP_FADE_END_CHECK()
  
  //戦闘後のワーク開放
  _BSUBWAY_TOOL( BSWSUB_FREE_BTLPRM, BSW_NULL, BSW_NULL, BSW_NULL )

  //マップ遷移　受付へ戻る
  _CHG_COMMON_SCR SCRID_BSW_RETMAP_RECEIPT
}
_RET

//--------------------------------------------------------------
//  ボスステージかどうかチェック
//  @retval SCWK_ANSWER TRUE=ボスステージ
//--------------------------------------------------------------
sub_common_check_boss_stage:
{
  DEFINE_LOCAL stage
  DEFINE_LOCAL play_mode
  DEFINE_LOCAL boss_stage
  
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_GET_STAGE_NO, play_mode, BSW_NULL, stage )
  
  //ノーマルは3(2)ステージ、スーパーは7(6)ステージ
  $boss_stage = 255 //none
  
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    $boss_stage = 2
  CASE BSWAY_MODE_DOUBLE THEN
    $boss_stage = 2
  CASE BSWAY_MODE_MULTI THEN
    $boss_stage = 2
  CASE BSWAY_MODE_COMM_MULTI THEN
    $boss_stage = 2
  CASE BSWAY_MODE_S_SINGLE THEN
    $boss_stage = 6
  CASE BSWAY_MODE_S_DOUBLE THEN
    $boss_stage = 6
  CASE BSWAY_MODE_S_MULTI THEN
    $boss_stage = 6
  CASE BSWAY_MODE_S_COMM_MULTI THEN
    $boss_stage = 6
  ENDSWITCH
  
  $SCWK_ANSWER = FALSE
  
  IF $stage == $boss_stage THEN
	  $SCWK_ANSWER = TRUE
  ENDIF
}
_RET

//======================================================================
//  共通処理　アニメ
//======================================================================
//--------------------------------------------------------------
//  アニメ　自機とトレーナーが近づく　シングル、ダブル用
//--------------------------------------------------------------
sub_anm_battle_start:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_battle_start_jiki )
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_0, anm_battle_start_trainer )
  _OBJ_ANIME_WAIT()
}
_RET

//--------------------------------------------------------------
//  アニメ　自機とトレーナーが近づく　マルチ用
//--------------------------------------------------------------
sub_anm_battle_start_multi:
{
  _OBJ_ANIME( BSW_TRAIN_OBJID_JIKI, anm_battle_start_jiki )
  _OBJ_ANIME( BSW_TRAIN_OBJID_PARTNER, anm_battle_start_jiki )
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_0, anm_battle_start_trainer )
  _OBJ_ANIME( BSW_TRAIN_OBJID_TRAINER_1, anm_battle_start_trainer )
  _OBJ_ANIME_WAIT()
}
_RET

_ANIME_LABEL  anm_battle_start_jiki
  _ANIME_DATA  AC_WALK_R_8F,1
  _ANIME_DATA  ACMD_END,0

_ANIME_LABEL  anm_battle_start_trainer
  _ANIME_DATA  AC_WALK_L_8F,1
  _ANIME_DATA  ACMD_END,0
