//======================================================================
//                rotom_change_scr.ev
//
//    スクリプトファイル：rotom_change_scr用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "../../message/dst/script/msg_rotom_wb_scr.h"

//----------------------------------------------------------------------
//               スクリプトテーブル
//----------------------------------------------------------------------
_EVENT_DATA   ev_rotom_change
_EVENT_DATA_END

//----------------------------------------------------------------------
// ローカルワーク
//----------------------------------------------------------------------
DEFINE_LOCAL FORM_NO            // フォルムナンバー
DEFINE_LOCAL SEL_POS            // ポケモンリスト選択位置 or ロトムが見つかった位置
DEFINE_LOCAL END_MSG            // 最後のメッセージＩＤ
DEFINE_LOCAL DEL_SKILL_POS      //忘れさせる技の位置

DEFINE_LOCAL NEW_SKILL      //覚える技
//del_skill_msg内で使用するワーク
DEFINE_LOCAL OLD_SKILL      //忘れる技

//get_org_skill内で使用するワーク
DEFINE_LOCAL TARGET_FORM_NO      //調べるフォルム
DEFINE_LOCAL ORG_SKILL      //調べた結果の固有技


EVENT_START ev_rotom_change
  //ローカルワーク定義
  DEFINE_LOCAL ROTO_NUM            // 手持ちロトムの数

  //ロトムいるか
  _GET_PARTY_POKE_COUNT_BY_MONSNO(MONSNO_ROTOMU, ROTO_NUM)

  IF $ROTO_NUM == 0 THEN
    //ロトムいないときのメッセージ
    $END_MSG = msg_rotom_01
    _CALL end_msg
  ELSE
    //ロトムいれる？
    _SYSWIN_MSG_DOWN(msg_rotom_02)
    _YES_NO_WIN( SCWK_ANSWER )
    _SYSWIN_CLOSE()
    IF $SCWK_ANSWER == 0 THEN
      //手持ちのロトムは２匹以上か？
      IF $ROTO_NUM == 1 THEN    //1匹
        _GET_PARTY_POS( MONSNO_ROTOMU, SCWK_ANSWER, SEL_POS )
        IF $SCWK_ANSWER == TRUE THEN
          //家電選択シーケンスコール
          _CALL select_elec
        ENDIF
      ELSE                      //複数発見
          //「ロトム選んで」
          _SYSWIN_MSG_DOWN(msg_rotom_04)
          _SYSWIN_CLOSE()
          //ポケモン選択
          _SELECT_TEMOTI_POKE( SCWK_ANSWER , SEL_POS , 0 )
          IF $SCWK_ANSWER == TRUE THEN
            _CALL check_poke
          ELSE        //選択しなかった
            //あきらめた
            $END_MSG = msg_rotom_03
            _CALL end_msg
          ENDIF
      ENDIF
    ELSE
      //あきらめた
      $END_MSG = msg_rotom_03
      _CALL end_msg
    ENDIF
  ENDIF  
EVENT_END

//最終メッセージ共通処理
end_msg:
  _SYSWIN_MSG_DOWN( END_MSG )
  _LAST_KEYWAIT()
  _SYSWIN_CLOSE()
_RET

//ポケモンのチェック⇒フォルム変更
check_poke:
  DEFINE_LOCAL SEL_MONS_NO            //選択したポケモンのモンスターナンバー
  //タマゴチェックする
  _CHECK_TEMOTI_EGG( SCWK_ANSWER, SEL_POS )
  IF $SCWK_ANSWER == TRUE THEN
    //タマゴなので終了
    $END_MSG = msg_rotom_06
    _CALL end_msg
  ELSE
    _GET_PARTY_POKE_MONSNO( SEL_MONS_NO, SEL_POS )
    //選んだのはロトム？
    IF $SEL_MONS_NO == MONSNO_ROTOMU THEN
      //家電選択シーケンスコール
      _CALL select_elec
    ELSE
      //「ロトムではない」
      $END_MSG = msg_rotom_05
      _CALL end_msg
    ENDIF
  ENDIF
_RET


//家電選択
select_elec:
  //ローカルワーク定義
  DEFINE_LOCAL ELEC_TO_FORM_NO    // 家電から求めたフォルムナンバー
  DEFINE_LOCAL EXIT            // ループ脱出フラグ
  DEFINE_LOCAL LIST_SEL_RET     //リスト選択項目

  $EXIT = FALSE
  //現在のフォルムを取得
  _GET_PARTY_POKE_FORMNO( FORM_NO, SEL_POS )
  
  _TEMOTI_NICK_NAME( 0, SEL_POS )
  WHILE $EXIT == FALSE
    //どの家電？
    _SYSWIN_MSG_DOWN(msg_rotom_07)
    //リスト作成
    _BMPMENU_INIT_EX( 1,1,0,1,LIST_SEL_RET ) 
    _BMPMENU_MAKE_LIST(msg_rotom_window_01, 1 )          //レンジ
    _BMPMENU_MAKE_LIST(msg_rotom_window_02, 2 )          //洗濯機
    _BMPMENU_MAKE_LIST(msg_rotom_window_04, 3 )          //冷蔵庫
    _BMPMENU_MAKE_LIST(msg_rotom_window_03, 4 )          //扇風機
    _BMPMENU_MAKE_LIST(msg_rotom_window_05, 5 )          //芝刈り機
    _BMPMENU_MAKE_LIST(msg_rotom_normal, 0 )          //元に戻す(ノーマル)
    _BMPMENU_MAKE_LIST( msg_rotom_cancel, 6 )            //やめる
    _BMPMENU_START()
    _SYSWIN_CLOSE()
    
    //やめるを選んだ?
    IF $LIST_SEL_RET == 6 THEN       //やめるを選んだ
      //あきらめた
      $END_MSG = msg_rotom_03
      _CALL end_msg
      _RET
    ENDIF
    
    //選んだ家電をフォルムナンバーに変換
    $ELEC_TO_FORM_NO = $LIST_SEL_RET
    //選んだ家電ごとの固有技をセット
    $TARGET_FORM_NO = $ELEC_TO_FORM_NO    //get_org_skillをコールする準備
    _CALL get_org_skill
    $NEW_SKILL = $ORG_SKILL               //get_org_skillコール結果を格納

    //変換したフォルムナンバーと選択したロトムのフォルムナンバーを比較
    IF $FORM_NO == $ELEC_TO_FORM_NO   THEN       //同じ
      IF $FORM_NO == 0 THEN     //現在ノーマルフォルム
        _SYSWIN_MSG_DOWN(msg_rotom_10)      //モーターに入ってないよ
      ELSE
        _SYSWIN_MSG_DOWN(msg_rotom_08)      //既に入ってるよ
      ENDIF
      _SYSWIN_CLOSE()
    ELSE          //違う
      $EXIT = TRUE
    ENDIF
  ENDWHILE

  //選んだのが「元に戻る」
  IF $ELEC_TO_FORM_NO == 0 THEN
    _SYSWIN_MSG_DOWN(msg_rotom_09)      //モーターからでてきた
    _SYSWIN_CLOSE()
  ELSE
    //忘れる技の選出(SCWK_ANSWER == FALSEでチェンジしない)
    $DEL_SKILL_POS = 0
    _CALL decide_del_skill
  ENDIF

  IF $SCWK_ANSWER == TRUE THEN
    //フォルムチェンジ(図鑑登録含む)
    _CHANGE_ROTOM_FORM_NO( SEL_POS, DEL_SKILL_POS, ELEC_TO_FORM_NO )
  ENDIF

_RET

/**
 * TARGET_FORM_NO に格納されているフォルムナンバーの固有技を
 * ORG_SKILL に格納する
*/
get_org_skill:
  SWITCH $TARGET_FORM_NO
  CASE 0 THEN
    $ORG_SKILL = WAZANO_DENKISYOKKU
  CASE 1 THEN
    $ORG_SKILL = WAZANO_OOBAAHIITO
  CASE 2 THEN
    $ORG_SKILL = WAZANO_HAIDOROPONPU
  CASE 3 THEN
    $ORG_SKILL = WAZANO_HUBUKI
  CASE 4 THEN
    $ORG_SKILL = WAZANO_EASURASSYU
  CASE 5 THEN
    $ORG_SKILL = WAZANO_RIIHUSUTOOMU
  ENDSWITCH
_RET

/**
 * 忘れる技の場所を決定する
 * DEL_SKILL_POS と SCWK_ANSWERを返す
 * SCWK_ANSWER:フォルムチェンジするかどうか
 * DEL_SKILL_POS:忘れる技の位置(ユーザーが選択した場合のみ有効)
*/
decide_del_skill:
  DEFINE_LOCAL CHECK_SKILL

  $TARGET_FORM_NO = $FORM_NO    //get_org_skillをコールする準備
  _CALL get_org_skill
  $CHECK_SKILL = $ORG_SKILL     //get_org_skillコール結果を格納

  //フォルムごとの専用技を調べる
  _CHECK_POKE_WAZA( SCWK_ANSWER, CHECK_SKILL, SEL_POS )
  IF $SCWK_ANSWER == 1 THEN     //固有技覚えている
    $OLD_SKILL = $CHECK_SKILL   //忘れる技セット del_skill_msgをコールする準備
    _CALL del_skill_msg
    $SCWK_ANSWER = TRUE                 //固有技を忘れられるので、チェンジ可
  ELSE                          //固有技を発見できなかった場合
    DEFINE_LOCAL SKILL_NUM      //習得技数
    //取得している技の数を調べる
    _GET_TEMOTI_WAZA_NUM( SKILL_NUM, SEL_POS )
    IF $SKILL_NUM == 4 THEN
      //４つ覚えている
      _CALL select_del_skill
    ELSE
      $SCWK_ANSWER = TRUE               //技スロットに空きがあるので、チェンジ可
      //「新固有技を覚えた」
      _WAZA_NAME( 2, NEW_SKILL )
      _SYSWIN_MSG_DOWN( msg_rotom_waza_07 )
      _SYSWIN_CLOSE()
    ENDIF
  ENDIF

_RET

//技を忘れて、新固有技を覚えるメッセージを表示
del_skill_msg:
  _TEMOTI_NICK_NAME( 0, SEL_POS )
  _WAZA_NAME( 1, OLD_SKILL )
  _WAZA_NAME( 2, NEW_SKILL )
  //「ポカン」
  _SYSWIN_MSG_DOWN( msg_rotom_waza_05 )
  _SYSWIN_CLOSE()
  //「旧固有技を忘れて・・」
  _SYSWIN_MSG_DOWN( msg_rotom_waza_06 )
  _SYSWIN_CLOSE()
  //「新固有技を覚えた」
  $END_MSG = msg_rotom_waza_07
  _CALL end_msg
_RET

//ユーザーに忘れる技を選択させる
select_del_skill:
  DEFINE_LOCAL DECIDE            // ループ脱出フラグ
  $DECIDE = FALSE
  WHILE $DECIDE == FALSE
    _TEMOTI_NICK_NAME( 0, SEL_POS )
    _WAZA_NAME( 1, NEW_SKILL )
    //固有技を覚えたい。4つでいっぱい。技忘れる？
    _SYSWIN_MSG_DOWN( msg_rotom_waza_01 )
    _YES_NO_WIN( SCWK_ANSWER )
    _SYSWIN_CLOSE()
    IF $SCWK_ANSWER == 0 THEN   //忘れる
      //技忘れ
      _SELECT_WAZA_TEMOTI_POKE( SCWK_ANSWER ,DEL_SKILL_POS ,SEL_POS ,0 )
      IF $SCWK_ANSWER == FALSE THEN
        _CALL stop_del_skill
        IF $SCWK_ANSWER == 0 THEN
          $SCWK_ANSWER = FALSE
          $DECIDE = TRUE          //ループ終了
        ENDIF  
      ELSE
        //忘れる技セット del_skill_msgをコールする準備
        _GET_TEMOTI_WAZA_ID( OLD_SKILL ,SEL_POS ,DEL_SKILL_POS )
        _CALL del_skill_msg
        $SCWK_ANSWER = TRUE
        $DECIDE = TRUE            //ループ終了
      ENDIF
    ELSE                        //忘れない
      _CALL stop_del_skill
      IF $SCWK_ANSWER == 0 THEN
        $SCWK_ANSWER = FALSE
        $DECIDE = TRUE          //ループ終了
      ENDIF
    ENDIF    
  ENDWHILE
_RET

//技あきらめる
stop_del_skill:
  _SYSWIN_MSG_DOWN( msg_rotom_waza_02 )
  _YES_NO_WIN( SCWK_ANSWER )
  _SYSWIN_CLOSE()
_RET
