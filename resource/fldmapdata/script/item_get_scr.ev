//====================================================================
//						item_get_scr
//				アイテム取得コモン
//====================================================================

	.text
	.include	"scr_seq_def.h"

  .include  "../../message/dst/script/msg_item_get_scr.h"
	
//--------------------------------------------------------------------
//					     スクリプト本体
//--------------------------------------------------------------------
_EVENT_DATA   ev_easy_item_event
_EVENT_DATA   ev_item_event_success_keywait
_EVENT_DATA   ev_item_event_success_nowait
_EVENT_DATA   ev_item_event_fail_keywait
_EVENT_DATA   ev_item_event_fail_nowait
_EVENT_DATA   ev_item_event_keywait
_EVENT_DATA   ev_item_event_nowait
_EVENT_DATA   ev_item_event_field
_EVENT_DATA   ev_pocket_me_set
_EVENT_DATA   ev_item_get_player_form_set
_EVENT_DATA   ev_item_get_player_form_return
_EVENT_DATA   ev_item_event_hideitem
_EVENT_DATA_END //終了


//====================================================================
///  アイテム入手共通処理
//====================================================================
//--------------------------------------------------------------
//  SCWK_PARAM0 itemno
//  SCWK_PARAM1 num
//  SCWK_PARAM2 flag
//  SCWK_PARAM3 before_msg
//  SCWK_PARAM4 finish_msg
//  SCWK_PARAM5 after_msg
//  SCWK_PARAM6 メッセージアーカイブ指定ID
//--------------------------------------------------------------
//_ASM_EASY_ITEM_EVENT itemno, num, flag, before_msg, finish_msg, after_msg
ev_easy_item_event:
{
  _TALK_OBJ_START()

  IF FLAG_ON($SCWK_PARAM2) THEN
    //再会話メッセージ
    _BALLOONWIN_TALKOBJ_MSG_ARC( SCWK_PARAM6, SCWK_PARAM5 )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
  ELSE    
    //入手前メッセージ
    _BALLOONWIN_TALKOBJ_MSG_ARC( SCWK_PARAM6, SCWK_PARAM3 )
    _AB_KEYWAIT()
    _BALLOONWIN_CLOSE()

    _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, SCWK_ANSWER)
    
    IF $SCWK_ANSWER == FALSE THEN
      //入手失敗システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_fail_keywait
    ELSE
      //入手成功システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_keywait
    ENDIF

    //入手後メッセージ
    _BALLOONWIN_TALKOBJ_MSG_ARC( SCWK_PARAM6, SCWK_PARAM4)
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
    
    //成功にせよ、失敗にせよフラグセット
    _FLAG_SET( SCWK_PARAM2 )

  ENDIF
}
_CHG_LOCAL_SCR

//====================================================================
//				アイテム取得イベント(成功)(送りカーソル待ちあり)
//
//	SCWK_TEMP0	アイテムナンバー
//	SCWK_TEMP1	個数
//====================================================================
ev_item_event_success_keywait:
  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1
	_CALL			sub_item_event_keywait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
	_END

//====================================================================
///				アイテム取得イベント(成功)(送りカーソル待ちなし)
//
//	SCWK_TEMP0	アイテムナンバー
//	SCWK_TEMP1	個数
//====================================================================
ev_item_event_success_nowait:
  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1
	_CALL			sub_item_event_nowait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
	_END

//====================================================================
//				アイテム取得イベント(送りカーソル待ちあり)
//====================================================================
ev_item_event_keywait:
  _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, SCWK_ANSWER)
  IF $SCWK_ANSWER == FALSE THEN
      //入手失敗システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_fail_keywait
  ELSE
      //入手成功システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_keywait
  ENDIF
  _CHG_LOCAL_SCR
  _END

//====================================================================
//				アイテム取得イベント(LAST_KEYWAIT)
//====================================================================
ev_item_event_nowait:
{
  _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, SCWK_ANSWER)
  IF $SCWK_ANSWER == FALSE THEN
    //入手失敗システムメッセージ
    $SCWK_TEMP0 = $SCWK_PARAM0
    $SCWK_TEMP1 = $SCWK_PARAM1
    _CALL   sub_item_event_fail_nowait
  ELSE
	  _CALL		sub_pocket_me_set									//MEセット

    //入手成功システムメッセージ
    $SCWK_TEMP0 = $SCWK_PARAM0
    $SCWK_TEMP1 = $SCWK_PARAM1
    _CALL   sub_item_event_nowait
  ENDIF
}
_CHG_LOCAL_SCR
_END

//====================================================================
//				アイテム取得イベント(フィールドアイテム&LAST_KEYWAIT)
//====================================================================
ev_item_event_field:
_CALL ev_item_event_field_core
_CHG_LOCAL_SCR
_END

//====================================================================
//				隠しアイテム取得イベント(フィールドアイテム&LAST_KEYWAIT)
//====================================================================
ev_item_event_hideitem:
  _CALL ev_item_event_field_core
  IF $SCWK_ANSWER == TRUE THEN
    //フラグ操作
    _FLAG_SET( SCWK_PARAM2 )
  ENDIF
_CHG_LOCAL_SCR
_END

ev_item_event_field_core:
{
  DEFINE_LOCAL  i_get

  _CALL sub_pocket_me_set
  _CALL sub_item_get_player_form_set

  _DEBUG_PRINT_WK( SCWK_PARAM0 )
  _DEBUG_PRINT_WK( SCWK_PARAM1 )
  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1

  _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, i_get)
  _CALL sub_item_event_get_field_msg
  _ME_WAIT()
  _CALL sub_item_get_player_form_return

  _DEBUG_PRINT_WK( i_get )
  IF $i_get == FALSE THEN
    //入手失敗システムメッセージ
    _CALL   sub_item_event_fail_nowait
  ELSE
    //アイテム追加
    _ADD_ITEM( SCWK_PARAM0,SCWK_PARAM1,SCWK_ANSWER )
    _BEACON_SET_REQ_ITEM_GET( SCWK_PARAM0 ) 

    //入手成功システムメッセージ
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_PARAM0 )
    _GET_POCKET_ID( SCWK_TEMP0, SCWK_ANSWER )
    _POCKET_NAME( 2, SCWK_ANSWER )

    _SYSWIN_MSG_DOWN(	msg_item_get_pocket_nowait )
    _LAST_KEYWAIT()
  ENDIF
  _SYSWIN_CLOSE()
  $SCWK_ANSWER = $i_get
  _RET
}

//====================================================================
//				アイテム取得イベント(失敗)(送りキー待ち有り)
//====================================================================
ev_item_event_fail_keywait:
	_CALL			sub_item_event_fail_keywait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
_END

sub_item_event_fail_keywait:
{
	//「ざんねん！バッグがいっぱいだ！▼」
  _SYSWIN_MSG_DOWN(	msg_item_get_fail_keywait )
  _SYSWIN_CLOSE()
}
_RET

//====================================================================
//				アイテム取得イベント(失敗)(LAST_KEYWAIT)
//====================================================================
ev_item_event_fail_nowait:
	_CALL			sub_item_event_fail_nowait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
_END

sub_item_event_fail_nowait:
{
	//「ざんねん！バッグがいっぱいだ！」
  _SYSWIN_MSG_DOWN(	msg_item_get_fail_nowait )
  _LAST_KEYWAIT()
  _SYSWIN_CLOSE()
}
_RET


//--------------------------------------------------------------------
//	送りカーソルあり
//--------------------------------------------------------------------
sub_item_event_keywait:
{
  //アイテム追加
  _ADD_ITEM( SCWK_TEMP0,SCWK_TEMP1,SCWK_ANSWER )

  _CALL	  sub_pocket_me_set									//MEセット
  _CALL   sub_item_event_get_msg
  _ME_WAIT()
	
  _PLAYER_NAME(	0 )
  _ITEM_NAME(	1,SCWK_TEMP0 )

  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )
  _POCKET_NAME(	2,SCWK_ANSWER )

  _SYSWIN_MSG_DOWN(	msg_item_get_pocket_keywait )
  _SYSWIN_CLOSE()
}
_RET

//--------------------------------------------------------------------
//	送りカーソルなし(必ず最後のメッセージになる！)
//--------------------------------------------------------------------
sub_item_event_nowait:
{
  //アイテム追加
  _ADD_ITEM( SCWK_TEMP0,SCWK_TEMP1,SCWK_ANSWER )

  _CALL		sub_pocket_me_set									//MEセット
  _CALL   sub_item_event_get_msg
  _ME_WAIT()

  _PLAYER_NAME(	0 )
  _ITEM_NAME(	1, SCWK_TEMP0 )

  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0, SCWK_ANSWER )
  _POCKET_NAME(	2, SCWK_ANSWER )

  _SYSWIN_MSG_DOWN(	msg_item_get_pocket_nowait )
  _LAST_KEYWAIT()

  _SYSWIN_CLOSE()
}
_RET

//--------------------------------------------------------------------
//--------------------------------------------------------------------
sub_item_event_get_msg:
{
  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )

  IF  $SCWK_ANSWER  == BAG_POCKET_EVENT THEN
    _PLAYER_NAME(	0 )
    _ITEM_NAME(	1,SCWK_TEMP0 )
    _SYSWIN_MSG_DOWN(	msg_item_get_03 )		//たいせつなもの
  ELSE
    _ITEM_NAME(	0,SCWK_TEMP0 )
    _SYSWIN_MSG_DOWN(	msg_item_get_01 )
  ENDIF
}
_RET

sub_item_event_get_field_msg:
{
  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )

  IF  $SCWK_ANSWER  == BAG_POCKET_EVENT THEN
    _PLAYER_NAME(	0 )
    _ITEM_NAME(	1,SCWK_TEMP0 )
    _SYSWIN_MSG_DOWN(	msg_item_get_field_02 )		//たいせつなもの
  ELSE
    _ITEM_NAME(	0,SCWK_TEMP0 )
    _SYSWIN_MSG_DOWN(	msg_item_get_field_01 )
  ENDIF
}
_RET


//--------------------------------------------------------------------
//	アイテム取得MEセット
//--------------------------------------------------------------------
ev_pocket_me_set:
{
  _CALL sub_pocket_me_set
}
_CHG_LOCAL_SCR
_END

sub_pocket_me_set:
{
	//ポケットナンバーをSCWK_ANSWERに代入
	_GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )

  SWITCH    $SCWK_ANSWER
  CASE    BAG_POCKET_EVENT THEN
	    _ME_PLAY(	SEQ_ME_KEYITEM )

  //CASE    BAG_POKE_NORMAL, BAG_POKE_NUTS, BAG_POKE_DRUG, BAG_POKE_BALL, BAG_POKE_BATTLE THEN
  CASE    BAG_POCKET_NORMAL, BAG_POCKET_NUTS, BAG_POCKET_DRUG THEN
	    _ME_PLAY(	SEQ_ME_ITEM )

  CASE    BAG_POCKET_WAZA THEN
	    _ME_PLAY(	SEQ_ME_WAZA )

  ENDSWITCH
}
_RET

//--------------------------------------------------------------------
//自機アイテム取得アニメーション
//--------------------------------------------------------------------
ev_item_get_player_form_set:
  _CALL sub_item_get_player_form_set
_CHG_LOCAL_SCR
_END

ev_item_get_player_form_return:
  _CALL sub_item_get_player_form_return
_CHG_LOCAL_SCR
_END

sub_item_get_player_form_set:
{
  _PLAYER_REQUEST( FIELD_PLAYER_REQBIT_ITEMGET )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_hero_itemget )
  _OBJ_ANIME_WAIT()
}
_RET

sub_item_get_player_form_return:
{
  _PLAYER_REQUEST( FIELD_PLAYER_REQBIT_MOVE_FORM_TO_DRAW_FORM )
}
_RET

//自機ゲットポーズ
_ANIME_LABEL  anm_hero_itemget
  _ANIME_DATA AC_HERO_ITEMGET,1
  _ANIME_DATA ACMD_END,0

