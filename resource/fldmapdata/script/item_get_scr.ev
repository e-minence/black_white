//====================================================================
//						item_get_scr
//				アイテム取得コモン
//====================================================================

	.text
	.include	"scr_seq_def.h"

  .include  "msg_item_get_scr.h"
	
//--------------------------------------------------------------------
//					     スクリプト本体
//--------------------------------------------------------------------
_EVENT_DATA   ev_easy_item_event
_EVENT_DATA   ev_item_event_success_keywait
_EVENT_DATA   ev_item_event_success_nowait
_EVENT_DATA   ev_item_event_fail_keywait
_EVENT_DATA   ev_item_event_fail_nowait
_EVENT_DATA   ev_item_event_keywait
_EVENT_DATA   ev_item_event_nowait
_EVENT_DATA   ev_item_event_field
_EVENT_DATA   ev_pocket_me_set
_EVENT_DATA   ev_item_get_player_form_anime_set
_EVENT_DATA   ev_item_get_player_form_return
_EVENT_DATA   ev_item_event_hideitem
_EVENT_DATA   ev_item_event_intrude_secret
_EVENT_DATA   ev_item_event_prog_call
_EVENT_DATA   ev_item_event_field_keywait
_EVENT_DATA_END //終了


//====================================================================
///  アイテム入手共通処理
//====================================================================
//====================================================================
//  簡易アイテム入手イベント
//
//  SCWK_PARAM0 itemno
//  SCWK_PARAM1 num
//  SCWK_PARAM2 flag
//  SCWK_PARAM3 before_msg
//  SCWK_PARAM4 finish_msg
//  SCWK_PARAM5 after_msg
//  SCWK_PARAM6 メッセージアーカイブ指定ID
//====================================================================
//_ASM_EASY_ITEM_EVENT itemno, num, flag, before_msg, finish_msg, after_msg
ev_easy_item_event:
{
  _TALK_OBJ_START()

  IF FLAG_ON($SCWK_PARAM2) THEN
    //再会話メッセージ
    _BALLOONWIN_TALKOBJ_MSG_ARC( SCWK_PARAM6, SCWK_PARAM5 )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
  ELSE    
    //入手前メッセージ
    _BALLOONWIN_TALKOBJ_MSG_ARC( SCWK_PARAM6, SCWK_PARAM3 )
    _BALLOONWIN_CLOSE()

    _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, SCWK_ANSWER)
    
    IF $SCWK_ANSWER == FALSE THEN
      //入手失敗システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_fail_keywait
    ELSE
      //入手成功システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_keywait
    ENDIF

    //入手後メッセージ
    _BALLOONWIN_TALKOBJ_MSG_ARC( SCWK_PARAM6, SCWK_PARAM4)
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
    
    //成功にせよ、失敗にせよフラグセット
    _FLAG_SET( SCWK_PARAM2 )

  ENDIF
}
_CHG_LOCAL_SCR

//====================================================================
//	アイテム取得イベント(成功)(送りカーソル待ちあり)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
ev_item_event_success_keywait:
  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1
	_CALL			sub_item_event_keywait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
	_END

//====================================================================
//	アイテム取得イベント(成功)(送りカーソル待ちなし)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
ev_item_event_success_nowait:
  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1
	_CALL			sub_item_event_nowait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
	_END

//====================================================================
//	アイテム取得イベント(送りカーソル待ちあり)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
ev_item_event_keywait:
  _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, SCWK_ANSWER)
  IF $SCWK_ANSWER == FALSE THEN
      //入手失敗システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_fail_keywait
  ELSE
      //入手成功システムメッセージ
      $SCWK_TEMP0 = $SCWK_PARAM0
      $SCWK_TEMP1 = $SCWK_PARAM1
      _CALL   sub_item_event_keywait
  ENDIF
  _CHG_LOCAL_SCR
  _END

//====================================================================
//	アイテム取得イベント(LAST_KEYWAIT) コア
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
ev_item_event_nowait_core:
{
  _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, SCWK_ANSWER)
  IF $SCWK_ANSWER == FALSE THEN
    //入手失敗システムメッセージ
    $SCWK_TEMP0 = $SCWK_PARAM0
    $SCWK_TEMP1 = $SCWK_PARAM1
    _CALL   sub_item_event_fail_nowait
  ELSE
    //入手成功システムメッセージ
    $SCWK_TEMP0 = $SCWK_PARAM0
    $SCWK_TEMP1 = $SCWK_PARAM1
	  //_CALL		sub_pocket_me_set									//MEセット

    _CALL   sub_item_event_nowait
  ENDIF
}
_RET

//====================================================================
//	アイテム取得イベント(LAST_KEYWAIT)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
ev_item_event_nowait:
{
  _CALL ev_item_event_nowait_core
}
_CHG_LOCAL_SCR
_END

//====================================================================
//	アイテム取得イベント プログラムからコールする場合専用
//  (アイテム取得&LAST_KEYWAIT)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
EVENT_START ev_item_event_prog_call
{
  _CALL ev_item_event_nowait_core
}
EVENT_END

//====================================================================
//	アイテム取得イベント(フィールドアイテム&LAST_KEYWAIT)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
ev_item_event_field:
_CALL ev_item_event_field_core
_CHG_LOCAL_SCR
_END

//====================================================================
//	隠しアイテム取得イベント(フィールドアイテム&LAST_KEYWAIT)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//  SCWK_PARAM2 対応フラグナンバー
//====================================================================
ev_item_event_hideitem:
  _CALL ev_item_event_field_core
  IF $SCWK_ANSWER == TRUE THEN
    //フラグ操作
    _FLAG_SET( SCWK_PARAM2 )
  ENDIF
_CHG_LOCAL_SCR
_END


//--------------------------------------------------------------------
//  アイテム取得イベント（共通処理）LAST_KEYWAITで終了する
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//--------------------------------------------------------------------
ev_item_event_field_core:
{
  DEFINE_LOCAL  i_get

  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1

  _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, i_get)
  
  IF $i_get == FALSE THEN
    _CALL sub_pocket_me_set
    _CALL sub_item_event_field_get_msg
    _ME_WAIT()
    _AB_KEYWAIT_MARK()
    //入手失敗システムメッセージ
    _CALL   sub_item_event_fail_nowait
  ELSE
    //  隠しアイテムなど取得時のME→ポーズ→MSG→ポーズ終了→キーウェイト
    _CALL   sub_item_event_field_get

    //アイテム追加
    _ADD_ITEM( SCWK_PARAM0,SCWK_PARAM1,SCWK_ANSWER )
    _BEACON_SET_REQ_ITEM_GET( SCWK_PARAM0 ) 

    //「〜にしまった」
    _CALL   sub_item_event_pocket_msg_nowait
  ENDIF
  $SCWK_ANSWER = $i_get
  _RET
}

//====================================================================
//	アイテム取得イベント(フィールドアイテム&▼待ちあり)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//====================================================================
ev_item_event_field_keywait:
_CALL sub_item_event_field_keywait
_CHG_LOCAL_SCR
_END

//--------------------------------------------------------------------
//  アイテム取得イベント(フィールドアイテム&▼待ちあり)
//
//	SCWK_PARAM0	アイテムナンバー
//	SCWK_PARAM1	個数
//--------------------------------------------------------------------
sub_item_event_field_keywait:
{
  DEFINE_LOCAL  i_get

  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1

  _ADD_ITEM_CHK( SCWK_PARAM0, SCWK_PARAM1, i_get)
  
  IF $i_get == FALSE THEN
    _CALL sub_pocket_me_set
    _CALL sub_item_event_field_get_msg
    _ME_WAIT()
    _AB_KEYWAIT_MARK()
    //入手失敗システムメッセージ
    _CALL   sub_item_event_fail_keywait
  ELSE
    //  隠しアイテムなど取得時のME→ポーズ→MSG→ポーズ終了→キーウェイト
    _CALL   sub_item_event_field_get

    //アイテム追加
    _ADD_ITEM( SCWK_PARAM0,SCWK_PARAM1,SCWK_ANSWER )
    _BEACON_SET_REQ_ITEM_GET( SCWK_PARAM0 ) 

    //「〜にしまった」
    _CALL   sub_item_event_pocket_msg_keywait
  ENDIF
  $SCWK_ANSWER = $i_get
  _RET
}

//====================================================================
//	アイテム取得イベント(失敗)(送りキー待ち有り)
//  メッセージ「ざんねん！バッグがいっぱいだ！」
//	SCWK_TEMP0	アイテムナンバー
//====================================================================
ev_item_event_fail_keywait:
	_CALL			sub_item_event_fail_keywait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
_END

//--------------------------------------------------------------------
//--------------------------------------------------------------------
sub_item_event_fail_keywait:
{
  _ITEM_NAME( 0, SCWK_TEMP0 )
  _SYSWIN_MSG(	msg_item_get_fail_keywait , POS_DEFAULT )
  _SYSWIN_CLOSE()
}
_RET

//====================================================================
//	アイテム取得イベント(失敗)(LAST_KEYWAIT)
//  メッセージ「ざんねん！バッグがいっぱいだ！」
//	SCWK_TEMP0	アイテムナンバー
//====================================================================
ev_item_event_fail_nowait:
	_CALL			sub_item_event_fail_nowait
	_CHG_LOCAL_SCR													//ローカルスクリプトに切り替え
_END

//--------------------------------------------------------------------
//--------------------------------------------------------------------
sub_item_event_fail_nowait:
{
  _ITEM_NAME( 0, SCWK_TEMP0 )
  _SYSWIN_MSG(	msg_item_get_fail_nowait , POS_DEFAULT )
  _LAST_KEYWAIT()
  _SYSWIN_CLOSE()
}
_RET


//--------------------------------------------------------------------
//  隠しアイテムなど取得時のME→ポーズ→MSG→ポーズ終了→キーウェイト
//	SCWK_TEMP0	アイテムナンバー
//--------------------------------------------------------------------
sub_item_event_field_get:
{
  DEFINE_LOCAL  not_illegal_code

    _CALL sub_pocket_me_set
    _TIME_WAIT( ITEM_GET_FORM_TIMING )
    
    //自機の表示コードが自機専用のものかどうか
    _CHECK_PLAYER_ILLEGAL_OBJCODE( not_illegal_code )

    IF $not_illegal_code == TRUE THEN
      _CALL sub_item_get_player_form_anime_set
    ENDIF
    
    _CALL sub_item_event_field_get_msg
    _ME_WAIT()
    
    IF $not_illegal_code == TRUE THEN
      _OBJ_ANIME_WAIT()
      _CALL sub_item_get_player_form_return
    ENDIF
    
    _AB_KEYWAIT_MARK()
}
_RET

//--------------------------------------------------------------------
//	アイテム取得イベント(成功)(送りカーソル待ちあり)
//
//	SCWK_TEMP0	アイテムナンバー
//	SCWK_TEMP1	個数
//--------------------------------------------------------------------
sub_item_event_keywait:
{
  //アイテム追加
  _ADD_ITEM( SCWK_TEMP0,SCWK_TEMP1,SCWK_ANSWER )

  _CALL	  sub_pocket_me_set									//MEセット
  _CALL   sub_item_event_get_msg
  _ME_WAIT()
  _AB_KEYWAIT_MARK()
	
  _CALL   sub_item_event_pocket_msg_keywait
}
_RET

//--------------------------------------------------------------------
//	アイテム取得イベント(成功)(送りカーソル待ちなし)
//	送りカーソルなし＝必ず最後のメッセージになる！
//
//	SCWK_TEMP0	アイテムナンバー
//	SCWK_TEMP1	個数
//--------------------------------------------------------------------
sub_item_event_nowait:
{
  //アイテム追加
  _ADD_ITEM( SCWK_TEMP0,SCWK_TEMP1,SCWK_ANSWER )

  _CALL		sub_pocket_me_set									//MEセット
  _CALL   sub_item_event_get_msg
  _ME_WAIT()
  _AB_KEYWAIT_MARK()

  //「〜にしまった」
  _CALL sub_item_event_pocket_msg_nowait
}
_RET

//--------------------------------------------------------------------
//  成功メッセージ「〜をてにいれた！」
//	SCWK_TEMP0	アイテムナンバー
//--------------------------------------------------------------------
sub_item_event_get_msg:
{
  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )

  SWITCH  $SCWK_ANSWER
  CASE ITEMPOCKET_WAZA THEN
    //わざマシンの場合
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_TEMP0 )
    _ITEM_WAZA_NAME( 2, SCWK_TEMP0 )
    _SYSWIN_MSG( msg_item_get_04 , POS_DEFAULT )

  CASE ITEMPOCKET_EVENT THEN
    //アイテムカットイン
    _CALL_ITEM_CUTIN(SCWK_TEMP0)
    //大事なものの場合
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_TEMP0 )
    _SYSWIN_MSG( msg_item_get_02 , POS_DEFAULT )

  DEFAULT
    //それ以外の場合
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_TEMP0 )
    _SYSWIN_MSG( msg_item_get_01 , POS_DEFAULT )

  ENDSWITCH
}
_RET

//--------------------------------------------------------------------
//  メッセージ「〜をみつけた！」
//	SCWK_TEMP0	アイテムナンバー
//--------------------------------------------------------------------
sub_item_event_field_get_msg:
{
  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )

  SWITCH  $SCWK_ANSWER
  CASE ITEMPOCKET_WAZA THEN
    //わざマシンの場合
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_TEMP0 )
    _ITEM_WAZA_NAME( 2, SCWK_TEMP0 )
    _SYSWIN_MSG( msg_item_get_field_03 , POS_DEFAULT )

  CASE ITEMPOCKET_EVENT THEN
    //アイテムカットイン
    _CALL_ITEM_CUTIN(SCWK_TEMP0)
    //大事なものの場合
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_TEMP0 )
    _SYSWIN_MSG( msg_item_get_field_01 , POS_DEFAULT )
  DEFAULT
    //それ以外の場合
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_TEMP0 )
    _SYSWIN_MSG( msg_item_get_field_02 , POS_DEFAULT )

  ENDSWITCH
}
_RET

//--------------------------------------------------------------------
//  成功メッセージ「〜を〜ポケットにしまった」
//	SCWK_TEMP0	アイテムナンバー
//--------------------------------------------------------------------
sub_item_event_pocket_msg_nowait:
  _PLAYER_NAME(	0 )
  _ITEM_NAME(	1, SCWK_TEMP0 )

  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0, SCWK_ANSWER )
  _POCKET_NAME(	2, SCWK_ANSWER )

  _SYSWIN_MSG(	msg_item_get_pocket_nowait , POS_DEFAULT )
  _LAST_KEYWAIT()

  _SYSWIN_CLOSE()
_RET

//--------------------------------------------------------------------
//  成功メッセージ「〜を〜ポケットにしまった」「▼」待ちあり
//	SCWK_TEMP0	アイテムナンバー
//--------------------------------------------------------------------
sub_item_event_pocket_msg_keywait:
  _PLAYER_NAME(	0 )
  _ITEM_NAME(	1,SCWK_TEMP0 )

  //ポケットナンバーをSCWK_ANSWERに代入
  _GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )
  _POCKET_NAME(	2,SCWK_ANSWER )

  _SYSWIN_MSG(	msg_item_get_pocket_keywait , POS_DEFAULT )
  _SYSWIN_CLOSE()
  _RET

//====================================================================
//	アイテム取得MEセット
//
//	SCWK_TEMP0	アイテムナンバー
//====================================================================
ev_pocket_me_set:
{
  _CALL sub_pocket_me_set
}
_CHG_LOCAL_SCR
_END

//--------------------------------------------------------------------
//--------------------------------------------------------------------
sub_pocket_me_set:
{
  //特殊処理・神秘的なアイテム==ダークストーンor ライトストーン入手では特別なMEを鳴らす
  IF $SCWK_TEMP0 == ITEM_RAITOSUTOON || $SCWK_TEMP0 == ITEM_DAAKUSUTOON || $SCWK_TEMP0 == ITEM_GODDOSUTOON || $SCWK_TEMP0 == ITEM_GURASIDEANOHANA THEN
    _ME_PLAY( SEQ_ME_ITEM_MYSTERY )
    _RET
  ENDIF

	//ポケットナンバーをSCWK_ANSWERに代入
	_GET_POCKET_ID(	SCWK_TEMP0,SCWK_ANSWER )

  SWITCH    $SCWK_ANSWER
  CASE    ITEMPOCKET_EVENT THEN
    _ME_PLAY(	SEQ_ME_KEYITEM )

  //CASE    BAG_POKE_NORMAL, BAG_POKE_NUTS, BAG_POKE_DRUG, BAG_POKE_BALL, BAG_POKE_BATTLE THEN
  CASE    ITEMPOCKET_NORMAL, ITEMPOCKET_NUTS, ITEMPOCKET_DRUG THEN
	    _ME_PLAY(	SEQ_ME_ITEM )

  CASE    ITEMPOCKET_WAZA THEN
	    _ME_PLAY(	SEQ_ME_WAZA )

  ENDSWITCH
}
_RET

//====================================================================
//  自機アニメーションセット：アイテム取得
//====================================================================
ev_item_get_player_form_anime_set:
  _CALL sub_item_get_player_form_anime_set
_CHG_LOCAL_SCR
_END

//====================================================================
//自機アニメーション解除：アイテム取得
//====================================================================
ev_item_get_player_form_return:
  _CALL sub_item_get_player_form_return
_CHG_LOCAL_SCR
_END

//--------------------------------------------------------------------
//--------------------------------------------------------------------
sub_item_get_player_form_anime_set:
{
  _PLAYER_REQUEST( FIELD_PLAYER_REQBIT_ITEMGET )
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_hero_itemget )
//_OBJ_ANIME_WAIT() //100323 ゲットポーズと同時にメッセージ表示に変更
}
_RET

//--------------------------------------------------------------------
//--------------------------------------------------------------------
sub_item_get_player_form_return:
{
  _PLAYER_REQUEST( FIELD_PLAYER_REQBIT_MOVE_FORM_TO_DRAW_FORM )
}
_RET

//自機ゲットポーズ
_ANIME_LABEL  anm_hero_itemget
  _ANIME_DATA AC_HERO_ITEMGET,1
  _ANIME_DATA ACMD_END,0


//====================================================================
//    侵入：隠されアイテム取得処理
//
//    IN: SCWK_PARAM0    アイテムナンバー
//    index 2 に隠した人の名前をWORDSET済み
//====================================================================
EVENT_START ev_item_event_intrude_secret
{
  DEFINE_LOCAL  i_get

  $SCWK_TEMP0 = $SCWK_PARAM0
  $SCWK_TEMP1 = $SCWK_PARAM1


  _ADD_ITEM_CHK( SCWK_PARAM0, 1, i_get)
  IF $i_get == FALSE THEN
    _CALL sub_pocket_me_set
    _CALL sub_item_event_field_get_msg
    _ME_WAIT()
    _AB_KEYWAIT_MARK()

    //入手失敗システムメッセージ
    _SYSWIN_MSG(	msg_intrude_secret_item_fail , POS_DEFAULT )
    _LAST_KEYWAIT()
    _SYSWIN_CLOSE()
  ELSE
    //  隠しアイテムなど取得時のME→ポーズ→MSG→ポーズ終了→キーウェイト
    _CALL   sub_item_event_field_get
    //アイテム追加
    _ADD_ITEM( SCWK_PARAM0, 1, SCWK_ANSWER )
    _BEACON_SET_REQ_ITEM_GET( SCWK_PARAM0 ) 

    //入手成功システムメッセージ
    _PLAYER_NAME( 0 )
    _ITEM_NAME( 1, SCWK_PARAM0 )
    _GET_POCKET_ID( SCWK_TEMP0, SCWK_ANSWER )
    _POCKET_NAME( 2, SCWK_ANSWER )

    _SYSWIN_MSG(	msg_item_get_pocket_keywait , POS_DEFAULT )
    _SYSWIN_MSG( msg_intrude_secret_item_01 , POS_DEFAULT )
    _LAST_KEYWAIT()
  ENDIF
  _SYSWIN_CLOSE()
  $SCWK_ANSWER = $i_get
}
EVENT_END

