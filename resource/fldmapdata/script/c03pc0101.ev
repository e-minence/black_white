
//======================================================================
//                c03pc0101.ev
//
//    スクリプトファイル：c03pc0101用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "../../message/dst/script/msg_c03pc0101.h"
  .include  "c03pc0101.h"
  .include  "postman_scr_def.h"

//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA		ev_c03pc0101_woman1_01	//お気に入りポケモン登録イベント
_EVENT_DATA		ev_c03pc0101_businessman_01
_EVENT_DATA		ev_c03pc0101_shop
_EVENT_DATA		ev_c03pc0101_fix_shop
_EVENT_DATA		ev_c03pc0101_tennisw_01
_EVENT_DATA		ev_init_c03pc0101

_EVENT_DATA_END

/************************	  注意	  *************************/
/*															  */
/*	同マップで												  */
/*	LOCALWORK1	…	ジオネットを誘導するイベントで			  */
/*					主人公が入り口から入ってきたかを判別する  */
/*															  */
/*	を使用しました。同マップでの使用を禁止します。			  */
/*															  */
/**************************************************************/

/**************************************************************/
/*            ZONE_INIT_LABEL                              　 */
/**************************************************************/
INIT_EVENT_START	ev_init_c03pc0101
{
	DEFINE_LOCAL LWK_POSX
	DEFINE_LOCAL LWK_POSZ
	
	//主人公の座標取得
	_PLAYER_POS_GET(LWK_POSX,LWK_POSZ)
	
	//ジオネットのお姉さんと話しかけていない
	IF FLAG_OFF( FE_C03PC0101_GEONET ) THEN
		//イベント前なら女性をカウンター前に移動するかのチェック処理へ
		
		//自機の位置によって分岐
		IF $LWK_POSX == 7 && $LWK_POSZ == 12 THEN
			//全滅処理の復帰位置なら女性を動かさない
		ELSE
			//それ以外の位置から入ったなら、お姉さんの位置をカウンターの正面に移動する
			_OBJ_POS_CHANGE( C03PC0101_TENNISW_01, 7, 0, 12, DIR_UP)
			$LOCALWORK1 = 1
		ENDIF
	
	ENDIF
	
	//通常のポケセンではFIELD_INIT_LABEL/FIELD_RECOVER_LABELで
	//直接指定するが、ここでは処理がかぶるため
	//グローバルコールで配達員の出現・消去処理を呼び出し
	_GLOBAL_CALL  SCRID_INIT_POSTMAN
}
INIT_EVENT_END

//=============================================================
//ショップカウンター 変動ショップ
//=============================================================
EVENT_START ev_c03pc0101_shop
  _TALK_OBJ_START()
  _SHOP_CALL()
EVENT_END

//=============================================================
//ショップカウンター 固定ショップ
//=============================================================
EVENT_START ev_c03pc0101_fix_shop
  _TALK_OBJ_START()
  _FIX_SHOP_CALL( C03_FS )
EVENT_END

/**************************************************************/
/* 			ジオネット誘導イベント							  */
/**************************************************************/
EVENT_START		ev_c03pc0101_tennisw_01

	DEFINE_LOCAL LWK_DIR
	DEFINE_LOCAL LWK_GEONET
	
	//プレイヤーの向きを取得
	_PLAYER_DIR_GET( LWK_DIR ) 
	//ジオネットに登録しているかを取得
	_UN_IS_SETTING_MYCOUNTRY( LWK_GEONET )
	
	_TALK_OBJ_START()
	//初回話しかけ時のみ受付の前にいて移動
	IF FLAG_OFF(FE_C03PC0101_GEONET) && $LOCALWORK1 == 1 THEN
	
		//ポケモンの回復？
		_BALLOONWIN_TALKOBJ_MSG(msg_geonet_01)
		_MSGWIN_CLOSE()
	
		//受付から移動する
		SWITCH $LWK_DIR
		CASE DIR_UP, DIR_RIGHT THEN
			_OBJ_ANIME( C03PC0101_TENNISW_01, anm_geonet_avoid_right )
		CASE DIR_LEFT THEN
			_OBJ_ANIME( C03PC0101_TENNISW_01, anm_geonet_avoid_left)
		ENDSWITCH
		_TIME_WAIT(8)
		_OBJ_ANIME_WAIT()
			
	ENDIF

	//アナタ　ジオネット　しってる？
	_BALLOONWIN_OBJMSG_POS(msg_geonet_02,C03PC0101_TENNISW_01,POS_DR)
	_YES_NO_WIN(SCWK_ANSWER)
	
	//ジオネットに登録しているかで分岐。
	IF $SCWK_ANSWER == SCR_YES && $LWK_GEONET == TRUE  THEN
		_BALLOONWIN_OBJMSG_POS(msg_geonet_03,C03PC0101_TENNISW_01,POS_DR)
		_LAST_KEYWAIT()
		_MSGWIN_CLOSE()

	ELSIF $SCWK_ANSWER == SCR_YES && $LWK_GEONET == FALSE  THEN
		_BALLOONWIN_OBJMSG_POS(msg_geonet_04,C03PC0101_TENNISW_01,POS_DR)
		_LAST_KEYWAIT()
		_MSGWIN_CLOSE()
		
	ELSE
		_OBJ_ANIME(C03PC0101_TENNISW_01,anm_geonet_look)
		_OBJ_ANIME_WAIT()
		_BALLOONWIN_OBJMSG_POS(msg_geonet_05,C03PC0101_TENNISW_01,POS_DR)
		_LAST_KEYWAIT()
		_MSGWIN_CLOSE()
		
	ENDIF
	
	//===========フラグワーク操作============//
	//ジオネットのお姉さんと話した
	_FLAG_SET(FE_C03PC0101_GEONET)
	//===========フラグワーク操作============//

EVENT_END

//--------------------------------------------------------------------
// ジオネット                    
//--------------------------------------------------------------------
_ANIME_LABEL	anm_geonet_avoid_right

	_ANIME_DATA AC_WALK_R_8F,2
	_ANIME_DATA AC_STAY_WALK_L_8F,1
	_ANIME_DATA AC_WAIT_8F,1
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL	anm_geonet_avoid_left

	_ANIME_DATA AC_WALK_L_8F,2
	_ANIME_DATA AC_STAY_WALK_R_8F,1
	_ANIME_DATA AC_WAIT_8F,1
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL	anm_geonet_look
	
	_ANIME_DATA AC_STAY_WALK_U_8F,1
	_ANIME_DATA	ACMD_END,0
	
//--------------------------------------------------------------------
// 共通アニメ：びっくりする                    
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_gyoe

	_ANIME_DATA AC_MARK_GYOE,1
	_ANIME_DATA	ACMD_END,0
	
//--------------------------------------------------------------------
// 共通アニメ：右振り向き                   
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_r

	_ANIME_DATA AC_STAY_WALK_R_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
// 共通アニメ：左振り向き                      
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_l

	_ANIME_DATA AC_STAY_WALK_L_8F,1
	_ANIME_DATA	ACMD_END,0
	
//--------------------------------------------------------------------
// 共通アニメ：下振り向き                       
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_d

	_ANIME_DATA AC_STAY_WALK_D_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
// 共通アニメ：上振り向き                       
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_u

	_ANIME_DATA AC_STAY_WALK_U_8F,1
	_ANIME_DATA	ACMD_END,0
	
/**************************************************************/
/* 			BUSINESSMAN	C03PC0101							  */
/**************************************************************/
EVENT_START		ev_c03pc0101_businessman_01
	_EASY_BALLOONWIN_TALKOBJ_MSG( msg_c03pc0101_businessman2_01 )
EVENT_END


/**************************************************************/
/* 				お気に入りポケモン登録イベント				  */
/**************************************************************/
DEFINE_LOCAL LWK_DAME_CHK
DEFINE_LOCAL LWK_EGG_CHK
DEFINE_LOCAL LWK_MONS_NAME

//バトルレコーダーに表示される「お気に入りポケモン」を登録するイベント
//[100225 斉藤マ]イベント追加
EVENT_START		ev_c03pc0101_woman1_01
	_TALK_OBJ_START()
	
	//ダメタマゴの数をチェック
	_GET_PARTY_POKE_COUNT( LWK_DAME_CHK, POKECOUNT_MODE_ONLY_DAME_EGG )
	IF $LWK_DAME_CHK != 0 THEN

		//ダメタマゴがある場合
		_CALL	ev_dame_tamago

	ELSE

		//ダメタマゴが無ければお気に入り登録処理へ
		_CALL	ev_entry_favorite

	ENDIF
	
EVENT_END


//ダメタマゴがある場合
ev_dame_tamago:
	_BALLOONWIN_TALKOBJ_MSG( msg_favorite_06 )
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
_RET


//お気に入りポケモンの登録処理
ev_entry_favorite:

		//あなたのお気に入りは〜〜でしょ？

		_CHECK_TEMOTI_EGG( LWK_EGG_CHK, 0 )		//先頭がタマゴかチェック
		IF $LWK_EGG_CHK == TRUE THEN
			//あなたのお気に入りはタマゴ？
			_BALLOONWIN_TALKOBJ_MSG( msg_favorite_02 )
		ELSE
			//あなたのお気に入りは〜〜？
			_TEMOTI_MONS_NAME( 0, 0 )	//先頭ポケモンの種族名をセット
			_BALLOONWIN_TALKOBJ_MSG( msg_favorite_01 )
		ENDIF

		_YES_NO_WIN( SCWK_ANSWER )

		IF $SCWK_ANSWER == SCR_YES THEN

			//はいなら登録
			_SET_FAVORITE_POKEMON( 0 )
			//でしょでしょ！
			_BALLOONWIN_TALKOBJ_MSG( msg_favorite_03 )

		ELSE

			//いいえなら終了
			IF $LWK_EGG_CHK == TRUE THEN
				//えー タマゴじゃないのー
				_BALLOONWIN_TALKOBJ_MSG( msg_favorite_05 )
			ELSE
				//えー 〜〜じゃないのー！
				_TEMOTI_MONS_NAME( 0, 0 )	//先頭ポケモンの種族名をセット
				_BALLOONWIN_TALKOBJ_MSG( msg_favorite_04 )
			ENDIF

		ENDIF

	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()

_RET

