//======================================================================
//  bsubway.ev
//  スクリプトファイル：バトルサブウェイ　トレインタウンデモ
//======================================================================
  .text
  
  .include  "scr_seq_def.h"
  .include  "../../message/dst/script/msg_bsubway_scr.h"
  .include "../../../prog/src/field/bsubway_scr_def.h"
  
  .include "c04r0102.h"
  .include "c04r0103.h"
  .include "c04r0104.h"
  .include "c04r0105.h"
  .include "c04r0106.h"
  .include "c04r0107.h"
  .include "c04r0108.h"

//--------------------------------------------------------------
//  スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA ev_init_bsw_receipt
_EVENT_DATA ev_recover_bsw_receipt
_EVENT_DATA ev_bsw_posev_receipt_stopper
_EVENT_DATA ev_bsw_receipt_talk
_EVENT_DATA ev_bsw_game_continue
_EVENT_DATA ev_bsw_report_error
_EVENT_DATA ev_bsw_game_cancel
_EVENT_DATA ev_bsw_game_after
_EVENT_DATA ev_bsw_retmap_receipt
_EVENT_DATA ev_init_bsw_ttown
_EVENT_DATA ev_bsw_ttown_receipt_talk
_EVENT_DATA ev_bsw_debug_map_chg_train
_EVENT_DATA_END

//--------------------------------------------------------------
//  共通利用ローカル変数
//--------------------------------------------------------------
DEFINE_LOCAL play_mode
DEFINE_LOCAL objid
DEFINE_LOCAL ret
DEFINE_LOCAL msg_id
DEFINE_LOCAL ai_multi
DEFINE_LOCAL debug_mode

//======================================================================
//  バトルサブウェイ　受付初期化
//======================================================================
//--------------------------------------------------------------
//  受付　初期化
//--------------------------------------------------------------
INIT_EVENT_START ev_init_bsw_receipt
{
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_SET_TRAIN, play_mode, BTRAIN_POS_RECEIPT, BSW_NULL )
  
  SWITCH $WK_OTHER_BSUBWAY_RECEIPT
  CASE BSWAY_SCENE_RECEIPT_CANCEL THEN    //キャンセル
    //デモ用に自機バニッシュ
  CASE BSWAY_SCENE_RECEIPT_AFTER THEN     //ゲーム後
    //デモ用に自機バニッシュ
  CASE BSWAY_SCENE_RECEIPT_ERROR THEN     //エラー
  ENDSWITCH
}
INIT_EVENT_END

//--------------------------------------------------------------
//  受付　復帰
//--------------------------------------------------------------
INIT_EVENT_START ev_recover_bsw_receipt
{
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_SET_TRAIN, play_mode, BTRAIN_POS_RECEIPT, BSW_NULL )
  
  SWITCH $WK_OTHER_BSUBWAY_RECEIPT
  CASE BSWAY_SCENE_RECEIPT_CONTINUE THEN //コンティニュー
    //プレイモード
    _BSUBWAY_TOOL( BSWTOOL_GET_DATA_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
    //AIマルチならばパートナー追加
    IF $play_mode == BSWAY_MODE_MULTI || $play_mode == BSWAY_MODE_S_MULTI THEN
      //セーブデータ有効チェック
      _BSUBWAY_TOOL( BSWTOOL_IS_SAVE_DATA_ENABLE, BSW_NULL, BSW_NULL, SCWK_ANSWER )
      
      //セーブデータ有効ならばパートナー追加
      IF $SCWK_ANSWER == TRUE THEN
        _CALL sub_bsw_common_add_partner
        
        _CALL sub_bsw_common_get_objid_partner
        $objid = $SCWK_ANSWER
        
        //自機話し掛け位置取得
        _CALL sub_bsw_common_check_jiki_talkpos

        //自機の隣に
        SWITCH $SCWK_TEMP2
        CASE DIR_UP THEN
          $SCWK_TEMP0 = 11
          $SCWK_TEMP1 = 14
          $SCWK_TEMP2 = DIR_RIGHT
        CASE DIR_DOWN THEN
          $SCWK_TEMP0 = 11
          $SCWK_TEMP1 = 16
          $SCWK_TEMP2 = DIR_RIGHT
        CASE DIR_LEFT THEN
          $SCWK_TEMP0 = 10
          $SCWK_TEMP1 = 15
          $SCWK_TEMP2 = DIR_RIGHT
        DEFAULT
          $SCWK_TEMP0 = 13
          $SCWK_TEMP1 = 16
          $SCWK_TEMP2 = DIR_UP
        ENDSWITCH
        
        _OBJ_POS_CHANGE( objid, SCWK_TEMP0, 0, SCWK_TEMP1, SCWK_TEMP2 )
      ELSE //エラー
        $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_ERROR
        _CALL sub_bsw_common_del_partner //パートナーOBJ削除
      ENDIF
    ENDIF
  CASE BSWAY_SCENE_RECEIPT_ERROR THEN     //エラー
    $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_ERROR
    _CALL sub_bsw_common_del_partner  //パートナーOBJ削除
  ENDSWITCH
}
INIT_EVENT_END

//======================================================================
//  バトルサブウェイ　POSイベント
//======================================================================
//--------------------------------------------------------------
//  受付ストッパー用POSイベント
//--------------------------------------------------------------
EVENT_START ev_bsw_posev_receipt_stopper
{
  _CALL sub_receipt_demo_stopper
  _TALK_START_SE_PLAY()
  _CALL sub_bsw_receipt_talk
}
EVENT_END

//======================================================================
//  バトルサブウェイ　受付話し掛け
//======================================================================
//--------------------------------------------------------------
//  受付話し掛け
//--------------------------------------------------------------
EVENT_START ev_bsw_receipt_talk
{
  _TALK_OBJ_START()
  _CALL sub_bsw_receipt_talk
}
EVENT_END

//--------------------------------------------------------------
//  受付話し掛け　本体
//--------------------------------------------------------------
sub_bsw_receipt_talk:
{
  _BSUBWAY_WORK_CLEAR() //バトルサブウェイワーク　クリア
  
  //ゾーン別プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  IF $play_mode == BSWAY_MODE_WIFI THEN
    _CALL sub_bsw_receipt_guide_wifi
  ELSE
    _CALL sub_bsw_receipt_guide
  ENDIF
}
_RET

//--------------------------------------------------------------
//  受付話し掛け　案内
//--------------------------------------------------------------
sub_bsw_receipt_guide:
{
  //ようこそ
  _CALL sub_receipt_msg_greet
  
  IF $SCWK_ANSWER == FALSE THEN //事前チェックで不可
    _RET
  ENDIF

  //連勝中メッセージ表示
  _CALL sub_bsw_common_renshou_msg
  
  //選択メニュー
  _CALL sub_receipt_menu_challenge
  
  IF $SCWK_ANSWER == 0 THEN //挑戦する
    _CALL sub_receipt_challenge
  ELSE //やめる
    _CALL sub_bsw_common_exit
  ENDIF
}
_RET

//--------------------------------------------------------------
//  受付話し掛け　案内　wifi
//--------------------------------------------------------------
sub_bsw_receipt_guide_wifi:
{
  //アップロードしていないデータがあるか？
  _BSUBWAY_TOOL( BSWTOOL_WIFI_GET_UPLOAD_FLAG, BSW_NULL, BSW_NULL, ret )
  
  IF $ret == TRUE THEN //未アップロードデータあり
    $SCWK_TEMP0 = msg_bsw_scr_50 //アップロードするか？
    _CALL sub_bsw_common_bwin_receipt
    _YES_NO_WIN( ret )
    
    IF $ret == SCR_YES THEN //アップロードする
      _CALL sub_bsw_receipt_guide_wifi_upload
      _RET
    ENDIF
  ENDIF
  
  //ようこそ
  _CALL sub_receipt_msg_greet
  
  IF $SCWK_ANSWER == FALSE THEN //事前チェックで不可
    _RET
  ENDIF
  
  //wifiランクメッセージ
  _PLAYER_NAME( 0 )
  _BSUBWAY_TOOL( BSWTOOL_GET_WIFI_RANK, BSW_NULL, BSW_NULL, ret )
  _NUMBER( 1, ret, 2 )
  $SCWK_TEMP0 = msg_bsw_scr_49
  _CALL sub_bsw_common_bwin_receipt
  _AB_KEYWAIT()
  
  //選択メニュー
  _CALL sub_receipt_menu_challenge_wifi
  
  SWITCH $SCWK_ANSWER
  CASE 0 THEN //挑戦する
    _BSUBWAY_TOOL( BSWTOOL_WIFI_SET_SEL_DL_BTL, TRUE, BSW_NULL, BSW_NULL )
    _CALL sub_receipt_challenge
  CASE 1 THEN //歴代の記録
    _CALL sub_receipt_rekidai_download
  CASE 2 THEN //前のトレイン
    _BSUBWAY_TOOL( BSWTOOL_WIFI_SET_SEL_DL_BTL, FALSE, BSW_NULL, BSW_NULL )
    _CALL sub_receipt_challenge
  DEFAULT
    _CALL sub_bsw_common_exit
  ENDSWITCH
}
_RET

//--------------------------------------------------------------
//  受付話し掛け　案内　wifiアップロード
//--------------------------------------------------------------
sub_bsw_receipt_guide_wifi_upload:
{
  $SCWK_TEMP0 = msg_bsw_scr_50
  _CALL sub_bsw_common_bwin_receipt
  _YES_NO_WIN( ret )
  
  IF $ret == SCR_YES THEN
    //フィールド通信切断
    _FIELD_COMM_EXIT_EVENT_CALL( ret )
    
    IF $ret == SCR_FIELD_COMM_EXIT_CANCEL THEN
      $ret = FALSE
    ELSIF $ret == SCR_FIELD_COMM_EXIT_ERROR THEN
      $ret = FALSE
    ELSE
      $ret = TRUE
    ENDIF
    
    IF $ret == FALSE THEN //切断失敗
      $SCWK_TEMP0 = msg_bsw_scr_77
      _CALL sub_bsw_common_bwin_receipt
      _AB_KEYWAIT()
    ELSE
      _BSUBWAY_TOOL( BSWTOOL_WIFI_UPLOAD_SCORE, BSW_NULL, BSW_NULL, ret )
      _BSUBWAY_TOOL( BSWTOOL_WIFI_SET_UPLOAD_FLAG, 0, BSW_NULL, ret )
    ENDIF
  ENDIF
  
  _CALL sub_bsw_common_exit
}
_RET

//--------------------------------------------------------------
//  受付話し掛け　案内　歴代データダウンロード
//--------------------------------------------------------------
sub_receipt_rekidai_download:
{
  $SCWK_TEMP0 = msg_bsw_scr_33
  _CALL sub_bsw_common_bwin_receipt
  _YES_NO_WIN( ret )
  
  IF $ret == SCR_YES THEN
    //フィールド通信切断
    _FIELD_COMM_EXIT_EVENT_CALL( ret )
    
    IF $ret == SCR_FIELD_COMM_EXIT_CANCEL THEN
      $ret = FALSE
    ELSIF $ret == SCR_FIELD_COMM_EXIT_ERROR THEN
      $ret = FALSE
    ELSE
      $ret = TRUE
    ENDIF
    
    IF $ret == FALSE THEN //切断失敗
      $SCWK_TEMP0 = msg_bsw_scr_77
      _CALL sub_bsw_common_bwin_receipt
      _AB_KEYWAIT()
    ELSE
      _BSUBWAY_TOOL( BSWTOOL_WIFI_DOWNLOAD_SCDATA, BSW_NULL, BSW_NULL, ret )
      //○○の歴代情報をダウンロードしました
      _BSUBWAY_TOOL(BSWTOOL_WIFI_GET_DL_SCDATA_RANK, BSW_NULL, BSW_NULL, ret )
      _NUMBER( 0, ret, 2 )
      _BSUBWAY_TOOL(BSWTOOL_WIFI_GET_DL_SCDATA_ROOM, BSW_NULL, BSW_NULL, ret )
      _NUMBER( 1, ret, 3 )
      $SCWK_TEMP0 = msg_bsw_scr_52
      _CALL sub_bsw_common_bwin_receipt
      _AB_KEYWAIT()
    ENDIF
  ENDIF
  
  _CALL sub_bsw_common_exit
}
_RET

//=====================================================================
//  受付　挑戦メニュー
//=====================================================================
//--------------------------------------------------------------
//  受付　挑戦メニュー
//  @retval SCWK_ANSWER  0=挑戦する　それ以外=やめる
//--------------------------------------------------------------
sub_receipt_menu_challenge:
{
  $SCWK_ANSWER = 1
  
  WHILE $SCWK_ANSWER == 1
    _CALL sub_receipt_msg_ask_geton
    
    _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
    _BMPMENU_MAKE_LIST( msg_bsw_scr_39, 0 ) //挑戦
    _BMPMENU_MAKE_LIST( msg_bsw_scr_40, 1 ) //説明
    _BMPMENU_MAKE_LIST( msg_bsw_scr_41, 2 ) //やめる
    _BMPMENU_START()
    
    IF $SCWK_ANSWER == 1 THEN //説明文
      _CALL sub_receipt_msg_account
      $SCWK_ANSWER = 1
    ENDIF
  ENDWHILE
}
_RET

//--------------------------------------------------------------
//  受付　挑戦メニュー　wifi
//  @retval SCWK_ANSWER  0=挑戦する それ以外=やめる
//--------------------------------------------------------------
sub_receipt_menu_challenge_wifi:
{
  DEFINE_LOCAL loop
  DEFINE_LOCAL wifi_data
  
  _BSUBWAY_TOOL( BSWTOOL_WIFI_CHK_DL_DATA, BSW_NULL, BSW_NULL, wifi_data )
  
  $loop = TRUE
  
  WHILE $loop == TRUE
    _CALL sub_receipt_msg_ask_geton
    _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
    
    IF $wifi_data == TRUE THEN //データあり
      _BMPMENU_MAKE_LIST( msg_bsw_scr_39, 0 ) //挑戦
      _BMPMENU_MAKE_LIST( msg_bsw_scr_42, 1 ) //歴代
      _BMPMENU_MAKE_LIST( msg_bsw_scr_43, 2 ) //前のトレイン
      _BMPMENU_MAKE_LIST( msg_bsw_scr_40, 3 ) //説明
      _BMPMENU_MAKE_LIST( msg_bsw_scr_41, 4 ) //やめる
    ELSE //ダウンロードデータなし
      _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
      _BMPMENU_MAKE_LIST( msg_bsw_scr_39, 0 ) //挑戦
      _BMPMENU_MAKE_LIST( msg_bsw_scr_42, 1 ) //歴代
      _BMPMENU_MAKE_LIST( msg_bsw_scr_40, 3 ) //説明
      _BMPMENU_MAKE_LIST( msg_bsw_scr_41, 4 ) //やめる
    ENDIF
    
    _BMPMENU_START()
    
    IF $SCWK_ANSWER == 3 THEN //説明文
      _CALL sub_receipt_msg_account
      $SCWK_ANSWER = 3
    ELSE
      $loop = FALSE
    ENDIF
  ENDWHILE
}
_RET

//=====================================================================
//  受付　バトルサブウェイ挑戦
//=====================================================================
//--------------------------------------------------------------
//  受付　挑戦処理
//--------------------------------------------------------------
sub_receipt_challenge:
{
  //ゾーン別プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
   
  //プレイモード別に選択処理
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    _CALL sub_receipt_challenge_single_double
  CASE BSWAY_MODE_DOUBLE THEN
    _CALL sub_receipt_challenge_single_double
  CASE BSWAY_MODE_MULTI THEN
    _CALL sub_receipt_challenge_multi
  CASE BSWAY_MODE_WIFI THEN
    _CALL sub_receipt_challenge_wifi
  CASE BSWAY_MODE_S_SINGLE THEN
    _CALL sub_receipt_challenge_single_double
  CASE BSWAY_MODE_S_DOUBLE THEN
    _CALL sub_receipt_challenge_single_double
  CASE BSWAY_MODE_S_MULTI THEN
    _CALL sub_receipt_challenge_multi
  ENDSWITCH
}
_RET

//--------------------------------------------------------------
//  受付　挑戦処理　シングル、ダブル
//--------------------------------------------------------------
sub_receipt_challenge_single_double:
{
  //ゾーン別プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //ワーク作成
  _BSUBWAY_WORK_CREATE( BSWAY_PLAY_NEW, play_mode )
  
  //手持ちorバトルボックス選択
  _CALL sub_bsw_common_select_btl_box
  
  IF $SCWK_ANSWER == FALSE THEN //参加不可
    _CALL sub_bsw_common_exit
    _RET
  ENDIF
  
  //ポケモン選択
  _CALL sub_bsw_common_pokemon_select
  
  IF $SCWK_ANSWER == 0 THEN //参加不可
    _BSUBWAY_TOOL( BSWTOOL_DEBUG_CHK_FLAG, BSW_DEBUG_FLAG_REGU_OFF, BSW_NULL, debug_mode )
    
    IF $debug_mode == FALSE THEN
      _CALL sub_bsw_common_exit
      _RET
    ELSE
      _BSUBWAY_TOOL( BSWSUB_DEBUG_SET_SELECT_POKE, BSW_NULL, BSW_NULL, BSW_NULL )
    ENDIF
  ENDIF
  
  //フラグ初期化
  _CALL sub_receipt_flag_set_geton_first
  
  //レポート
  _CALL sub_bsw_common_report
  
  IF $SCWK_ANSWER == 1 THEN //キャンセル
    _RET
  ENDIF
  
  //トレーナー抽選
  _BSUBWAY_TOOL( BSWSUB_BTL_TRAINER_SET, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //乗車メッセージ
  _CALL sub_receipt_msg_geton_train
  
  //バトルサブウェイ挑戦中のビーコンセット
  _BEACON_SET_REQ_SUBWAY_START()

  //デモ　出発
  _CALL sub_receipt_demo_start_train
  
  //マップ遷移
  _CALL sub_common_map_change_train
}
_RET

//--------------------------------------------------------------
//  受付　挑戦処理　マルチ
//--------------------------------------------------------------
sub_receipt_challenge_multi:
{
  $play_mode = BSWAY_MODE_MULTI
  
  //ワーク作成
  _BSUBWAY_WORK_CREATE( BSWAY_PLAY_NEW, play_mode )
  
  //手持ちorバトルボックス選択
  _CALL sub_bsw_common_select_btl_box
  
  IF $SCWK_ANSWER == FALSE THEN //参加不可
    _CALL sub_bsw_common_exit
    _RET
  ENDIF
  
  //お友達と一緒に対戦？
  $SCWK_TEMP0 = msg_bsw_scr_48
  _CALL sub_bsw_common_bwin_receipt
  _YES_NO_WIN( SCWK_ANSWER )
  
  //通信ならワーク切り替え
  IF $SCWK_ANSWER == SCR_YES THEN
    $play_mode = BSWAY_MODE_COMM_MULTI
    _BSUBWAY_TOOL( BSWSUB_CHG_WORK_COMM_MULTI_MODE, BSW_NULL, BSW_NULL, BSW_NULL )
  ENDIF
  
  //ポケモン選択
  _CALL sub_bsw_common_pokemon_select
  
  IF $SCWK_ANSWER == 0 THEN //参加不可
    _BSUBWAY_TOOL( BSWTOOL_DEBUG_CHK_FLAG, BSW_DEBUG_FLAG_REGU_OFF, BSW_NULL, debug_mode )
    IF $debug_mode == FALSE THEN
      _RET
    ELSE
      _BSUBWAY_TOOL( BSWSUB_DEBUG_SET_SELECT_POKE, BSW_NULL, BSW_NULL, BSW_NULL )
    ENDIF
  ENDIF
  
  //フラグ初期化
  _CALL sub_receipt_flag_set_geton_first
  
  //レポート
  _CALL sub_bsw_common_report
  
  IF $SCWK_ANSWER == 1 THEN //キャンセル
    _RET
  ENDIF
  
  IF $play_mode == BSWAY_MODE_MULTI THEN //AIマルチ
    _CALL sub_receipt_challenge_multi_ai
  ELSE //通信マルチ
    //赤外線通信フラグ初期化
    _BSUBWAY_TOOL( BSWSUB_SET_COMM_IRC_FLAG, 0, BSW_NULL, BSW_NULL )
    
    //赤外線、ワイヤレス選択
    $SCWK_TEMP0 = msg_bsw_scr_87
    _CALL sub_bsw_common_bwin_receipt
    _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 0, SCWK_ANSWER )
    _BMPMENU_MAKE_LIST( msg_bsw_scr_88, 1 ) //赤外線
    _BMPMENU_MAKE_LIST( msg_bsw_scr_89, 0 ) //ワイヤレス
    _BMPMENU_START()
    
    //結果(0,1)をフラグにセット
    _BSUBWAY_TOOL( BSWSUB_SET_COMM_IRC_FLAG, SCWK_ANSWER, BSW_NULL, BSW_NULL )
    
    _CALL sub_receipt_challenge_multi_comm
  ENDIF
}
_RET

//--------------------------------------------------------------
//  受付　挑戦処理　AIマルチ
//--------------------------------------------------------------
sub_receipt_challenge_multi_ai:
{
  DEFINE_LOCAL partner_no
  
  //サポート登場デモ
  _CALL sub_receipt_demo_partner_in
  
  //どんなポケモンを参加させる？ 性別切り替え必要
  $SCWK_TEMP0 = msg_bsw_scr_61
  $SCWK_TEMP1 = msg_bsw_scr_62
  _CALL sub_bsw_common_bwin_partner
  
  _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
  _BMPMENU_MAKE_LIST( msg_bsw_scr_63, 0 ) //攻撃重視
  _BMPMENU_MAKE_LIST( msg_bsw_scr_64, 1 ) //防御重視
  _BMPMENU_MAKE_LIST( msg_bsw_scr_65, 2 ) //バランス重視
  _BMPMENU_MAKE_LIST( msg_bsw_scr_41, 3 ) //やめる
  _BMPMENU_START()
  
  $partner_no = $SCWK_ANSWER
  
  SWITCH $SCWK_ANSWER
  CASE 0 THEN //攻撃
    _BSUBWAY_TOOL( BSWSUB_SET_PARTNER_NO, 0, BSW_NULL, BSW_NULL )
    $SCWK_TEMP0 = msg_bsw_scr_66
    $SCWK_TEMP1 = msg_bsw_scr_69
  CASE 1 THEN //防御
    _BSUBWAY_TOOL( BSWSUB_SET_PARTNER_NO, 1, BSW_NULL, BSW_NULL )
    $SCWK_TEMP0 = msg_bsw_scr_67
    $SCWK_TEMP1 = msg_bsw_scr_70
  CASE 2 THEN //バランス
    _BSUBWAY_TOOL( BSWSUB_SET_PARTNER_NO, 2, BSW_NULL, BSW_NULL )
    $SCWK_TEMP0 = msg_bsw_scr_68
    $SCWK_TEMP1 = msg_bsw_scr_71
  DEFAULT //やめる
    $SCWK_TEMP0 = msg_bsw_scr_72
    $SCWK_TEMP1 = msg_bsw_scr_73
    _CALL sub_bsw_common_bwin_partner
    _AB_KEYWAIT()
    _MSGWIN_CLOSE()
    
    //サポート退場、終了
    _CALL sub_receipt_demo_partner_ret
    _CALL sub_bsw_common_exit
    _RET
  ENDSWITCH
  
  _CALL sub_bsw_common_bwin_partner
  _AB_KEYWAIT()
  _MSGWIN_CLOSE()

  //パートナーナンバーセット
  _BSUBWAY_TOOL( BSWSUB_SET_PARTNER_NO, partner_no, BSW_NULL, BSW_NULL )

  //パートナーロード
  _BSUBWAY_TOOL( BSWSUB_CHOICE_BTL_SEVEN, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //トレーナー抽選
  _BSUBWAY_TOOL( BSWSUB_BTL_TRAINER_SET, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //自機受付に向く
  _CALL sub_receipt_demo_jiki_turn_receipt
  
  //乗車メッセージ
  _CALL sub_receipt_msg_geton_train
  
  //バトルサブウェイ挑戦中のビーコンセット
  _BEACON_SET_REQ_SUBWAY_START()

  //デモ　出発
  _CALL sub_receipt_demo_start_train
  
  //マップ遷移
  _CALL sub_common_map_change_train
}
_RET

//--------------------------------------------------------------
//  受付　挑戦処理　通信マルチ
//--------------------------------------------------------------
sub_receipt_challenge_multi_comm:
{
  DEFINE_LOCAL irc
  
  _BSUBWAY_TOOL( BSWSUB_GET_COMM_IRC_FLAG, BSW_NULL, BSW_NULL, irc )
  
  IF $irc == TRUE THEN
    $SCWK_TEMP0 = msg_bsw_scr_90  //赤外線通信開始しますか
  ELSE
    $SCWK_TEMP0 = msg_bsw_scr_76  //ワイヤレス通信開始しますか
  ENDIF
  
  _CALL sub_bsw_common_bwin_receipt
  _YES_NO_WIN( ret )
  
  IF $ret == SCR_NO THEN //やめる
    _CALL sub_bsw_common_exit
    _RET
  ENDIF
  
  _MSGWIN_CLOSE()
  
  //フィールド通信切断
  _FIELD_COMM_EXIT_EVENT_CALL( ret )
  
  IF $ret == SCR_FIELD_COMM_EXIT_CANCEL THEN
    $ret = FALSE
  ELSIF $ret == SCR_FIELD_COMM_EXIT_ERROR THEN
    $ret = FALSE
  ELSE
    $ret = TRUE
  ENDIF
  
  IF $ret == FALSE THEN //切断失敗
    $SCWK_TEMP0 = msg_bsw_scr_77
    _CALL sub_bsw_common_bwin_receipt
    _CALL sub_bsw_common_exit
    _RET
  ENDIF
  
  //通信前レポート
  _REPORT_EVENT_CALL_WIRELESS( ret )
  
  IF $ret != SCR_REPORT_OK THEN //レポートしない
    _CALL sub_bsw_common_exit
    _RET
  ENDIF
  
  IF $irc == TRUE THEN //IRC通信
    //irc接続
    _BSUBWAY_TOOL( BSWSUB_COMM_IRC_ENTRY, BSW_NULL, BSW_NULL, BSW_NULL )
    
    //結果
    _BSUBWAY_TOOL( BSWSUB_COMM_IRC_ENTRY_RESULT, BSW_NULL, BSW_NULL, ret )
    
    IF $ret != BSWAY_COMM_IRC_RESULT_OK THEN //エラー
      _CALL sub_bsw_common_exit
      _RET
    ENDIF
    
    //通信開始
    _BSUBWAY_TOOL( BSWSUB_COMM_START, BSW_NULL, BSW_NULL, BSW_NULL )
  ELSE //ワイヤレス
    //親になるか子になるか
    $SCWK_TEMP0 = msg_bsw_scr_53
    _CALL sub_bsw_common_bwin_receipt
    
    _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, ret )
    _BMPMENU_MAKE_LIST( msg_bsw_scr_74, 0 ) //リーダー
    _BMPMENU_MAKE_LIST( msg_bsw_scr_75, 1 ) //グループ
    _BMPMENU_MAKE_LIST( msg_bsw_scr_41, 2 ) //やめる
    _BMPMENU_START()
    
    IF $ret == 2 THEN //やめる
      _CALL sub_bsw_common_exit
      _RET
    ENDIF
    
    _MSGWIN_CLOSE()
      
    //通信開始
    _BSUBWAY_TOOL( BSWSUB_COMM_START, BSW_NULL, BSW_NULL, BSW_NULL )
    
    //リーダー、グループ別参加処理
    IF $ret == 0 THEN //リーダー
      _CALL sub_receipt_challenge_multi_comm_connect_leader
    ELSE //グループ
      _CALL sub_receipt_challenge_multi_comm_connect_group
    ENDIF
    
    IF $SCWK_ANSWER == FALSE THEN //失敗
      _CALL sub_bsw_common_comm_exit
      _RET
    ENDIF
  ENDIF    
  
  //通信中フラグON
  _BSUBWAY_TOOL( BSWSUB_SET_COMM_FLAG, TRUE, BSW_NULL, BSW_NULL )
   
  //受信バッファクリア
  _BSUBWAY_TOOL( BSWSUB_RECV_BUF_CLEAR, BSW_NULL, BSW_NULL, BSW_NULL )

	//通信同期(お友達の選択を待っています)
  _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_RECEIPT_POKE_SELECT, BSW_NULL, BSW_NULL )
  //お互いが選んだポケモンデータを交換
  _BSUBWAY_TOOL( BSWSUB_COMM_SEND_BUF, BSWAY_COMM_PLAYER_DATA, BSW_NULL, BSW_NULL )
  _BSUBWAY_TOOL( BSWSUB_COMM_RECV_BUF, BSWAY_COMM_PLAYER_DATA, BSW_NULL, ret )
  
  //ポケモン被りで終了
  IF $ret != 0 THEN
    IF $ret == 1 THEN //一体のみ
      _BSUBWAY_TOOL( BSWSUB_GET_MEMBER_POKENO, 0, BSW_NULL, ret )
      _MONS_NAME( 0, ret )
      $SCWK_TEMP0 = msg_bsw_scr_54
    ELSE //複数化振り
      _BSUBWAY_TOOL( BSWSUB_GET_MEMBER_POKENO, 0, BSW_NULL, ret )
      _MONS_NAME( 0, ret )
      _BSUBWAY_TOOL( BSWSUB_GET_MEMBER_POKENO, 1, BSW_NULL, ret )
      _MONS_NAME( 1, ret )
      $SCWK_TEMP0 = msg_bsw_scr_55
    ENDIF
    
    _CALL sub_bsw_common_bwin_receipt
    _CALL sub_bsw_common_comm_exit
    _RET
  ENDIF
  
  //受信バッファクリア
  _BSUBWAY_TOOL( BSWSUB_RECV_BUF_CLEAR, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //MYSTATUS送信
  _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_RECEIPT_SEND_MYST, BSW_NULL, BSW_NULL )
  _BSUBWAY_TOOL( BSWSUB_COMM_SEND_BUF, BSWAY_COMM_MYSTATUS_DATA, BSW_NULL, BSW_NULL )
  _BSUBWAY_TOOL( BSWSUB_COMM_RECV_BUF, BSWAY_COMM_MYSTATUS_DATA, BSW_NULL, BSW_NULL )
  
  //受信バッファクリア
  _BSUBWAY_TOOL( BSWSUB_RECV_BUF_CLEAR, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //トレーナーセット開始
  _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_RECEIPT_BTL_TRAINER_SET, BSW_NULL, BSW_NULL )
  
  //通信相手をユニオン知り合いグループとして登録
  _BSUBWAY_TOOL( BSWSUB_COMM_SET_UNION_ACQ, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //親機なら対戦トレーナー抽選
  _BSUBWAY_TOOL( BSWSUB_COMM_GET_CURRENT_ID, BSW_NULL, BSW_NULL, ret )
  
  IF $ret == 0 THEN //親機なら対戦トレーナーセット
    //トレーナー抽選
    _BSUBWAY_TOOL( BSWSUB_BTL_TRAINER_SET, BSW_NULL, BSW_NULL, BSW_NULL )
    //子機に選んだデータを送信
    
    _BSUBWAY_TOOL( BSWSUB_COMM_SEND_BUF, BSWAY_COMM_TR_DATA, BSW_NULL, ret )
  ELSE //子機は親からデータを受け取る
    _BSUBWAY_TOOL( BSWSUB_COMM_RECV_BUF, BSWAY_COMM_TR_DATA, BSW_NULL, LOCALWORK0 ) 
  ENDIF
  
  //現在位置セーブ
  _BSUBWAY_TOOL( BSWTOOL_PUSH_NOW_LOCATION, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //回復
  _TEMOTI_POKEMON_KAIFUKU()
  
  //オートセーブ
  _CALL sub_bsw_common_auto_save
  
  //乗車メッセージ
  _CALL sub_receipt_msg_geton_train
  
  //通信同期待ち
  _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_RECEIPT_AUTO_SAVE, BSW_NULL, BSW_NULL )
  
  //バトルサブウェイ挑戦中のビーコンセット
  _BEACON_SET_REQ_SUBWAY_START()

  //デモ　出発
  _CALL sub_receipt_demo_start_train
  
  //マップ遷移
  _CALL sub_common_map_change_train
}
_RET

//--------------------------------------------------------------
//  受付　挑戦処理　通信マルチ　リーダー接続
//  @retval SCWK_ANSWER FALSE=接続無し
//--------------------------------------------------------------
sub_receipt_challenge_multi_comm_connect_leader:
{
  //親参加メニュー
  _BSUBWAY_TOOL( BSWSUB_COMM_ENTRY_PARENT_MENU, BSW_NULL, BSW_NULL, SCWK_ANSWER )
  
  SWITCH $SCWK_ANSWER
  CASE BSWAY_COMM_PERENT_ENTRY_OK THEN //OK
    $SCWK_ANSWER = TRUE
  CASE BSWAY_COMM_PERENT_ENTRY_CANCEL THEN //キャンセル
    $SCWK_ANSWER = FALSE
  CASE BSWAY_COMM_PERENT_ENTRY_ERROR THEN //エラー
    $SCWK_ANSWER = FALSE
  ENDSWITCH
}
_RET

//--------------------------------------------------------------
//  受付　挑戦処理　通信マルチ　グループ接続
//  @retval SCWK_ANSWER FALSE=接続無し
//--------------------------------------------------------------
sub_receipt_challenge_multi_comm_connect_group:
{
  //子参加メニュー
  _BSUBWAY_TOOL( BSWSUB_COMM_ENTRY_CHILD_MENU, BSW_NULL, BSW_NULL, SCWK_ANSWER )
  $SCWK_ANSWER = BSWAY_COMM_PERENT_ENTRY_ERROR
  
  SWITCH $SCWK_ANSWER
  CASE BSWAY_COMM_CHILD_ENTRY_OK THEN //OK
    $SCWK_ANSWER = TRUE
  CASE BSWAY_COMM_CHILD_ENTRY_NG THEN //NG
    $SCWK_ANSWER = FALSE
  ENDSWITCH
}
_RET

//--------------------------------------------------------------
//  受付　挑戦処理　wifi
//--------------------------------------------------------------
sub_receipt_challenge_wifi:
{
  DEFINE_LOCAL dl_play
  
  //wifi接続フラグをワークがクリアされる前に取得
  _BSUBWAY_TOOL( BSWTOOL_WIFI_CHK_SEL_DL_BTL, BSW_NULL, BSW_NULL, dl_play )
  
  //ワーク作成
  _BSUBWAY_WORK_CREATE( BSWAY_PLAY_NEW, BSWAY_MODE_WIFI )
  
  //手持ちorバトルボックス選択
  _CALL sub_bsw_common_select_btl_box
  
  IF $SCWK_ANSWER == FALSE THEN //参加不可
    _CALL sub_bsw_common_exit
    _RET
  ENDIF
  
  //ポケモン選択
  _CALL sub_bsw_common_pokemon_select
  
  IF $SCWK_ANSWER == 0 THEN //参加不可
    _CALL sub_bsw_common_exit
    _RET
  ENDIF
  
  //フラグ初期化
  _CALL sub_receipt_flag_set_geton_first
  
  //レポート
  _CALL sub_bsw_common_report
  
  IF $SCWK_ANSWER == 1 THEN //キャンセル
    _RET
  ENDIF
  
  //wifi接続
  IF $dl_play == TRUE THEN
    _BSUBWAY_TOOL( BSWTOOL_WIFI_DOWNLOAD_GAMEDATA, BSW_NULL, BSW_NULL, ret )
    _BSUBWAY_TOOL( BSWTOOL_WIFI_CHK_DL_DATA, BSW_NULL, BSW_NULL, ret )
    
    IF $ret == FALSE THEN
      _CALL sub_bsw_common_exit
      _RET
    ENDIF
    
    //ダウンロードプレイである
    _BSUBWAY_TOOL( BSWTOOL_WIFI_SET_SEL_DL_BTL, TRUE, BSW_NULL, BSW_NULL )
  ENDIF
  
  //トレーナー抽選(仮：正規データがサーバーに設定されるまで
//  _BSUBWAY_TOOL( BSWSUB_BTL_TRAINER_SET, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //乗車メッセージ
  _CALL sub_receipt_msg_geton_train
  
  //バトルサブウェイ挑戦中のビーコンセット
  _BEACON_SET_REQ_SUBWAY_START()
  
  //デモ　出発
  _CALL sub_receipt_demo_start_train
  
  //マップ遷移
  _CALL sub_common_map_change_train
}
_RET

//=====================================================================
//  受付　挑戦再開
//=====================================================================
//--------------------------------------------------------------
//  受付　挑戦再開
//--------------------------------------------------------------
ev_bsw_game_continue:
{
  //ステートクリア
  _CALL sub_receipt_flag_clear
  
  //セーブデータ有効チェック
  _BSUBWAY_TOOL( BSWTOOL_IS_SAVE_DATA_ENABLE, BSW_NULL, BSW_NULL, SCWK_ANSWER )
  
  IF $SCWK_ANSWER == 0 THEN //エラー
    _CALL sub_bsw_common_report_error_exit  //エラー処理
    _CHG_LOCAL_SCR
    _END
  ENDIF
  
  //おまちしておりました
  $SCWK_TEMP0 = msg_bsw_scr_32
  _CALL sub_bsw_common_bwin_receipt
  _YES_NO_WIN( SCWK_ANSWER )
  _MSGWIN_CLOSE()
  
  IF $SCWK_ANSWER != SCR_YES THEN //やめる
    $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_CONTINUE
    _BLACK_OUT()
    _DISP_FADE_END_CHECK()
    _BSUBWAY_TOOL( BSWTOOL_SYSTEM_RESET, BSW_NULL, BSW_NULL, BSW_NULL )
    _END
  ENDIF
  
  //ワーク確保&初期化
  _BSUBWAY_WORK_CREATE( BSWAY_PLAY_CONTINUE, BSWAY_MODE_NULL )
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, SCWK_ANSWER )
  
  //フラグ初期化
  _CALL sub_receipt_flag_set_geton_continue
  
  //現在位置セーブ
  _BSUBWAY_TOOL( BSWTOOL_PUSH_NOW_LOCATION, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //セーブ
  _SYSWIN_MSG_ALLPUT_DOWN( msg_bsw_scr_33 )
  _REPORT_CALL( SCWK_ANSWER )
  _MSGWIN_CLOSE()
  
  //それでは中断した所まで案内します
  $SCWK_TEMP0 = msg_bsw_scr_34
  _CALL sub_bsw_common_bwin_receipt
  _LAST_KEYWAIT()
  _MSGWIN_CLOSE()
  
  //バトルサブウェイ挑戦中のビーコンセット
  _BEACON_SET_REQ_SUBWAY_START()
  
  //デモ　出発
  _CALL sub_receipt_demo_start_train
  
  //マップチェンジ
  _CALL sub_common_map_change_train
  
  _CHG_LOCAL_SCR
}
_RET

//=====================================================================
//  受付　レポートエラー
//=====================================================================
//--------------------------------------------------------------
//  受付　レポートエラー
//--------------------------------------------------------------
ev_bsw_report_error:
{
  //ステートクリア
  _CALL sub_receipt_flag_clear
  
  //エラー処理
  _CALL sub_bsw_common_report_error_exit
  
  _CHG_LOCAL_SCR
}
_END

//=====================================================================
//  受付　対戦キャンセル、負け戻り
//=====================================================================
//--------------------------------------------------------------
//  受付　チャレンジキャンセル、負け戻り
//--------------------------------------------------------------
ev_bsw_game_cancel:
{
  //電車到着デモ
  _CALL sub_receipt_demo_arrival_train
  
  //フラグクリア
  _CALL sub_receipt_flag_clear
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_DATA_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //負けた際のスコアセット
  _BSUBWAY_TOOL( BSWSUB_SET_LOSE_SCORE, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //成績をレポートに
  _SYSWIN_MSG( msg_bsw_scr_36 , POS_DOWN )
  _REPORT_CALL( SCWK_ANSWER )
  _MSGWIN_CLOSE()
  
  //またのご利用を
  _CALL sub_bsw_common_exit
  
  _CHG_LOCAL_SCR
}
_END

//=====================================================================
//  受付　対戦終了後の戻り
//=====================================================================
//--------------------------------------------------------------
//  受付　対戦終了後の戻り
//--------------------------------------------------------------
ev_bsw_game_after:
{
  //電車到着デモ
  _CALL sub_receipt_demo_arrival_train
  
  //フラグクリア
  _CALL sub_receipt_flag_clear
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_DATA_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //連勝中であれば　続きありのメッセージ
  _BSUBWAY_TOOL( BSWTOOL_GET_RENSHOU_CNT, play_mode, BSW_NULL, SCWK_ANSWER )
  
  IF $SCWK_ANSWER != 0 THEN
    $SCWK_TEMP0 = msg_bsw_scr_35
    _CALL sub_bsw_common_bwin_receipt
    _AB_KEYWAIT()
  ENDIF
  
  //またのご利用を
  _CALL sub_bsw_common_exit
  
  _CHG_LOCAL_SCR
}
_END

//=====================================================================
//  受付　メッセージ関連
//=====================================================================
//--------------------------------------------------------------
//  受付　プレイモード別に紹介メッセージ
//  @retval TRUE=OK FALSE=スーパーモード受付不可
//--------------------------------------------------------------
sub_receipt_msg_greet:
{
  DEFINE_LOCAL flag
  DEFINE_LOCAL clear
  
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  $flag = TRUE
  
  _FLAG_CHECK( SYS_FLAG_GAME_CLEAR, clear ) //ゲームクリアチェック
  
  //プレイモード別　挨拶
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_00
  CASE BSWAY_MODE_DOUBLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_01
  CASE BSWAY_MODE_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_02
  CASE BSWAY_MODE_WIFI THEN
    IF $clear == FALSE THEN //クリア前
      $SCWK_TEMP0 = msg_bsw_scr_99
      $flag = FALSE
    ELSE
      $SCWK_TEMP0 = msg_bsw_scr_03
    ENDIF
  CASE BSWAY_MODE_S_SINGLE THEN
    IF $clear == FALSE THEN //クリア前
      $SCWK_TEMP0 = msg_bsw_scr_96
      $flag = FALSE
    ELSE
      _BSUBWAY_TOOL( BSWTOOL_GET_BOSS_CLEAR_FLAG, BSWAY_MODE_SINGLE, BSW_NULL, ret )
      IF $ret == TRUE THEN
        $SCWK_TEMP0 = msg_bsw_scr_04
      ELSE
        $SCWK_TEMP0 = msg_bsw_scr_91  //スーパー無理
        $flag = FALSE
      ENDIF
    ENDIF
  CASE BSWAY_MODE_S_DOUBLE THEN
    IF $clear == FALSE THEN //クリア前
      $SCWK_TEMP0 = msg_bsw_scr_97
      $flag = FALSE
    ELSE
      _BSUBWAY_TOOL( BSWTOOL_GET_BOSS_CLEAR_FLAG, BSWAY_MODE_DOUBLE, BSW_NULL, ret )
    
      IF $ret == TRUE THEN
        $SCWK_TEMP0 = msg_bsw_scr_05
      ELSE
        $SCWK_TEMP0 = msg_bsw_scr_92  //スーパー無理
        $flag = FALSE
      ENDIF
    ENDIF
  CASE BSWAY_MODE_S_MULTI THEN
    IF $clear == FALSE THEN //クリア前
      $SCWK_TEMP0 = msg_bsw_scr_98
      $flag = FALSE
    ELSE
      _BSUBWAY_TOOL( BSWTOOL_GET_BOSS_CLEAR_FLAG, BSWAY_MODE_MULTI, BSW_NULL, ret )
    
      IF $ret == TRUE THEN
        $SCWK_TEMP0 = msg_bsw_scr_06
      ELSE
        $SCWK_TEMP0 = msg_bsw_scr_93  //スーパー無理
        $flag = FALSE
      ENDIF
    ENDIF
  ENDSWITCH
  
  _CALL sub_bsw_common_bwin_receipt
  _AB_KEYWAIT()
  
  $SCWK_ANSWER = $flag
  
  IF $flag == FALSE THEN
    _MSGWIN_CLOSE()
  ENDIF
}
_RET

//--------------------------------------------------------------
//  受付　プレイモード別に乗車しますか？メッセージ
//--------------------------------------------------------------
sub_receipt_msg_ask_geton:
{
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //プレイモード別　乗車を尋ねるメッセージ
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_13
  CASE BSWAY_MODE_DOUBLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_14
  CASE BSWAY_MODE_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_15
  CASE BSWAY_MODE_WIFI THEN
    $SCWK_TEMP0 = msg_bsw_scr_16
  CASE BSWAY_MODE_S_SINGLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_17
  CASE BSWAY_MODE_S_DOUBLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_18
  CASE BSWAY_MODE_S_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_19
  ENDSWITCH
  
  _CALL sub_bsw_common_bwin_receipt
}
_RET

//--------------------------------------------------------------
//  受付　プレイモード別にサブウェイ説明メッセージ
//--------------------------------------------------------------
sub_receipt_msg_account:
{
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //プレイモード別　説明
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_09
    _CALL sub_bsw_common_bwin_receipt
    $SCWK_TEMP0 = msg_bsw_scr_09_1
    _CALL sub_bsw_common_bwin_receipt
  CASE BSWAY_MODE_DOUBLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_10
    _CALL sub_bsw_common_bwin_receipt
    $SCWK_TEMP0 = msg_bsw_scr_10_1
    _CALL sub_bsw_common_bwin_receipt
  CASE BSWAY_MODE_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_11
    _CALL sub_bsw_common_bwin_receipt
    $SCWK_TEMP0 = msg_bsw_scr_11_1
    _CALL sub_bsw_common_bwin_receipt
  CASE BSWAY_MODE_WIFI THEN
    $SCWK_TEMP0 = msg_bsw_scr_12
    _CALL sub_bsw_common_bwin_receipt
    $SCWK_TEMP0 = msg_bsw_scr_12_1
    _CALL sub_bsw_common_bwin_receipt
  CASE BSWAY_MODE_S_SINGLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_09
    _CALL sub_bsw_common_bwin_receipt
    $SCWK_TEMP0 = msg_bsw_scr_09_1
    _CALL sub_bsw_common_bwin_receipt
  CASE BSWAY_MODE_S_DOUBLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_10
    _CALL sub_bsw_common_bwin_receipt
    $SCWK_TEMP0 = msg_bsw_scr_10_1
    _CALL sub_bsw_common_bwin_receipt
  CASE BSWAY_MODE_S_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_11
    _CALL sub_bsw_common_bwin_receipt
    $SCWK_TEMP0 = msg_bsw_scr_11_1
    _CALL sub_bsw_common_bwin_receipt
  ENDSWITCH
  
  _AB_KEYWAIT()
}
_RET

//--------------------------------------------------------------
//  受付　プレイモード別に乗車下さいメッセージ
//--------------------------------------------------------------
sub_receipt_msg_geton_train:
{
  _BSUBWAY_TOOL( BSWTOOL_GET_DATA_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //プレイモード別　乗車メッセージ
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_24
  CASE BSWAY_MODE_DOUBLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_25
  CASE BSWAY_MODE_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_26
  CASE BSWAY_MODE_COMM_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_26
  CASE BSWAY_MODE_WIFI THEN
    $SCWK_TEMP0 = msg_bsw_scr_27
  CASE BSWAY_MODE_S_SINGLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_28
  CASE BSWAY_MODE_S_DOUBLE THEN
    $SCWK_TEMP0 = msg_bsw_scr_29
  CASE BSWAY_MODE_S_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_30
  CASE BSWAY_MODE_S_COMM_MULTI THEN
    $SCWK_TEMP0 = msg_bsw_scr_30
  ENDSWITCH
  
  _CALL sub_bsw_common_bwin_receipt
  _LAST_KEYWAIT()
  _MSGWIN_CLOSE()
}
_RET

//=====================================================================
//  受付　ワーク処理
//=====================================================================
//--------------------------------------------------------------
//  受付　フラグクリア
//--------------------------------------------------------------
sub_receipt_flag_clear:
{
  $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_NON
  $WK_OTHER_BSUBWAY_TRAIN = BSWAY_SCENE_TRAIN_NON
  $WK_OTHER_BSUBWAY_HOME = BSWAY_SCENE_HOME_NON

  _BSUBWAY_TOOL( BSWTOOL_POP_NOW_LOCATION, BSW_NULL, BSW_NULL, BSW_NULL )
  
  _FLAG_SET( FV_BSUBWAY_RECEIPT_PARTNER )
  _FLAG_SET( FV_C04R0111_PARTNER )
  _FLAG_SET( FV_C04R0111_NPC )
}
_RET

//--------------------------------------------------------------
//  受付　乗車始めにフラグセット
//--------------------------------------------------------------
sub_receipt_flag_set_geton_first:
{
  $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_ERROR
  $WK_OTHER_BSUBWAY_TRAIN = BSWAY_SCENE_TRAIN_FIRST
  
  _FLAG_SET( FV_BSUBWAY_RECEIPT_PARTNER )
  _FLAG_SET( FV_C04R0111_PARTNER )
  _FLAG_SET( FV_C04R0111_NPC )
}
_RET

//--------------------------------------------------------------
//  受付　再度乗車にフラグセット
//--------------------------------------------------------------
sub_receipt_flag_set_geton_continue:
{
  $WK_OTHER_BSUBWAY_RECEIPT = BSWAY_SCENE_RECEIPT_ERROR
  $WK_OTHER_BSUBWAY_TRAIN = BSWAY_SCENE_TRAIN_CONTINUE
  
  _FLAG_SET( FV_BSUBWAY_RECEIPT_PARTNER )
  _FLAG_SET( FV_C04R0111_PARTNER )
  _FLAG_SET( FV_C04R0111_NPC )
}
_RET

//=====================================================================
//  受付　アニメ、デモ
//=====================================================================
//--------------------------------------------------------------
//  アニメデータ　共通　振り向き
//--------------------------------------------------------------
_ANIME_LABEL anm_turn_up
  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL anm_turn_down
  _ANIME_DATA AC_STAY_WALK_D_8F,1
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL anm_turn_left
  _ANIME_DATA AC_STAY_WALK_L_8F,1
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL anm_turn_right
  _ANIME_DATA AC_STAY_WALK_R_8F,1
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  受付　デモ  POSイベント用　自機を受付に、受付を自機に振り向かせる
//--------------------------------------------------------------
sub_receipt_demo_stopper:
{
  _CALL sub_bsw_common_get_objid_receipt
  $objid = $SCWK_ANSWER
  
  _OBJ_POS_GET( MMDL_ID_PLAYER, SCWK_TEMP0, SCWK_TEMP1 )
  
  SWITCH $SCWK_TEMP1
  CASE 14 THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_down )
    _OBJ_ANIME( objid, anm_turn_up )
    _OBJ_ANIME_WAIT()
  CASE 16 THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_up )
    _OBJ_ANIME( objid, anm_turn_down )
    _OBJ_ANIME_WAIT()
  CASE 17 THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_stopper0 )
    _OBJ_ANIME( objid, anm_turn_down )
    _OBJ_ANIME_WAIT()
  ENDSWITCH
}
_RET

//  受付　デモ  POSイベント用　自機を受付に、受付を自機に振り向かせる
_ANIME_LABEL anm_receipt_demo_stopper0
  _ANIME_DATA AC_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  受付　デモ　POSイベントから遠ざける
//--------------------------------------------------------------
sub_receipt_demo_leave_stopper:
{
  _CALL sub_bsw_common_get_objid_receipt
  $objid = $SCWK_ANSWER
  
  _OBJ_POS_GET( MMDL_ID_PLAYER, SCWK_TEMP0, SCWK_TEMP1 )
  
  IF $SCWK_TEMP1 == 14 || $SCWK_TEMP1 == 16 THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_leave0 )
    _OBJ_ANIME( objid, anm_turn_left )
    _OBJ_ANIME_WAIT()
  ENDIF
}
_RET

_ANIME_LABEL anm_receipt_demo_leave0
  _ANIME_DATA AC_WALK_L_8F,1
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  受付　デモ　パートナー登場
//--------------------------------------------------------------
sub_receipt_demo_partner_in:
{
  //OBJ ID取得
  _CALL sub_bsw_common_get_objid_partner
  $objid = $SCWK_ANSWER
  
  //サポート追加
  _CALL sub_bsw_common_add_partner
  
  //場所変更　入り口へ
  _OBJ_POS_CHANGE( objid, 2, 1, 12, DIR_RIGHT )
  
  //自機話し掛け位置取得
  _CALL sub_bsw_common_check_jiki_talkpos
  
  //自機の隣まで歩くアニメ
  SWITCH $SCWK_TEMP2
  CASE DIR_UP THEN
    _OBJ_ANIME( objid, anm_receipt_demo_partner_in_anm0 )
  CASE DIR_DOWN THEN
    _OBJ_ANIME( objid, anm_receipt_demo_partner_in_anm1 )
  CASE DIR_LEFT THEN
    _OBJ_ANIME( objid, anm_receipt_demo_partner_in_anm2 )
  DEFAULT
    _OBJ_ANIME( objid, anm_receipt_demo_partner_in_anm3 )
  ENDSWITCH

  _OBJ_ANIME_WAIT()
  
  //自機振り向きアニメ
  SWITCH $SCWK_TEMP2
  CASE DIR_UP THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_left )
  CASE DIR_DOWN THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_left )
  CASE DIR_LEFT THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_left )
  DEFAULT
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_down )
  ENDSWITCH
  
  _OBJ_ANIME_WAIT()
  
  //初遭遇か？
  _BSUBWAY_TOOL( BSWTOOL_GET_SUPPORT_ENCOUNT_END, BSW_NULL, BSW_NULL, SCWK_ANSWER )
  
  IF $SCWK_ANSWER == 0 THEN
    $SCWK_TEMP0 = msg_bsw_scr_57
    $SCWK_TEMP1 = msg_bsw_scr_58
    
    //遭遇済みにする
    _BSUBWAY_TOOL( BSWTOOL_SET_SUPPORT_ENCOUNT_END, BSW_NULL, BSW_NULL, BSW_NULL )
  ELSE
    $SCWK_TEMP0 = msg_bsw_scr_59
    $SCWK_TEMP1 = msg_bsw_scr_60
  ENDIF
  
  _CALL sub_bsw_common_bwin_partner
  _AB_KEYWAIT()
}
_RET

//アニメデータ　パートナー登場デモ　自機話し掛け上
_ANIME_LABEL anm_receipt_demo_partner_in_anm0
  _ANIME_DATA AC_WALK_R_8F,6
  _ANIME_DATA AC_WALK_D_8F,2
  _ANIME_DATA AC_WALK_R_8F,3
  _ANIME_DATA AC_WALK_R_8F,3
  _ANIME_DATA ACMD_END,0

//アニメデータ　パートナー登場デモ　自機話し掛け下
_ANIME_LABEL anm_receipt_demo_partner_in_anm1
  _ANIME_DATA AC_WALK_R_8F,6
  _ANIME_DATA AC_WALK_D_8F,4
  _ANIME_DATA AC_WALK_R_8F,3
  _ANIME_DATA ACMD_END,0

//アニメデータ　パートナー登場デモ　自機話し掛け左
_ANIME_LABEL anm_receipt_demo_partner_in_anm2
  _ANIME_DATA AC_WALK_R_8F,6
  _ANIME_DATA AC_WALK_D_8F,3
  _ANIME_DATA AC_WALK_R_8F,2
  _ANIME_DATA ACMD_END,0

//アニメデータ　パートナー登場デモ　自機話し掛け右
_ANIME_LABEL anm_receipt_demo_partner_in_anm3
  _ANIME_DATA AC_WALK_R_8F,6
  _ANIME_DATA AC_WALK_D_8F,4
  _ANIME_DATA AC_WALK_R_8F,5
  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

//--------------------------------------------------------------
//  受付　デモ　自機、受付に振り向く
//--------------------------------------------------------------
sub_receipt_demo_jiki_turn_receipt:
{
  //自機話し掛け位置取得
  _CALL sub_bsw_common_check_jiki_talkpos
  
  //自機位置
  SWITCH $SCWK_TEMP2
  CASE DIR_UP THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_down )
  CASE DIR_DOWN THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_up )
  CASE DIR_LEFT THEN
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_right )
  DEFAULT
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_left )
  ENDSWITCH
  
  _OBJ_ANIME_WAIT()
}
_RET

//--------------------------------------------------------------
//  受付　デモ　受付キャンセル時のパートナー退場
//--------------------------------------------------------------
sub_receipt_demo_partner_ret:
{
  //OBJ ID取得
  _CALL sub_bsw_common_get_objid_partner
  $objid = $SCWK_ANSWER
  
  //自機話し掛け位置取得
  _CALL sub_bsw_common_check_jiki_talkpos
  
  //去るアニメ
  SWITCH $SCWK_TEMP2
  CASE DIR_UP THEN
    _OBJ_ANIME( objid, anm_receipt_demo_partner_ret0 )
  CASE DIR_DOWN THEN
    _OBJ_ANIME( objid, anm_receipt_demo_partner_ret1 )
  CASE DIR_LEFT THEN
    _OBJ_ANIME( objid, anm_receipt_demo_partner_ret2 )
  DEFAULT
    _OBJ_ANIME( objid, anm_receipt_demo_partner_ret3 )
  ENDSWITCH
  
  _OBJ_ANIME_WAIT()
  
  //サポート削除
  _CALL sub_bsw_common_del_partner
  
  //自機受付に向く
  _CALL sub_receipt_demo_jiki_turn_receipt
}
_RET

//アニメデータ　パートナー受付キャンセル　自機話し掛け上
_ANIME_LABEL anm_receipt_demo_partner_ret0
  _ANIME_DATA AC_WALK_L_8F,3
  _ANIME_DATA AC_WALK_U_8F,2
  _ANIME_DATA AC_WALK_L_8F,6
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　パートナー受付キャンセル　自機話し掛け下
_ANIME_LABEL anm_receipt_demo_partner_ret1
  _ANIME_DATA AC_WALK_L_8F,3
  _ANIME_DATA AC_WALK_U_8F,4
  _ANIME_DATA AC_WALK_L_8F,6
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　パートナー受付キャンセル　自機話し掛け左
_ANIME_LABEL anm_receipt_demo_partner_ret2
  _ANIME_DATA AC_WALK_L_8F,2
  _ANIME_DATA AC_WALK_U_8F,3
  _ANIME_DATA AC_WALK_L_8F,6
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　パートナー受付キャンセル　自機話し掛け右
_ANIME_LABEL anm_receipt_demo_partner_ret3
  _ANIME_DATA AC_WALK_L_8F,5
  _ANIME_DATA AC_WALK_U_8F,4
  _ANIME_DATA AC_WALK_L_8F,6
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0
  
//--------------------------------------------------------------
//  受付  デモ　電車移動
//--------------------------------------------------------------
sub_receipt_demo_start_train:
{
  DEFINE_LOCAL objid_receipt
  DEFINE_LOCAL objid_partner
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWSUB_GET_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //AIマルチか？
  $ai_multi = FALSE
  
  IF $play_mode == BSWAY_MODE_MULTI || $play_mode == BSWAY_MODE_S_MULTI THEN
    $ai_multi = TRUE
  ENDIF

  //OBJ ID取得
  _CALL sub_bsw_common_get_objid_receipt
  $objid_receipt = $SCWK_ANSWER
  
  IF $ai_multi == TRUE THEN
    _CALL sub_bsw_common_get_objid_partner
    $objid_partner = $SCWK_ANSWER
    
    //パートナー高さを固定化
    _BSUBWAY_TOOL( BSWTOOL_OBJ_HEIGHT_OFF, objid_partner, 0, BSW_NULL )
  ENDIF
  
  //自機高さを固定化
  _BSUBWAY_TOOL( BSWTOOL_OBJ_HEIGHT_OFF, MMDL_ID_PLAYER, 0, BSW_NULL )
  
  //自機話し掛け位置取得
  _CALL sub_bsw_common_check_jiki_talkpos
  
  //電車へ移動
  SWITCH $SCWK_TEMP2
  CASE DIR_UP THEN
    _OBJ_ANIME( objid_receipt, anm_receipt_demo_start_train_receipt0 )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki0 )
    
    IF $ai_multi == TRUE THEN
      _OBJ_ANIME( objid_partner, anm_receipt_demo_start_train_partner0 )
    ENDIF
  CASE DIR_DOWN THEN
    _OBJ_ANIME( objid_receipt, anm_receipt_demo_start_train_receipt1 )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki1 )
    
    IF $ai_multi == TRUE THEN
      _OBJ_ANIME( objid_partner, anm_receipt_demo_start_train_partner1 )
    ENDIF
  CASE DIR_LEFT THEN
    _OBJ_ANIME( objid_receipt, anm_receipt_demo_start_train_receipt2 )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki2 )

    IF $ai_multi == TRUE THEN
      _OBJ_ANIME( objid_partner, anm_receipt_demo_start_train_partner2 )
    ENDIF
  DEFAULT
    IF $ai_multi == FALSE THEN //パートナー無し
      _OBJ_ANIME( objid_receipt, anm_receipt_demo_start_train_receipt3 )
      _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki3 )
    ELSE
      _OBJ_ANIME( objid_receipt, anm_receipt_demo_start_train_receipt4 )
      _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki4 )
      _OBJ_ANIME( objid_partner, anm_receipt_demo_start_train_partner3 )
    ENDIF
  ENDSWITCH
  
  _OBJ_ANIME_WAIT()
  
  //電車移動
  _BSUBWAY_TOOL( BSWTOOL_SET_TRAIN_ANM, BTRAIN_ANIME_TYPE_START_HOME, BSW_NULL, BSW_NULL )
  _SE_PLAY( SEQ_SE_BDEMO_01 ) //電車扉音
  _TIME_WAIT( 35 )
  _SE_PLAY( SEQ_SE_BDEMO_02 ) //電車発射音
  
  _TIME_WAIT( 15 ) //アニメを少し見せてフェードアウト
}
_RET

//アニメデータ　乗車　受付　自機位置上
_ANIME_LABEL anm_receipt_demo_start_train_receipt0
  _ANIME_DATA AC_WALK_R_8F, 5
  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　受付　自機位置下
_ANIME_LABEL anm_receipt_demo_start_train_receipt1
  _ANIME_DATA AC_WALK_R_8F, 5
  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　受付　自機位置左
_ANIME_LABEL anm_receipt_demo_start_train_receipt2
  _ANIME_DATA AC_WALK_R_8F, 5
  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　受付　自機位置右　パートナー無し
_ANIME_LABEL anm_receipt_demo_start_train_receipt3
  _ANIME_DATA AC_WALK_D_8F, 1
  _ANIME_DATA AC_WALK_R_8F, 2
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WALK_R_8F, 3
  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　受付　自機位置右　パートナーあり
_ANIME_LABEL anm_receipt_demo_start_train_receipt4
  _ANIME_DATA AC_WALK_D_8F, 2
  _ANIME_DATA AC_WALK_R_8F, 2
  _ANIME_DATA AC_WALK_U_8F, 2
  _ANIME_DATA AC_WALK_R_8F, 3
  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　自機　自機位置上
_ANIME_LABEL anm_receipt_demo_start_train_jiki0
  _ANIME_DATA AC_WALK_D_8F, 1
  _ANIME_DATA AC_WALK_R_8F, 4
  _ANIME_DATA AC_WALK_U_8F, 2
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON, 1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　受付　自機位置下
_ANIME_LABEL anm_receipt_demo_start_train_jiki1
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WALK_R_8F, 4
  _ANIME_DATA AC_WALK_U_8F, 2
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON, 1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　受付　自機位置左
_ANIME_LABEL anm_receipt_demo_start_train_jiki2
  _ANIME_DATA AC_WALK_R_8F, 5
  _ANIME_DATA AC_WALK_U_8F, 2
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON, 1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　受付　自機位置右　パートナー無し
_ANIME_LABEL anm_receipt_demo_start_train_jiki3
  _ANIME_DATA AC_WAIT_8F, 4 //受付移動待ち
  _ANIME_DATA AC_WALK_R_8F, 3
  _ANIME_DATA AC_WALK_U_8F, 2
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON, 1
  _ANIME_DATA ACMD_END,0

  _ANIME_DATA AC_STAY_WALK_U_8F,1
  _ANIME_DATA ACMD_END,0
  
//アニメデータ　乗車　受付　自機位置右　パートナーあり
_ANIME_LABEL anm_receipt_demo_start_train_jiki4
  _ANIME_DATA AC_WAIT_8F, 6 //受付移動待ち
  _ANIME_DATA AC_WALK_R_8F, 3
  _ANIME_DATA AC_WALK_U_8F, 2
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON, 1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　パートナー　自機位置上
_ANIME_LABEL anm_receipt_demo_start_train_partner0
  _ANIME_DATA AC_WALK_R_8F, 1
  _ANIME_DATA AC_WALK_D_8F, 1
  _ANIME_DATA AC_WALK_R_8F, 5
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　パートナー　自機位置下
_ANIME_LABEL anm_receipt_demo_start_train_partner1
  _ANIME_DATA AC_WALK_R_8F, 1
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WALK_R_8F, 4
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　パートナー　自機位置左
_ANIME_LABEL anm_receipt_demo_start_train_partner2
  _ANIME_DATA AC_WALK_R_8F, 6
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　乗車　パートナー　自機位置右
_ANIME_LABEL anm_receipt_demo_start_train_partner3
  _ANIME_DATA AC_WAIT_1F, 6 //受付移動待ち
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WALK_R_8F, 3
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_WALK_U_8F, 1
  _ANIME_DATA AC_WAIT_1F, 4
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0
  
//--------------------------------------------------------------
//  受付  デモ　電車到着
//--------------------------------------------------------------
sub_receipt_demo_arrival_train:
{
  DEFINE_LOCAL objid_receipt
  DEFINE_LOCAL objid_partner
  
  //プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_DATA_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //AIマルチか？
  $ai_multi = FALSE
  
  IF $play_mode == BSWAY_MODE_MULTI || $play_mode == BSWAY_MODE_S_MULTI THEN
    $ai_multi = TRUE
  ENDIF
  
  //自機高さを固定化
  _BSUBWAY_TOOL( BSWTOOL_OBJ_HEIGHT_OFF, MMDL_ID_PLAYER, 0, BSW_NULL )
  
  //自機座標を入り口に
  _OBJ_POS_CHANGE( MMDL_ID_PLAYER, 16, 0, 13, DIR_DOWN )
  
  //自機非表示
  _BSUBWAY_TOOL( BSWTOOL_OBJ_VANISH, MMDL_ID_PLAYER, TRUE, BSW_NULL )
  
  //パートナー初期化
  IF $ai_multi == TRUE THEN
    _CALL sub_bsw_common_get_objid_partner
    $objid_partner = $SCWK_ANSWER
    
    _CALL sub_bsw_common_add_partner
    _BSUBWAY_TOOL( BSWTOOL_OBJ_VANISH, objid_partner, TRUE, BSW_NULL )
    _OBJ_POS_CHANGE( objid_partner, 16, 0, 13, DIR_DOWN )
    _BSUBWAY_TOOL( BSWTOOL_OBJ_HEIGHT_OFF, objid_partner, 0, BSW_NULL )
  ENDIF

  //受付OBJ ID取得
  _CALL sub_bsw_common_get_objid_receipt
  $objid_receipt = $SCWK_ANSWER
  
  //受付の向きを右に
  _OBJ_ANIME( objid_receipt, anm_receipt_demo_arrival_train_receipt0 )
  _OBJ_ANIME_WAIT()
  
  //マップフェードイン
  _MAP_FADE_BLACK_IN()
  _MAP_FADE_END_CHECK()
  
  //一寸待ち
  _TIME_WAIT( 30 )
  
  //受付アニメ
  _OBJ_ANIME( objid_receipt, anm_receipt_demo_arrival_train_receipt1 )

  //自機移動アニメ
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_arrival_train_jiki0 )
  
  //パートナーアニメ
  IF $ai_multi == TRUE THEN
    _OBJ_ANIME( objid_partner, anm_receipt_demo_arrival_train_partner0 )
  ENDIF
  
  //OBJアニメ待ち
  _OBJ_ANIME_WAIT()
  
  //自機高さを戻す
  _BSUBWAY_TOOL( BSWTOOL_OBJ_HEIGHT_ON, MMDL_ID_PLAYER, 0, BSW_NULL )
  
  //パートナーと分かれる
  IF $ai_multi == TRUE THEN
    //パートナー高さ戻す
    _BSUBWAY_TOOL( BSWTOOL_OBJ_HEIGHT_ON, objid_partner, 0, BSW_NULL )

    //自機向きをパートナーへ
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_left )
    _OBJ_ANIME_WAIT()
    
    //ではまた
    $SCWK_TEMP0 = msg_bsw_scr_94
    $SCWK_TEMP1 = msg_bsw_scr_95
    _CALL sub_bsw_common_bwin_partner
    _AB_KEYWAIT()
    _MSGWIN_CLOSE()

    //パートナー分かれるアニメ
    _OBJ_ANIME( objid_partner, anm_receipt_demo_arrival_train_partner1 )
    _OBJ_ANIME_WAIT()
    
    //サポート削除
    _CALL sub_bsw_common_del_partner
    
    //自機受付へ振り向く
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_turn_right )
    _OBJ_ANIME_WAIT()
  ENDIF
}
_RET

//アニメデータ　到着　受付
_ANIME_LABEL anm_receipt_demo_arrival_train_receipt0
  _ANIME_DATA AC_DIR_R,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　到着　受付　自機移動に合わせて向きを変える
_ANIME_LABEL anm_receipt_demo_arrival_train_receipt1
  _ANIME_DATA AC_WAIT_1F,5
  _ANIME_DATA AC_WAIT_8F,5
  _ANIME_DATA AC_STAY_WALK_D_8F,1
  _ANIME_DATA AC_WAIT_8F,1
  _ANIME_DATA AC_STAY_WALK_L_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　到着　自機0
_ANIME_LABEL anm_receipt_demo_arrival_train_jiki0
  _ANIME_DATA AC_VANISH_OFF,1
  _ANIME_DATA AC_WAIT_1F,4
  _ANIME_DATA AC_WALK_D_8F,3
  _ANIME_DATA AC_WALK_L_8F,5
  _ANIME_DATA AC_WALK_U_8F,1
  _ANIME_DATA AC_STAY_WALK_R_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　到着　パートナー0
_ANIME_LABEL anm_receipt_demo_arrival_train_partner0
  _ANIME_DATA AC_WAIT_1F,5
  _ANIME_DATA AC_VANISH_OFF,1
  _ANIME_DATA AC_WAIT_1F,4
  _ANIME_DATA AC_WALK_D_8F,3
  _ANIME_DATA AC_WALK_L_8F,6
  _ANIME_DATA AC_WALK_U_8F,1
  _ANIME_DATA AC_STAY_WALK_R_8F,1
  _ANIME_DATA ACMD_END,0

//アニメデータ　到着　パートナー1
_ANIME_LABEL anm_receipt_demo_arrival_train_partner1
  _ANIME_DATA AC_WALK_L_8F,2
  _ANIME_DATA AC_WALK_U_8F,3
  _ANIME_DATA AC_WALK_L_8F,5
  _ANIME_DATA AC_VANISH_ON,1
  _ANIME_DATA ACMD_END,0

//=====================================================================
//  受付　共通処理
//=====================================================================
//--------------------------------------------------------------
//  受付　共通終了処理
//--------------------------------------------------------------
sub_bsw_common_exit:
{
  //ステートクリア
  _CALL sub_receipt_flag_clear
  
  $SCWK_TEMP0 = msg_bsw_scr_38    //またのご利用を
  _CALL sub_bsw_common_bwin_receipt
  _LAST_KEYWAIT()
  _MSGWIN_CLOSE()
  
  _BSUBWAY_WORK_RELEASE() //ワーク開放
  
  _CALL sub_receipt_demo_leave_stopper
}
_RET 

//--------------------------------------------------------------
//  受付　通信切断して終了処理
//--------------------------------------------------------------
sub_bsw_common_comm_exit:
{
  DEFINE_LOCAL comm_flag
  
  _BSUBWAY_TOOL( BSWSUB_GET_COMM_FLAG, BSW_NULL, BSW_NULL, comm_flag )
  
  //通信中であれば同期して切断
  IF $comm_flag == TRUE THEN
    _BSUBWAY_TOOL( BSWSUB_COMM_TIMSYNC, BSW_COMM_MULTI_RECEIPT_SIO_END, BSW_NULL, BSW_NULL )
    _BSUBWAY_TOOL( BSWSUB_SET_COMM_FLAG, FALSE, BSW_NULL, BSW_NULL )
    _BSUBWAY_TOOL( BSWSUB_COMM_END, BSW_NULL, BSW_NULL, BSW_NULL )
    _REBOOT_BEACON_SEARCH() //通信切断後のビーコンサーチ再開
  ENDIF
  
  _CALL sub_bsw_common_exit
}
_RET 

//--------------------------------------------------------------
//  受付　レポートエラー
//--------------------------------------------------------------
sub_bsw_common_report_error_exit:
{
  //ゾーン別プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  //受付と主人公の向きを合わせる
  
  //お客様！
  $SCWK_TEMP0 = msg_bsw_scr_37
  _CALL sub_bsw_common_bwin_receipt
  _AB_KEYWAIT()
  _MSGWIN_CLOSE()

  //不正終了時のパラメータ処理
  _BSUBWAY_TOOL( BSWTOOL_SET_NG_SCORE, BSW_NULL, BSW_NULL, SCWK_ANSWER )
  
  IF $play_mode == BSWAY_MODE_WIFI THEN
    //ランクダウン処理
    _BSUBWAY_TOOL( BSWTOOL_DOWN_WIFI_RANK, BSW_NULL, BSW_NULL, ret )
    
    IF $ret == TRUE THEN //ランク下がった
      _BSUBWAY_TOOL( BSWTOOL_GET_WIFI_RANK, BSW_NULL, BSW_NULL, ret )
      //ランク文字列に
      _NUMBER( 0, ret, 2 )
      //ランクが下がった
      $SCWK_TEMP0 = msg_bsw_scr_79
      _CALL sub_bsw_common_bwin_receipt
      _AB_KEYWAIT()
      _MSGWIN_CLOSE()
    ENDIF
    
    //レポート
    _CALL sub_bsw_common_auto_save
  ENDIF
  
  //またのご利用を
  _CALL sub_bsw_common_exit
}
_RET

//--------------------------------------------------------------
//  受付　列車内へ移動
//--------------------------------------------------------------
sub_common_map_change_train:
{
  _MAP_FADE_BLACK_OUT()
  _MAP_FADE_END_CHECK()
  _OBJ_ANIME_WAIT()
  _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0110, 7, 0, 4, DIR_UP )
}
_RET

//--------------------------------------------------------------
//  受付　ポケモン参加選択
//  @retval SCWK_ANSWER 0=参加不可
//--------------------------------------------------------------
sub_bsw_common_pokemon_select:
{
  //回復
  _TEMOTI_POKEMON_KAIFUKU()
  
  //それでは参加するポケモンを
  $SCWK_TEMP0 = msg_bsw_scr_23
  _CALL sub_bsw_common_bwin_receipt
  _AB_KEYWAIT()
  _MSGWIN_CLOSE()
  
  //ポケモン選択
  _BSUBWAY_TOOL( BSWSUB_SELECT_POKE, BSW_NULL, BSW_NULL, BSW_NULL )
  //ポケモン選択結果
  _BSUBWAY_TOOL( BSWSUB_GET_ENTRY_POKE, BSW_NULL, BSW_NULL, SCWK_ANSWER )
}
_RET

//--------------------------------------------------------------
//  受付　連勝中であれば連勝中メッセージ表示
//--------------------------------------------------------------
sub_bsw_common_renshou_msg:
{
  DEFINE_LOCAL count
  
  _BSUBWAY_TOOL( BSWTOOL_GET_ZONE_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  _BSUBWAY_TOOL( BSWTOOL_GET_RENSHOU_CNT, play_mode, BSW_NULL, count )
  
  IF $count != 0 THEN
    _PLAYER_NAME( 0 )
    _NUMBER( 1, count, 3 )
    $SCWK_TEMP0 = msg_bsw_scr_08
    _CALL sub_bsw_common_bwin_receipt
    _AB_KEYWAIT()
  ENDIF
}
_RET

//--------------------------------------------------------------
//  受付　レポート処理
//  @retval SCWK_ANSWER 1=キャンセル
//--------------------------------------------------------------
sub_bsw_common_report:
{
  //現在位置Push
  _BSUBWAY_TOOL( BSWTOOL_PUSH_NOW_LOCATION, BSW_NULL, BSW_NULL, BSW_NULL )
  
  //レポートイベント呼び出し
  _REPORT_EVENT_CALL( SCWK_ANSWER )
  
  IF $SCWK_ANSWER == 1 THEN //キャンセル
    _CALL sub_bsw_common_exit
    $SCWK_ANSWER = 1
  ELSE
    $SCWK_ANSWER = 0
  ENDIF
}
_RET

//--------------------------------------------------------------
//  受付　オートセーブ
//--------------------------------------------------------------
sub_bsw_common_auto_save:
{
  _SYSWIN_MSG( msg_bsw_scr_78 , POS_DOWN )
  _REPORT_CALL( ret )
  _MSGWIN_CLOSE()
}
_RET

//--------------------------------------------------------------
//  受付　受付OBJID取得
//  @retval SCWK_ANSWER OBJID
//--------------------------------------------------------------
sub_bsw_common_get_objid_receipt:
{ 
  _GET_ZONE_ID( SCWK_ANSWER )
  
  SWITCH $SCWK_ANSWER
  CASE ZONE_ID_C04R0102 THEN
    $SCWK_ANSWER = C04R0102_RECEIPT
  CASE ZONE_ID_C04R0103 THEN
    $SCWK_ANSWER = C04R0103_RECEIPT
  CASE ZONE_ID_C04R0104 THEN
    $SCWK_ANSWER = C04R0104_RECEIPT
  CASE ZONE_ID_C04R0105 THEN
    $SCWK_ANSWER = C04R0105_RECEIPT
  CASE ZONE_ID_C04R0106 THEN
    $SCWK_ANSWER = C04R0106_RECEIPT
  CASE ZONE_ID_C04R0107 THEN
    $SCWK_ANSWER = C04R0107_RECEIPT
  CASE ZONE_ID_C04R0108 THEN
    $SCWK_ANSWER = C04R0108_RECEIPT
  ENDSWITCH
}
_RET

//--------------------------------------------------------------
//  受付　パートナーOBJID取得 ※パートナーOBJはマルチ、Sマルチのみ存在する
//  @retval SCWK_ANSWER OBJID
//--------------------------------------------------------------
sub_bsw_common_get_objid_partner:
{
  _GET_ZONE_ID( SCWK_ANSWER )
  
  SWITCH $SCWK_ANSWER
  CASE ZONE_ID_C04R0106 THEN 
    $SCWK_ANSWER = C04R0106_PARTNER
  CASE ZONE_ID_C04R0107 THEN
    $SCWK_ANSWER = C04R0107_PARTNER
  ENDSWITCH
}
_RET

//--------------------------------------------------------------
//  受付　パートナーOBJ用吹き出しメッセージ表示
//  @param SCWK_TEMP0 メッセージID 男
//  @param SCWK_TEMP1 メッセージID 女
//--------------------------------------------------------------
sub_bsw_common_bwin_partner:
{
  DEFINE_LOCAL sex
  DEFINE_LOCAL obj_id
  
  $msg_id = $SCWK_TEMP0
  
  _GET_MY_SEX( sex )
  
  IF $sex == PM_MALE THEN //自機男 パートナー女
    $msg_id = $SCWK_TEMP1
  ENDIF
  
  _CALL sub_bsw_common_get_objid_partner
  $obj_id = $SCWK_ANSWER
  
  _BALLOONWIN_OBJMSG_POS( msg_id, obj_id, POS_DOWN )
}
_RET

//--------------------------------------------------------------
//  受付　デモ　パートナーOBJ追加
//--------------------------------------------------------------
sub_bsw_common_add_partner:
{
  _CALL sub_bsw_common_get_objid_partner
  $objid = $SCWK_ANSWER
  
  _FLAG_RESET( FV_BSUBWAY_RECEIPT_PARTNER )
  
  _BSUBWAY_TOOL( BSWTOOL_CHK_EXIST_OBJ, objid, BSW_NULL, ret )
  
  IF $ret == TRUE THEN
    _OBJ_DEL( objid )
  ENDIF
  
  _BSUBWAY_TOOL( BSWTOOL_GET_OBJCODE_PARTNER, BSW_NULL, BSW_NULL, OBJCHRWORK0 )
  _OBJ_ADD( objid )
}
_RET

//--------------------------------------------------------------
//  受付　デモ　パートナーOBJ削除
//--------------------------------------------------------------
sub_bsw_common_del_partner:
{
  _CALL sub_bsw_common_get_objid_partner
  $objid = $SCWK_ANSWER

  _FLAG_SET( FV_BSUBWAY_RECEIPT_PARTNER )
  
  _BSUBWAY_TOOL( BSWTOOL_CHK_EXIST_OBJ, objid, BSW_NULL, ret )
  
  IF $ret == TRUE THEN
    _OBJ_DEL( objid )
  ENDIF
}
_RET

//--------------------------------------------------------------
//  受付　手持ちorバトルボックス選択、事前レギュチェック
//  @retval SCWK_ANSWER TRUE=完了 FALSE=キャンセル、エラー
//--------------------------------------------------------------
sub_bsw_common_select_btl_box:
{
  DEFINE_LOCAL regu
  
  $regu = REG_SUBWAY_SINGLE
  
  _BSUBWAY_TOOL( BSWTOOL_GET_DATA_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    $regu = REG_SUBWAY_SINGLE
  CASE BSWAY_MODE_S_SINGLE THEN
    $regu = REG_SUBWAY_SINGLE
  CASE BSWAY_MODE_DOUBLE THEN
    $regu = REG_SUBWAY_DOUBLE
  CASE BSWAY_MODE_S_DOUBLE THEN
    $regu = REG_SUBWAY_DOUBLE
  CASE BSWAY_MODE_MULTI THEN
    $regu = REG_SUBWAY_MALTI
  CASE BSWAY_MODE_COMM_MULTI THEN
    $regu = REG_SUBWAY_MALTI
  CASE BSWAY_MODE_S_MULTI THEN
    $regu = REG_SUBWAY_MALTI
  CASE BSWAY_MODE_S_COMM_MULTI THEN
    $regu = REG_SUBWAY_MALTI
  CASE BSWAY_MODE_WIFI THEN
    $regu = REG_SUBWAY_SINGLE
  ENDSWITCH
  
  //パーティ選択ウィンドウ
  _BTL_UTIL_PARTY_SELECT_CALL( regu, ret )
  
  SWITCH $ret
  CASE SCR_BTL_PARTY_SELECT_TEMOTI THEN //手持ち
    _BSUBWAY_TOOL( BSWSUB_SET_USE_BTL_BOX_FLAG, FALSE, BSW_NULL, BSW_NULL )
    $ret = TRUE
  CASE SCR_BTL_PARTY_SELECT_BTLBOX THEN //バトルボックス
    _BSUBWAY_TOOL( BSWSUB_SET_USE_BTL_BOX_FLAG, TRUE, BSW_NULL, BSW_NULL )
    _BSUBWAY_TOOL( BSWSUB_PREPAR_BTL_BOX, BSW_NULL, BSW_NULL, BSW_NULL )
    $ret = TRUE
  CASE SCR_BTL_PARTY_SELECT_CANCEL THEN //選択キャンセル
    $ret = FALSE
  CASE SCR_BTL_PARTY_SELECT_NG THEN //レギュレーションNG
    _BSUBWAY_TOOL( BSWSUB_GET_REGULATION_TYPE, BSW_NULL, BSW_NULL, ret )
    _BTL_UTIL_PARTY_REGULATION_NG_MSG_CALL( ret )
    _AB_KEYWAIT()
    _MSGWIN_CLOSE()
    $ret = FALSE
  DEFAULT
    $ret = FALSE
  ENDSWITCH
  
  $SCWK_ANSWER = $ret
}
_RET

/* old
sub_bsw_common_select_btl_box:
{
  DEFINE_LOCAL sel
  
  $sel = TRUE
  
  //バトルボックス、ポケモン居るか
  _BSUBWAY_TOOL( BSWTOOL_CHK_BTL_BOX_IN, BSW_NULL, BSW_NULL, ret )
  
  IF $ret == TRUE THEN
    $SCWK_TEMP0 = msg_bsw_scr_44
    _CALL sub_bsw_common_bwin_receipt

    _BMPMENU_INIT_EX( 1, 8, 0, 1, ret )
    _BMPMENU_MAKE_LIST( msg_bsw_scr_45, 0 )    //手持ち
    _BMPMENU_MAKE_LIST( msg_bsw_scr_46, 1 )    //バトルボックス
    _BMPMENU_MAKE_LIST( msg_bsw_scr_47, 2 )    //やめる
    _BMPMENU_START()
    _MSGWIN_CLOSE()
    
    IF $ret == 0 THEN //手持ち使用
      _BSUBWAY_TOOL( BSWSUB_SET_USE_BTL_BOX_FLAG, FALSE, BSW_NULL, BSW_NULL )
    ELSIF $ret == 1 THEN //バトルボックス
      _BSUBWAY_TOOL( BSWSUB_SET_USE_BTL_BOX_FLAG, TRUE, BSW_NULL, BSW_NULL )
      _BSUBWAY_TOOL( BSWSUB_PREPAR_BTL_BOX, BSW_NULL, BSW_NULL, BSW_NULL )
    ELSE //キャンセル
      $sel = FALSE
    ENDIF
  ELSE //バトルボックスポケモン居ない
    _BSUBWAY_TOOL( BSWSUB_SET_USE_BTL_BOX_FLAG, FALSE, BSW_NULL, BSW_NULL )
  ENDIF
  
  //事前レギュレーションチェック
  IF $sel == TRUE THEN 
    _BSUBWAY_TOOL( BSWSUB_CHK_REGULATION, BSW_NULL, BSW_NULL, ret )
    
    IF $ret == FALSE THEN //エラーメッセージ
    //レギュレーションメッセージを使用する
//      _BSUBWAY_TOOL( BSWSUB_GET_MEMBER_NUM, BSW_NULL, BSW_NULL, ret )
//      _NUMBER( 0, ret, 1 )
//      $SCWK_TEMP0 = msg_bsw_scr_21
//      _CALL sub_bsw_common_bwin_receipt
//      _MSGWIN_CLOSE()
    
      _BSUBWAY_TOOL( BSWSUB_GET_REGULATION_TYPE, BSW_NULL, BSW_NULL, ret )
      _BTL_UTIL_PARTY_REGULATION_NG_MSG_CALL( ret )
      _AB_KEYWAIT()
      _MSGWIN_CLOSE()
      
      _BSUBWAY_TOOL( BSWTOOL_DEBUG_CHK_FLAG, BSW_DEBUG_FLAG_REGU_OFF, BSW_NULL, debug_mode )
      
      IF $debug_mode == FALSE THEN
        $sel = FALSE
      ENDIF
    ENDIF
  ENDIF
  
  $SCWK_ANSWER = $sel
}
_RET
*/

//--------------------------------------------------------------
//  受付　受付OBJ用吹き出しウィンドウ表示
//  @param SCWK_TEMP0 メッセージID
//--------------------------------------------------------------
sub_bsw_common_bwin_receipt:
{
  DEFINE_LOCAL obj_id
  
  $msg_id = $SCWK_TEMP0
  
  _CALL sub_bsw_common_get_objid_receipt
  $obj_id = $SCWK_ANSWER
  
  _BALLOONWIN_OBJMSG_POS( msg_id, obj_id, POS_DOWN )
}
_RET

//--------------------------------------------------------------
//  受付　自機が受付からどの方向、位置に居るか
//  @param none
//  @retval SCWK_TEMP0 x
//  @retval SCWK_TEMP1 z
//  @retval SCWK_TEMP2 dir　受付からどの方向に居るか
//--------------------------------------------------------------
sub_bsw_common_check_jiki_talkpos:
{
  _OBJ_POS_GET( MMDL_ID_PLAYER, SCWK_TEMP0, SCWK_TEMP1 )

  IF $SCWK_TEMP0 == 12 THEN //受付縦方向話し掛け
    IF $SCWK_TEMP1 == 14 THEN
      $SCWK_TEMP2 = DIR_UP
    ELSE
      $SCWK_TEMP2 = DIR_DOWN
    ENDIF
  ELSE
    IF $SCWK_TEMP0 == 11 THEN
      $SCWK_TEMP2 = DIR_LEFT
    ELSE
      $SCWK_TEMP2 = DIR_RIGHT
    ENDIF
  ENDIF
}
_RET

//=====================================================================
//  バトルサブウェイ共通処理
//=====================================================================
//--------------------------------------------------------------
//  バトルサブウェイ　プレイモード別に受付に戻る
//--------------------------------------------------------------
ev_bsw_retmap_receipt:
{
  //プレイモード取得
  _BSUBWAY_TOOL( BSWTOOL_GET_DATA_PLAY_MODE, BSW_NULL, BSW_NULL, play_mode )
  
  SWITCH $play_mode
  CASE BSWAY_MODE_SINGLE THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0102, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_S_SINGLE THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0103, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_DOUBLE THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0104, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_S_DOUBLE THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0105, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_MULTI THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0106, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_COMM_MULTI THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0106, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_S_MULTI THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0107, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_S_COMM_MULTI THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0107, 11, 0, 15, DIR_RIGHT )
  CASE BSWAY_MODE_WIFI THEN
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0108, 11, 0, 15, DIR_RIGHT )
  DEFAULT
    _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0102, 11, 0, 15, DIR_RIGHT )
  ENDSWITCH
  
  _CHG_LOCAL_SCR
}
_RET

//=====================================================================
//  トレインタウン用
//=====================================================================
//--------------------------------------------------------------
//  マップ初期化　電車配置
//--------------------------------------------------------------
INIT_EVENT_START ev_init_bsw_ttown
{
  _BSUBWAY_TOOL( BSWTOOL_SET_TTOWN_TRAIN, BSW_NULL, BSW_NULL, BSW_NULL )
}
INIT_EVENT_END

//--------------------------------------------------------------
//  トレインタウン受付　話し掛け
//--------------------------------------------------------------
EVENT_START ev_bsw_ttown_receipt_talk
{
  _TALK_OBJ_START()
   
  $ret = FALSE
  $msg_id = msg_bsw_ttown_01
  
  IF $ret == TRUE THEN
    $msg_id = msg_bsw_ttown_00 //初回メッセージ
    //初回フラグセット予定
  ENDIF
  
  //戻るか？
  _BALLOONWIN_TALKOBJ_MSG( msg_id )
  _YES_NO_WIN( ret )
  
  IF $ret == SCR_YES THEN
    $msg_id = msg_bsw_ttown_02 //ご乗車下さい
  ELSE
    $msg_id = msg_bsw_ttown_03 //またお越し下さい
  ENDIF
  
  _BALLOONWIN_TALKOBJ_MSG( msg_id )
  _LAST_KEYWAIT()
  _MSGWIN_CLOSE()
  
  IF $ret == SCR_YES THEN
    //トレインタウンの電車状態を決定する
    _GET_TRAIN_TOWN_COND( WK_OTHER_T05_TRAIN )
    _CALL sub_ttown_demo_start_train
    _MAP_CHANGE( ZONE_ID_T05, 22, 54, DIR_LEFT )
  ENDIF
}
EVENT_END

//--------------------------------------------------------------
//  トレインタウン　電車発車デモ
//--------------------------------------------------------------
sub_ttown_demo_start_train:
{
  //自機高さを固定化
  _BSUBWAY_TOOL( BSWTOOL_OBJ_HEIGHT_OFF, MMDL_ID_PLAYER, 0, BSW_NULL )
  
  _PLAYER_DIR_GET( SCWK_ANSWER )
  
  //電車へ移動
  SWITCH $SCWK_ANSWER
  CASE DIR_UP THEN
    _OBJ_ANIME( SCWK_TARGET_OBJID, anm_receipt_demo_start_train_receipt1 )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki1 )
  CASE DIR_DOWN THEN
    _OBJ_ANIME( SCWK_TARGET_OBJID, anm_receipt_demo_start_train_receipt0 )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki0 )
  CASE DIR_LEFT THEN
    _OBJ_ANIME( SCWK_TARGET_OBJID, anm_receipt_demo_start_train_receipt3 )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki3 )
  DEFAULT
    _OBJ_ANIME( SCWK_TARGET_OBJID, anm_receipt_demo_start_train_receipt2 )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_receipt_demo_start_train_jiki2 )
  ENDSWITCH
  
  //OBJアニメ待ち
  _OBJ_ANIME_WAIT()
  
  //電車移動
  _BSUBWAY_TOOL( BSWTOOL_SET_TRAIN_ANM, BTRAIN_ANIME_TYPE_START_HOME, BSW_NULL, BSW_NULL )
  _SE_PLAY( SEQ_SE_BDEMO_01 ) //電車扉音
  _TIME_WAIT( 35 )
  _SE_PLAY( SEQ_SE_BDEMO_02 ) //電車発射音
  
  _TIME_WAIT( 15 ) //アニメを少し見せてフェードアウト
}
_RET

//=====================================================================
//  debug
//=====================================================================
//--------------------------------------------------------------
//  電車内に移動
//--------------------------------------------------------------
ev_bsw_debug_map_chg_train:
{
  _MAP_FADE_BLACK_OUT()
  _MAP_FADE_END_CHECK()
  _MAP_CHANGE_NO_FADE( ZONE_ID_C04R0110, 7, 0, 4, DIR_UP )
}
_END
