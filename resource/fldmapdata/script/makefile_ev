#----------------------------------------------------------------------------
# Project:  スクリプト
# File:     Makefile
# Copyright 2005 GameFreak.inc  All rights reserved.
#----------------------------------------------------------------------------
#対象ユーザー
include ../event_script_users_def

#共通マクロ
include $(PROJECT_RSCDIR)/macro_define

#SUBDIR
SUBDIRS =

#対象ヘッダーファイル
DEPENDHEADERS = usescript.h scr_seq_def.h easy_event_def.h \
								$(PROJECT_PROGDIR)src/field/scrcmd_table.cdat \
								../flagwork/flag_define.h ../flagwork/work_define.h \
								../../sound/wb_sound_data.sadl ../zonetable/zone_id.h \
								$(PROJECT_PROGDIR)version

#マップ依存のスクリプト（t01.ev,sp_t01.ev etc.）：定義ファイルは自動生成
SCRIPTFILES	=
include zone_script.list

#マップ非依存スクリプト（common_scr.ev init_scr.ev等）：定義ファイルは自動生成
#UNIQ_SCRIPTFILES =
include uniq_script.list

#COMPILE_TARGETSとARCHIVE_TARGETSに含まれる内容は一緒だが並びを代えている

#非マップスクリプトから先にコンパイルされる（通常スクリプトから呼び出す際にIDを参照するため）
COMPILE_TARGETS	= $(UNIQ_SCRIPTFILES:.ev=.bin) $(SCRIPTFILES:.ev=.bin)

#アーカイブにするときはマップスクリプトからの並びにする
#（非マップスクリプトを追加してもアーカイブIDがずれないように）
ARCHIVE_TARGETS = $(SCRIPTFILES:.ev=.bin) $(UNIQ_SCRIPTFILES:.ev=.bin)

ifeq ($(PM_DEBUG),yes)		#デバッグビルドの場合
COMPILE_TARGETS += $(UNIQ_DEBUG_EVENT_SCRFILES:.ev=.bin)
ARCHIVE_TARGETS += $(UNIQ_DEBUG_EVENT_SCRFILES:.ev=.bin)

DEBUG_SCR_LIST_BIN	= scr_debug/debug_list.bin
DEBUG_SCR_LIST_H		= scr_debug/debug_list.h
COMPILE_TARGETS += $(DEBUG_SCR_LIST_BIN)
ARCHIVE_TARGETS += $(DEBUG_SCR_LIST_BIN)
FILEPATH_CDAT			= scr_debug/scr_filepath.cdat
FILEPATH_CONVERTER	= scr_debug/make_filepath.rb
endif

#MWAS,MWLD
include	$(NITROSYSTEM_ROOT)/build/buildtools/commondefs
## この定義はcommondefsの下に書く必要がある
include	$(COMMONDEFS_CCTYPE_CW)

#Moduleルール
include	$(NITROSYSTEM_ROOT)/build/buildtools/modulerules

#target
TARGET_DIR = $(PROJECT_ARCDIR)fieldmap
TARGET_NARC = script_seq.narc
TARGET_NAIX = $(TARGET_NARC:.narc=.naix)

#eventdata/tmp参照
ADD_MACRO = -I../eventdata/tmp/ -I../../message/dst/script/ -I../../personal/

#(PM_DEBUG == yes)のときのみデバッグバージョン
ifeq ($(PM_DEBUG),yes)
ADD_MACRO += -DPM_DEBUG
endif

#----------------------------------------------------------------------------
#	clean
# Makeで生成される*.narcはmake cleanの削除対象にする
#----------------------------------------------------------------------------
LDIRT_CLEAN	= $(TARGET_DIR)/$(TARGET_NARC) $(TARGET_DIR)/$(TARGET_NAIX)
ifeq ($(CONVERTUSER),true) #CONVERTUSER
LDIRT_CLEAN	+= $(TARGET_NARC) $(TARGET_NAIX) $(COMPILE_TARGETS)
LDIRT_CLEAN += $(FILEPATH_CDAT)
else
endif

#----------------------------------------------------------------------------
#	SUFFIXES
#----------------------------------------------------------------------------
.SUFFIXES: .bin .ev

#----------------------------------------------------------------------------
#	make
#----------------------------------------------------------------------------
#narc
ifeq ($(PM_DEBUG),yes)		#デバッグビルドの場合
do-build: $(TARGET_DIR)/$(TARGET_NARC) $(FILEPATH_CDAT)
else
do-build: $(TARGET_DIR)/$(TARGET_NARC) 
endif

$(TARGET_DIR)/$(TARGET_NARC): $(TARGET_NARC)
	$(COPY) $(TARGET_NARC) $(TARGET_DIR)
	$(COPY) $(TARGET_NAIX) $(TARGET_DIR)
ifeq ($(PM_DEBUG),yes)		#デバッグビルドの場合
	$(COPY)	$(DEBUG_SCR_LIST_H) $(TARGET_DIR)
endif

ifeq ($(CONVERTUSER),true) #CONVERTUSER
#*.bin
%.bin: %.ev  $(DEPENDHEADERS)
	@echo $<
	@ruby filter/user.rb $< > temp_$*.s
	@#$(MWAS) -E $(ADD_MACRO)  temp_$*.s -o $*.dis
	@$(MWAS) $(ADD_MACRO)  temp_$*.s -o $*.o
	@$(MWLD) -dis -o $*.elf $*.o
	@elf2bin $*.elf
	@rm $*.o $*.elf
	@rm temp_$*.s

ifeq ($(PM_DEBUG),yes)		#デバッグビルドの場合
$(DEBUG_SCR_LIST_BIN):	debug_scr_def.h
	ruby scr_debug/debug_scr_list.rb debug_scr_def.h $(DEBUG_SCR_LIST_BIN) > $(DEBUG_SCR_LIST_H)
endif	#PM_DEBUG

endif #CONVERTUSER


#script.narc
$(TARGET_NARC): $(COMPILE_TARGETS)
	@echo "スクリプトデータをアーカイブします"
	@nnsarc -i -c -l -n $(TARGET_NARC) $(ARCHIVE_TARGETS) > arc_result.txt
	@$(NAIXCUT) $(TARGET_NAIX)


ifeq ($(PM_DEBUG),yes)
$(FILEPATH_CDAT):	zone_script.list uniq_script.list $(FILEPATH_CONVERTER)
	@echo スクリプトデバッガ用ファイル生成
	@echo $(ARCHIVE_TARGETS) | ruby $(FILEPATH_CONVERTER) $(FILEPATH_CDAT)
endif

#----------------------------------------------------------------------------
#----------------------------------------------------------------------------
make-verinfo:
	#do nothing!!

#----------------------------------------------------------------------------
#	diff
#----------------------------------------------------------------------------
diff:
	-cp $(TARGET_NARC) old.narc
	$(MAKE)
	-fc /b $(TARGET_NARC) old.narc

#----------------------------------------------------------------------------
#	test
#----------------------------------------------------------------------------
test:
	@echo $(COMPILE_TARGETS)
	@#echo $(SCRIPTFILES)
	@#echo $(ARCHIVE_TARGETS) | ruby $(FILEPATH_CONVERTER) $(FILEPATH_CDAT)

