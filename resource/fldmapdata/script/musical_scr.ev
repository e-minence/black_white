//======================================================================
//                musical_scr.ev
//            ミュージカル関連スクリプト
//
//    スクリプトファイル：musical_scr用
//
//======================================================================
  .text

  .include  "scr_seq_def.h"
  .include  "msg_musical_scr.h"
  .include  "musical_scr_def.h"
  .include  "musical_scr_local.h" //ミュージカルの定義が入っています
  .include  "c04r0201.h"

//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA   ev_musical_recept_single
_EVENT_DATA   ev_musical_recept_comm
_EVENT_DATA   ev_musical_recept_fitting
_EVENT_DATA   ev_musical_change_program
_EVENT_DATA   ev_musical_return_hall
_EVENT_DATA   ev_musical_return_hall_err
_EVENT_DATA   ev_musical_fan_01
_EVENT_DATA   ev_musical_fan_02
_EVENT_DATA   ev_musical_fan_03
_EVENT_DATA   ev_musical_fan_04
_EVENT_DATA   ev_musical_fan_05
_EVENT_DATA   ev_musical_fan_06
_EVENT_DATA   ev_musical_fan_07
_EVENT_DATA   ev_musical_fan_08
_EVENT_DATA   ev_musical_fan_09
_EVENT_DATA   ev_musical_fan_10
_EVENT_DATA   ev_musical_add_goods
_EVENT_DATA_END


//----------------------------------------------------------------------
// ローカルワーク
//----------------------------------------------------------------------
DEFINE_LOCAL fan_number // ファンの番号

DEFINE_LOCAL selectPoke
DEFINE_LOCAL isFitting

/*************************************************************/
/*            一人用　受付             */
/*************************************************************/
EVENT_START ev_musical_recept_single

  $isFitting = FALSE
  _MUSICAL_TOOLS( MUSICAL_TOOL_INIT, 0,0,0 )

//デバッグ
//  _MUSICAL_CALL(0,MUSICAL_CALL_LOCAL) //ミュージカル呼び出し
//デバッグ

  _TALK_OBJ_START()

  _BALLOONWIN_OBJMSG_POS( msg_musical_test_01, SCWK_TARGET_OBJID, POS_DOWN )
  _CALL ev_musical_recept_first

  IF $SCWK_ANSWER == TRUE THEN
    //ポケモン選択
    _CALL ev_musical_select_poke
    IF $SCWK_ANSWER == FALSE THEN //  選ばなかった
      _CALL ev_musical_exit_common
    ELSE
      _CALL recept_select_program

      IF $SCWK_ANSWER == FALSE THEN //  選ばなかった
        _CALL ev_musical_exit_common
      ELSE
        _BALLOONWIN_OBJMSG_POS( msg_musical_test_02, SCWK_TARGET_OBJID, POS_DOWN )
        _BALLOONWIN_CLOSE()

        //入場アニメ
        _CALL recept_move_obj_solo

        _SE_PLAY(	SEQ_SE_KAIDAN )
        _MAP_FADE_BLACK_OUT( )
        _SE_WAIT()
        _MAP_FADE_END_CHECK()
        _MUSICAL_CALL(selectPoke,MUSICAL_CALL_LOCAL) //ミュージカル呼び出し
        //ここから処理は帰ってきません。
        //細かい開放はプログラムで行います。
      ENDIF
    ENDIF
  ELSE
    _CALL ev_musical_exit_common
  ENDIF
EVENT_END


/*************************************************************/
/*            通信　受付               */
/*************************************************************/
EVENT_START ev_musical_recept_comm

  $isFitting = FALSE
  _MUSICAL_TOOLS( MUSICAL_TOOL_INIT, 0,0,0 )
  _TALK_OBJ_START()
  
  _CALL ev_musical_recept_comm_core

EVENT_END

/*************************************************************/
/*            試着室　受付               */
/*************************************************************/
EVENT_START ev_musical_recept_fitting

  $isFitting = TRUE
  _MUSICAL_TOOLS( MUSICAL_TOOL_INIT, 0,0,0 )
  
  _TALK_OBJ_START()

  _BALLOONWIN_OBJMSG_POS( msg_musical_fitting_01, SCWK_TARGET_OBJID, POS_DOWN )
  _CALL ev_musical_recept_first

  IF $SCWK_ANSWER == TRUE THEN //やめる
    //ポケモン選択
    _CALL ev_musical_select_poke
    IF $SCWK_ANSWER == TRUE THEN //  選ばなかった
      _BALLOONWIN_OBJMSG_POS( msg_musical_fitting_02, SCWK_TARGET_OBJID, POS_DOWN )
      _BALLOONWIN_CLOSE()

      //入場アニメ
      _CALL recept_move_obj_fitting

      //c04r0201でも初回イベントで使ってるので注意
      _DEMO_MUSICAL_DRESSUP_FADEOUT_CALL()
      _FIELD_CLOSE()
      
      _MUSICAL_FITTING_CALL(selectPoke) //ミュージカル呼び出し
      
      _FIELD_OPEN()
      _CALL recept_move_obj_return_fitting
      _DEMO_MUSICAL_DRESSUP_FADEIN_CALL()

    ENDIF
  ENDIF  
  
  _CALL ev_musical_exit_common

EVENT_END

/*************************************************************/
/*            帰ってきた時処理             */
/*************************************************************/
EVENT_START ev_musical_return_hall
  _MAP_FADE_BLACK_IN( )
  _MAP_FADE_END_CHECK()
  _MSGWIN_SET_AUTOPRINT( FALSE )
EVENT_END

/*************************************************************/
/*            帰ってきた時処理             */
/*************************************************************/
EVENT_START ev_musical_return_hall_err
  _MAP_FADE_BLACK_IN()
  _MAP_FADE_END_CHECK()
  _MSGWIN_SET_AUTOPRINT( FALSE )

//  _BALLOONWIN_OBJMSG( msg_musical_test_03, MUSICAL_RECEPT_COMM )
//  _BALLOONWIN_CLOSE()

EVENT_END

/*************************************************************/
/*            通信　受付コア               */
/*************************************************************/
ev_musical_recept_comm_core:

  DEFINE_LOCAL ret
  DEFINE_LOCAL retParentChild
  DEFINE_LOCAL retIrWl

  //デバッグ
  /*
  //フィールド通信切断
  _FIELD_COMM_EXIT_EVENT_CALL( ret )
  //親になるか子になるか
  _BALLOONWIN_OBJMSG_POS( msg_musical_recept_wl_01, SCWK_TARGET_OBJID, POS_DOWN )
  
  _BMPMENU_INIT_RIGHT(  MENU_X1, MENU_Y1, 0, 1, retParentChild )
  _BMPMENU_MAKE_LIST( msg_musical_recept_leader, 0 ) //リーダー
  _BMPMENU_MAKE_LIST( msg_musical_recept_group, 1 ) //グループ
  _BMPMENU_MAKE_LIST( msg_musical_recept_return, 2 ) //やめる
  _BMPMENU_START()
  _BALLOONWIN_CLOSE()
  
  //WL処理
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_INIT, 0, 0, 0 )
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_WAIT_NET_INIT ,0,0,0 )
  IF $retParentChild == 0 THEN //リーダー
    _CALL ev_musical_receipt_comm_connect_parent
  ELSE //グループ
    _CALL ev_musical_receipt_comm_connect_child
  ENDIF
  //IR処理
  
  //_MUSICAL_TOOLS( MUSICAL_TOOL_COMM_INIT, 1, 0, 0 )
  //リーダー、グループ別参加処理
  //IF $retParentChild == 0 THEN //リーダー
  //  _CALL ev_musical_receipt_comm_connect_ir_parent
  //ELSE //グループ
  //  _CALL ev_musical_receipt_comm_connect_ir_child
  //ENDIF
  //_MUSICAL_TOOLS( MUSICAL_TOOL_COMM_INIT_AFTER_IR ,0,0,0 )
  
  //IR処理
  //通信同期(お友達の選択を待っています)
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_TIMESYNC, MUSICAL_COMM_SYNC_FIRST, 0, 0 )
  _MUSICAL_CALL(0,MUSICAL_CALL_COMM) //ミュージカル呼び出し

  //*/
  //デバッグ

  //ミュージカルしますか？
  _BALLOONWIN_OBJMSG_POS( msg_musical_recept_01, SCWK_TARGET_OBJID, POS_DOWN )
  _CALL ev_musical_recept_first

  IF $SCWK_ANSWER == FALSE THEN //やめる
    _CALL ev_musical_exit_common
    _RET
  ENDIF

  _GET_AVAILABLE_WIRELESS( SCWK_ANSWER )
  //FALSEのとき、無線通信は使えない
  IF $SCWK_ANSWER == FALSE THEN
    //共通メッセージ呼び出し
    _BALLOONWIN_CLOSE()
    _CHG_COMMON_SCR SCRID_WIRELESS_OFF_MESSAGE
    _CALL ev_musical_exit_common
    _RET
  ENDIF

  //ポケモン選択
  _CALL ev_musical_select_poke
  IF $SCWK_ANSWER == FALSE THEN //接続失敗
    _CALL ev_musical_exit_common
    _RET
  ENDIF
  
  //赤外線orワイヤレス
  _BALLOONWIN_OBJMSG_POS( msg_musical_recept_04, SCWK_TARGET_OBJID, POS_DOWN )

  _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, retIrWl )
  _BMPMENU_MAKE_LIST( msg_musical_recept_05, 0 ) //赤外線
  _BMPMENU_MAKE_LIST( msg_musical_recept_06, 1 ) //ワイヤレス
  _BMPMENU_MAKE_LIST( msg_musical_recept_return, 2 ) //やめる
  _BMPMENU_START()

  IF $retIrWl == 2 || $retIrWl == EV_WIN_B_CANCEL THEN //やめる
    _CALL ev_musical_exit_common
    _RET
  ENDIF
  
  IF $retIrWl == 0 THEN
    _BALLOONWIN_OBJMSG_POS( msg_musical_recept_ir_02, SCWK_TARGET_OBJID, POS_DOWN )
  ELSE
    _BALLOONWIN_OBJMSG_POS( msg_musical_recept_wl_02, SCWK_TARGET_OBJID, POS_DOWN )
  ENDIF
  _YES_NO_WIN( SCWK_ANSWER )
  
  IF $SCWK_ANSWER == SCR_NO  THEN //やめる
    _CALL ev_musical_exit_common
    _RET
  ENDIF

  //通信前レポート
  _BALLOONWIN_CLOSE()
  _REPORT_EVENT_CALL( ret )
  
  IF $ret != SCR_REPORT_OK THEN //レポートしない
    _CALL ev_musical_exit_common
    _RET
  ENDIF

  //フィールド通信切断
  _FIELD_COMM_EXIT_EVENT_CALL( ret )
  
  IF $ret == SCR_FIELD_COMM_EXIT_CANCEL THEN
    $ret = FALSE
  ELSIF $ret == SCR_FIELD_COMM_EXIT_ERROR THEN
    $ret = FALSE
  ELSE
    $ret = TRUE
  ENDIF
  
  IF $ret == FALSE THEN //切断失敗
  _CALL ev_musical_exit_common
    _RET
  ENDIF

  
  {
    DEFINE_LOCAL isLoop2
    DEFINE_LOCAL isLoop3
    $isLoop2 = TRUE
    WHILE $isLoop2 == TRUE
    {
      //親になるか子になるか
      _BALLOONWIN_OBJMSG_POS( msg_musical_recept_wl_01, SCWK_TARGET_OBJID, POS_DOWN )
      
      _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, retParentChild )
      _BMPMENU_MAKE_LIST( msg_musical_recept_group, 1 ) //グループ
      _BMPMENU_MAKE_LIST( msg_musical_recept_leader, 0 ) //リーダー
      _BMPMENU_MAKE_LIST( msg_musical_recept_return, 2 ) //やめる
      _BMPMENU_START()
      
      IF $retParentChild == 2||$retParentChild == EV_WIN_B_CANCEL  THEN //やめる
        _CALL ev_musical_exit_common
        _RET
      ELSE
      
        IF $retParentChild == 0 THEN
          //親なので演目選択
          _CALL recept_select_program
        ELSE
          $SCWK_ANSWER = TRUE
        ENDIF
        
        IF $SCWK_ANSWER == TRUE THEN
          //実際の通信ロビー処理
          IF $retIrWl == 0 THEN
            //通信開始
            _BALLOONWIN_CLOSE()
            //第2引数はWLorIrc
            _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_INIT, 1, 0, 0 )
            _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_WAIT_NET_INIT ,1,0,0 )

            //リーダー、グループ別参加処理
            IF $retParentChild == 0 THEN //リーダー
              _CALL ev_musical_receipt_comm_connect_ir_parent
            ELSE //グループ
              _CALL ev_musical_receipt_comm_connect_ir_child
            ENDIF

            IF $SCWK_ANSWER == FALSE THEN //接続失敗
              //通信切って選びなおし
              _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_EXIT, 1, 0, 0 )
            ENDIF

          ELSIF $retIrWl == 1 THEN
            //--------------------------
            //ここからワイヤレス受付処理

            //通信開始
            _BALLOONWIN_CLOSE()
            //第2引数はWLorIrc
            _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_INIT, 0, 0, 0 )
            _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_WAIT_NET_INIT ,0,0,0 )

            //リーダー、グループ別参加処理
            IF $retParentChild == 0 THEN //リーダー
              _CALL ev_musical_receipt_comm_connect_parent
            ELSE //グループ
              _CALL ev_musical_receipt_comm_connect_child
            ENDIF

            IF $SCWK_ANSWER == FALSE THEN //接続失敗
              //通信切って選びなおし
              _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_EXIT, 0, 0, 0 )
            ENDIF
            //ここまでワイヤレス受付処理
            //--------------------------
          ENDIF

          //WLだけ切断処理するのでここでは成功時のみ
          IF $SCWK_ANSWER == TRUE THEN //接続成功
            $isLoop2 = FALSE
          ENDIF

          _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_CALL_ERROR, 0, 0, SCWK_ANSWER )
          IF $SCWK_ANSWER == TRUE THEN //通信エラー発生
            _CALL ev_musical_exit_comm_common
            _RET
          ENDIF

          //実際の通信ロビー処理ここまで
        ENDIF
      ENDIF
    }//WHILE isLoop2
    ENDWHILE
  }
  
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_CALL_ERROR, 0, 0, SCWK_ANSWER )

  IF $SCWK_ANSWER == TRUE THEN //通信エラー発生
  ELSE
    _BALLOONWIN_OBJMSG_POS( msg_musical_recept_07, SCWK_TARGET_OBJID, POS_DOWN )
    _BALLOONWIN_CLOSE()
    //通信同期(お友達の選択を待っています)
    _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_TIMESYNC, MUSICAL_COMM_SYNC_FIRST, 0, 0 )

    //入場アニメ
    _CALL recept_move_obj_comm
    

    _SE_PLAY(	SEQ_SE_KAIDAN )
    _MAP_FADE_BLACK_OUT( )
    _SE_WAIT()
    _MAP_FADE_END_CHECK()

    _MUSICAL_CALL(selectPoke,MUSICAL_CALL_COMM) //ミュージカル呼び出し

    //ここから処理は帰ってきません。
    //細かい開放はプログラムで行います。
    _CALL ev_musical_exit_comm_common
  ENDIF

_RET


//--------------------------------------------------------------
//  受付　通信　赤外線接続
//  @retval SCWK_ANSWER FALSE=接続無し
//--------------------------------------------------------------
ev_musical_receipt_comm_connect_ir_parent:
{
  //親参加メニュー(第2引数で分岐
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_IR_CONNECT, 0, 0, SCWK_ANSWER )
  
  SWITCH $SCWK_ANSWER
  CASE MUSICAL_COMM_ENTRY_IR_OK THEN //OK
    $SCWK_ANSWER = TRUE
  CASE MUSICAL_COMM_ENTRY_IR_CANCEL THEN //キャンセル
    $SCWK_ANSWER = FALSE
  ENDSWITCH
  _RET
}
ev_musical_receipt_comm_connect_ir_child:
{
  //子参加メニュー(第2引数で分岐
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_IR_CONNECT, 1, 0, SCWK_ANSWER )
  
  SWITCH $SCWK_ANSWER
  CASE MUSICAL_COMM_ENTRY_IR_OK THEN //OK
    $SCWK_ANSWER = TRUE
  CASE MUSICAL_COMM_ENTRY_IR_CANCEL THEN //キャンセル
    $SCWK_ANSWER = FALSE
  ENDSWITCH
  _RET
}

//--------------------------------------------------------------
//  受付　通信　リーダー接続
//  @retval SCWK_ANSWER FALSE=接続無し
//--------------------------------------------------------------
ev_musical_receipt_comm_connect_parent:
{
  //親参加メニュー
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_PARENT_CONNECT, 0, 0, SCWK_ANSWER )
  
  SWITCH $SCWK_ANSWER
  CASE MUSICAL_COMM_ENTRY_PARENT_OK THEN //OK
    $SCWK_ANSWER = TRUE
  CASE MUSICAL_COMM_ENTRY_PARENT_CANCEL THEN //キャンセル
    $SCWK_ANSWER = FALSE
  CASE MUSICAL_COMM_ENTRY_PARENT_ERROR THEN //エラー
    $SCWK_ANSWER = FALSE
  ENDSWITCH
  _RET
}

//--------------------------------------------------------------
//  受付　通信　グループ接続
//  @retval SCWK_ANSWER FALSE=接続無し
//--------------------------------------------------------------
ev_musical_receipt_comm_connect_child:
{
  //子参加メニュー
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_CHILD_CONNECT, 0, 0, SCWK_ANSWER )

  SWITCH $SCWK_ANSWER
  CASE MUSICAL_COMM_ENTRY_CHILD_OK THEN //OK
    $SCWK_ANSWER = TRUE
  CASE MUSICAL_COMM_ENTRY_CHILD_CANCEL THEN //NG
    $SCWK_ANSWER = FALSE
  ENDSWITCH
  _RET
}


/*************************************************************/
/*            共通終了処理(通信          */
/*************************************************************/
ev_musical_exit_comm_common:
  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_EXIT, 0, 0, 0 )
  _CALL ev_musical_exit_common
_RET
/*************************************************************/
/*            共通終了処理               */
/*************************************************************/
ev_musical_exit_common:
  _MUSICAL_TOOLS( MUSICAL_TOOL_EXIT, 0,0,0 )
  _REBOOT_BEACON_SEARCH()

  _MUSICAL_TOOLS( MUSICAL_TOOL_COMM_CALL_ERROR, 0, 0, SCWK_ANSWER )
  IF $SCWK_ANSWER == FALSE THEN //通信エラー発生してない
    _BALLOONWIN_OBJMSG_POS( msg_musical_test_03, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
  ENDIF
_RET

/*************************************************************/
/*            共通処理最初の受付               */
/*  最初のメッセージが違うので選択肢処理をいきなり入れる。
/*************************************************************/
ev_musical_recept_first:

  DEFINE_LOCAL isLoop
  DEFINE_LOCAL isLoopExp
  $isLoop = TRUE

  WHILE $isLoop == TRUE
  {
    _BMPMENU_INIT_RIGHT(  MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
    //リスト追加
    _BMPMENU_MAKE_LIST( msg_musical_recept_yes, 0 )
    _BMPMENU_MAKE_LIST( msg_musical_recept_no, 1 )
    _BMPMENU_MAKE_LIST( msg_musical_recept_explain, 2 )
    _BMPMENU_START()
    
    IF $SCWK_ANSWER == 0 THEN
      $SCWK_ANSWER = TRUE
      $isLoop = FALSE
    ELSIF $SCWK_ANSWER == 1 || $SCWK_ANSWER == EV_WIN_B_CANCEL THEN
      $SCWK_ANSWER = FALSE
      $isLoop = FALSE
    ELSE
      $isLoopExp = TRUE
      //説明ゾーン ココから
      WHILE $isLoopExp == TRUE
      {
        _BALLOONWIN_OBJMSG_POS( msg_musical_info_01, SCWK_TARGET_OBJID, POS_DOWN )
        //メニュー作成
        _BMPMENU_INIT_RIGHT(  MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
        _BMPMENU_MAKE_LIST( msg_musical_info_02, 0 )
        _BMPMENU_MAKE_LIST( msg_musical_info_04, 1 )
        _BMPMENU_MAKE_LIST( msg_musical_info_06, 2 )
        _BMPMENU_MAKE_LIST( msg_musical_info_08, 3 )
        _BMPMENU_MAKE_LIST( msg_musical_info_10, 4 )
        _BMPMENU_MAKE_LIST( msg_musical_recept_return , 5 )

        _BMPMENU_START()
      IF $SCWK_ANSWER == 5 || $SCWK_ANSWER == EV_WIN_B_CANCEL THEN
        $isLoopExp = FALSE
        //参加しますか？をココで出す
        IF  $isFitting == TRUE THEN
          _BALLOONWIN_OBJMSG_POS( msg_musical_fitting_03, SCWK_TARGET_OBJID, POS_DOWN )
        ELSE
          _BALLOONWIN_OBJMSG_POS( msg_musical_recept_08, SCWK_TARGET_OBJID, POS_DOWN )
        ENDIF
        //で、最初に戻って質問から
      ELSIF $SCWK_ANSWER == 0 THEN
        _BALLOONWIN_OBJMSG_POS( msg_musical_info_03, SCWK_TARGET_OBJID, POS_DOWN )
      ELSIF $SCWK_ANSWER == 1 THEN
        _BALLOONWIN_OBJMSG_POS( msg_musical_info_05, SCWK_TARGET_OBJID, POS_DOWN )
      ELSIF $SCWK_ANSWER == 2 THEN
        _BALLOONWIN_OBJMSG_POS( msg_musical_info_07, SCWK_TARGET_OBJID, POS_DOWN )
      ELSIF $SCWK_ANSWER == 3 THEN
        _BALLOONWIN_OBJMSG_POS( msg_musical_info_09, SCWK_TARGET_OBJID, POS_DOWN )
      ELSIF $SCWK_ANSWER == 4 THEN
        _BALLOONWIN_OBJMSG_POS( msg_musical_info_11, SCWK_TARGET_OBJID, POS_DOWN )
      ENDIF
      
      }
      ENDWHILE
      //説明ゾーン ココまで
    ENDIF
  }
  ENDWHILE

_RET

/*************************************************************/
/*            共通処理ポケモン選択               */
/*************************************************************/
ev_musical_select_poke:

  //参加可能ポケチェック
  {
    DEFINE_LOCAL LWK_ENT_CHK

    //ミュージカル参加できるポケが何匹いるかチェック
    _GET_MUSICAL_VALUE_COUNT_MUSICAL_POKE( LWK_ENT_CHK )
    IF $LWK_ENT_CHK == 0 THEN
      //参加できるポケモンがいない
      _BALLOONWIN_OBJMSG_POS( msg_musical_recept_02, SCWK_TARGET_OBJID, POS_DOWN )
      $SCWK_ANSWER = FALSE
      _RET
    ENDIF
  }  
  {
    
    DEFINE_LOCAL LWK_SEL_CANCEL
    //参加ポケモンを選ぶ
    _BALLOONWIN_OBJMSG_POS( msg_musical_test_05, SCWK_TARGET_OBJID, POS_DOWN )
    _BALLOONWIN_CLOSE()
    //選択画面をコール
    _SELECT_MUSCAL_POKE( LWK_SEL_CANCEL , selectPoke )
    
    //キャンセルして戻ってきた
    IF $LWK_SEL_CANCEL == 0 THEN
      $SCWK_ANSWER = FALSE
      _RET
    ENDIF
  }
  $SCWK_ANSWER = TRUE
  
 _RET

/*************************************************************/
/*            演目選択ルーチン */
/*************************************************************/
recept_select_program:

  DEFINE_LOCAL enableDist

  _GET_MUSICAL_VALUE( MUSICAL_VALUE_IS_ENABLE_DIST_DATA , 0 , enableDist )
  
  _BALLOONWIN_OBJMSG_POS( msg_musical_test_04, SCWK_TARGET_OBJID, POS_DOWN )
  //メニュー作成
  _BMPMENU_INIT_RIGHT(  MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
  //リスト追加
  _BMPMENU_MAKE_LIST( msg_musical_program_01, 0 )
  _BMPMENU_MAKE_LIST( msg_musical_program_02, 1 )
  _BMPMENU_MAKE_LIST( msg_musical_program_03, 2 )
  _BMPMENU_MAKE_LIST( msg_musical_program_04, 3 )

  IF $enableDist == TRUE THEN
    //配信曲が有効
    _MUSICAL_WORD_PROGRAM_TITLE(0)
    _BMPMENU_MAKE_LIST( msg_musical_program_05, 4 )
  ENDIF
  _BMPMENU_MAKE_LIST( msg_musical_program_06, 5 ) //やめる
  //メニュー表示
  _BMPMENU_START()

  IF $SCWK_ANSWER == 5 || $SCWK_ANSWER == EV_WIN_B_CANCEL THEN
    $SCWK_ANSWER = FALSE
  ELSE
    _SET_MUSICAL_VALUE_SELECT_PROGRAM( SCWK_ANSWER )
    $SCWK_ANSWER = TRUE
  ENDIF

_RET

/*************************************************************/
/*            受付演出(一人)          */
/*************************************************************/
recept_move_obj_solo:
{
  _OBJ_ANIME( MUSICAL_RECEPT_SINGLE, anm_move_recept_start_solo )
  _OBJ_ANIME_WAIT()
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_move_player_start_solo )
  _OBJ_ANIME_WAIT()
}
_RET

/*************************************************************/
/*            受付演出(通信)          */
/*************************************************************/
recept_move_obj_comm:
{
  _OBJ_ANIME( MUSICAL_RECEPT_COMM, anm_move_recept_start_comm )
  _OBJ_ANIME_WAIT()
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_move_player_start_comm )
  _OBJ_ANIME_WAIT()
}
_RET

/*************************************************************/
/*            受付演出(試着室)          */
/*************************************************************/
recept_move_obj_fitting:
{
  _OBJ_ANIME( MUSICAL_RECEPT_FITTING, anm_move_recept_start_solo )
  _OBJ_ANIME_WAIT()
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_move_player_start_fitting )
  _OBJ_ANIME_WAIT()
}
_RET

/*************************************************************/
/*            受付演出(試着室帰り)          */
/*************************************************************/
recept_move_obj_return_fitting:
{
  _OBJ_POS_CHANGE( MUSICAL_RECEPT_FITTING, 18, 0, 11, DIR_DOWN )
  _OBJ_POS_CHANGE( MMDL_ID_PLAYER, 18, 0, 12, DIR_UP )
}
_RET

//受付退く一人用(試着室も
_ANIME_LABEL anm_move_recept_start_solo
  _ANIME_DATA AC_DIR_U,1
  _ANIME_DATA AC_WALK_U_8F,1
  _ANIME_DATA AC_DIR_R,1
  _ANIME_DATA AC_WALK_R_8F,1
  _ANIME_DATA AC_DIR_L,1
  _ANIME_DATA ACMD_END,0

//受付退く通信用
_ANIME_LABEL anm_move_recept_start_comm
  _ANIME_DATA AC_DIR_U,1
  _ANIME_DATA AC_WALK_U_8F,1
  _ANIME_DATA AC_DIR_L,1
  _ANIME_DATA AC_WALK_L_8F,1
  _ANIME_DATA AC_DIR_R,1
  _ANIME_DATA ACMD_END,0

//主人公入る一人用
_ANIME_LABEL anm_move_player_start_solo
  _ANIME_DATA AC_DIR_U,1
  _ANIME_DATA AC_WALK_U_8F,2
  _ANIME_DATA AC_DIR_L,1
  _ANIME_DATA AC_WALK_L_8F,2
  _ANIME_DATA AC_DIR_U,1
  _ANIME_DATA AC_WALK_U_8F,2
  _ANIME_DATA ACMD_END,0

//主人公入る通信用
_ANIME_LABEL anm_move_player_start_comm
  _ANIME_DATA AC_DIR_U,1
  _ANIME_DATA AC_WALK_U_8F,2
  _ANIME_DATA AC_DIR_R,1
  _ANIME_DATA AC_WALK_R_8F,2
  _ANIME_DATA AC_DIR_U,1
  _ANIME_DATA AC_WALK_U_8F,2
  _ANIME_DATA ACMD_END,0

//主人公入る試着室
_ANIME_LABEL anm_move_player_start_fitting
  _ANIME_DATA AC_DIR_U,1
  _ANIME_DATA AC_WALK_U_8F,4
  _ANIME_DATA ACMD_END,0
  

/*************************************************************/
/*            脚本家                 */
/*************************************************************/
EVENT_START ev_musical_change_program

  _TALK_OBJ_START()

  _BALLOONWIN_TALKOBJ_MSG( msg_musical_test_04 )
  //メニュー作成
  _BMPMENU_INIT_RIGHT(  MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
  //リスト追加
  _BMPMENU_MAKE_LIST( msg_musical_program_01, 0 )
  _BMPMENU_MAKE_LIST( msg_musical_program_02, 1 )
  _BMPMENU_MAKE_LIST( msg_musical_program_03, 2 )
  _BMPMENU_MAKE_LIST( msg_musical_program_04, 3 )
  _BMPMENU_MAKE_LIST( msg_musical_program_05, 4 )
  _BMPMENU_MAKE_LIST( msg_musical_program_06, 5 ) //やめる
  //メニュー表示
  _BMPMENU_START()
  _BALLOONWIN_CLOSE()

  IF $SCWK_ANSWER == 5 || $SCWK_ANSWER == EV_WIN_B_CANCEL THEN
    //NoFunction!
  ELSE
    _SET_MUSICAL_VALUE_SELECT_PROGRAM( SCWK_ANSWER )
  ENDIF

EVENT_END

/*************************************************************/
/*            ファンの処理             */
/*************************************************************/
fan_main_routine:
{
  DEFINE_LOCAL fan_type // ファンの見た目
  DEFINE_LOCAL msg_id   // メッセージID
  DEFINE_LOCAL gift_type  // 贈り物種類
  DEFINE_LOCAL gift_number// 贈り物番号(アイテム・グッズ

  _TALK_OBJ_START()
  
  _GET_MUSICAL_FAN_VALUE_TYPE( fan_number , fan_type )
  IF $fan_type == MUSICAL_FAL_TYPE_NONE THEN
    _BALLOONWIN_TALKOBJ_MSG( msg_musical_fan_none )
    _AB_KEYWAIT ()
    _BALLOONWIN_CLOSE()
  ELSE
    
    //応援メッセージ
    _GET_MUSICAL_FAN_VALUE_GIFT_TYPE( fan_number , gift_type )
    _GET_MUSICAL_FAN_VALUE_GIFT_NUMBER( fan_number , gift_number )
    
    SWITCH $gift_type
    CASE MUSICAL_GIFT_TYPE_NONE THEN
      //渡すものは無い！
      //もしくはもう渡した！
      _GET_MUSICAL_FAN_VALUE_CHEER_MSG( fan_number , msg_id )
      _PLAYER_NAME( 0 )
      _BALLOONWIN_TALKOBJ_MSG( msg_id )
      _LAST_KEYWAIT()
      _BALLOONWIN_CLOSE()

    CASE MUSICAL_GIFT_TYPE_GOODS THEN
      //グッズをもらう
      _GET_MUSICAL_FAN_VALUE_GIFT_MSG( fan_number , msg_id )
      //グッズ名のセット
      _PLAYER_NAME( 0 )
      _MUSICAL_WORD_GOODS_NAME( 1 , gift_number )
      //贈るメッセージ
      _BALLOONWIN_TALKOBJ_MSG( msg_id )
      _BALLOONWIN_CLOSE()
      
      $SCWK_TEMP0 = $gift_number
      $SCWK_TEMP1 = FALSE
      _CHG_COMMON_SCR SCRID_MUSICAL_ADD_GOODS
      
      //渡たすフラグ落とし
      _RESET_MUSICAL_FAN_GIFT_FLG( fan_number )
    CASE MUSICAL_GIFT_TYPE_ITEM THEN
      //アイテム汎用処理をお願いします
      //gift_number にアイテム番号入ってます。
      
      // TODO 現状処理が無いため動作保証無し
      
      //渡たすフラグ落とし
      _RESET_MUSICAL_FAN_GIFT_FLG( fan_number )
    ENDSWITCH
    
  ENDIF
}
_RET

EVENT_START ev_musical_fan_01
  $fan_number = 0
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_02
  $fan_number = 1
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_03
  $fan_number = 2
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_04
  $fan_number = 3
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_05
  $fan_number = 4
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_06
  $fan_number = 5
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_07
  $fan_number = 6
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_08
  $fan_number = 7
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_09
  $fan_number = 8
  _CALL fan_main_routine
EVENT_END

EVENT_START ev_musical_fan_10
  $fan_number = 9
  _CALL fan_main_routine
EVENT_END


/*************************************************************/
/*            共通コマンド             */
/*************************************************************/

//グッズの追加
//$SCWK_TEMP0にグッズ番号
EVENT_START ev_musical_add_goods

  _PLAYER_NAME( 0 )
  _MUSICAL_WORD_GOODS_NAME( 1 , SCWK_TEMP0 )
  
  //ME再生
  _ME_PLAY(	SEQ_ME_ACCE )
  //メッセージ
  _SYSWIN_MSG( msg_musical_fan_get_goods , POS_DOWN )
  _ME_WAIT()
  _AB_KEYWAIT_MARK()

  IF $SCWK_TEMP1 == TRUE THEN
    _SYSWIN_MSG( msg_musical_fan_get_goods_03 , POS_DOWN )
  ELSE
    _SYSWIN_MSG( msg_musical_fan_get_goods_02 , POS_DOWN )
    _LAST_KEYWAIT()
  ENDIF

  _SYSWIN_CLOSE()
  //追加処理
  _ADD_MUSICAL_GOODS( SCWK_TEMP0 )

  _CHG_LOCAL_SCR  // ローカルスクリプトに切り替え

EVENT_END

