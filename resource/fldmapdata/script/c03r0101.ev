//======================================================================
//                c03r0101.ev
//
//    スクリプトファイル：c03r0101用
//
//======================================================================

  .text 
  .include  "scr_seq_def.h"
  .include  "../../message/dst/script/msg_c03r0101.h"
  .include  "c03r0101.h"

//======================================================================
// ■スクリプトテーブル
//======================================================================
_EVENT_DATA	ev_leader          // 調査隊隊長
_EVENT_DATA ev_force_question  // 強制アンケートイベント
_EVENT_DATA	ev_member_question // アンケート隊員
_EVENT_DATA	ev_member_hello    // 挨拶隊員
_EVENT_DATA	ev_member_thanks   // お礼隊員
_EVENT_DATA	ev_member_a        // 一般隊員A
_EVENT_DATA	ev_member_b        // 一般隊員B
_EVENT_DATA	ev_member_c        // 一般隊員C
_EVENT_DATA	ev_member_d        // 一般隊員D
_EVENT_DATA	ev_member_e        // 一般隊員E
_EVENT_DATA	ev_member_f        // 一般隊員F
_EVENT_DATA	ev_member_g        // 一般隊員G
_EVENT_DATA	ev_paper           // 書類
_EVENT_DATA ev_zone_c03r0101   // ゾーンチェンジ
_EVENT_DATA_END


//======================================================================
// ■グローバル変数
//======================================================================
DEFINE_LOCAL research_state // 調査状況

//======================================================================
// ■ローカル変数
//======================================================================
//----------------------------------------------------------------------
// layer 8
//----------------------------------------------------------------------
DEFINE_LOCAL v8_1
//----------------------------------------------------------------------
// layer 7
//----------------------------------------------------------------------
DEFINE_LOCAL v7_1
DEFINE_LOCAL v7_2
//----------------------------------------------------------------------
// layer 6
//----------------------------------------------------------------------
DEFINE_LOCAL v6_1
DEFINE_LOCAL v6_2
DEFINE_LOCAL v6_3
DEFINE_LOCAL v6_4
//----------------------------------------------------------------------
// layer 5
//----------------------------------------------------------------------
DEFINE_LOCAL v5_1
DEFINE_LOCAL v5_2
//----------------------------------------------------------------------
// layer 4
//----------------------------------------------------------------------
DEFINE_LOCAL v4_1
DEFINE_LOCAL v4_2
DEFINE_LOCAL v4_3
DEFINE_LOCAL v4_4
DEFINE_LOCAL v4_5
DEFINE_LOCAL v4_6
DEFINE_LOCAL v4_7
DEFINE_LOCAL v4_8
//----------------------------------------------------------------------
// layer 3
//----------------------------------------------------------------------
DEFINE_LOCAL v3_1
DEFINE_LOCAL v3_2
DEFINE_LOCAL v3_3
DEFINE_LOCAL v3_4
DEFINE_LOCAL v3_5
DEFINE_LOCAL v3_6
DEFINE_LOCAL v3_7
DEFINE_LOCAL v3_8
DEFINE_LOCAL v3_9
DEFINE_LOCAL v3_a
DEFINE_LOCAL v3_b
DEFINE_LOCAL v3_c
DEFINE_LOCAL v3_d
DEFINE_LOCAL v3_e
//----------------------------------------------------------------------
// layer 2
//----------------------------------------------------------------------
DEFINE_LOCAL v2_1
DEFINE_LOCAL v2_2
DEFINE_LOCAL v2_3
DEFINE_LOCAL v2_4
DEFINE_LOCAL v2_5
DEFINE_LOCAL v2_6
DEFINE_LOCAL v2_7
DEFINE_LOCAL v2_8
DEFINE_LOCAL v2_9
DEFINE_LOCAL v2_a
DEFINE_LOCAL v2_b
DEFINE_LOCAL v2_c
DEFINE_LOCAL v2_d
//----------------------------------------------------------------------
// layer 1
//----------------------------------------------------------------------
DEFINE_LOCAL v1_1
DEFINE_LOCAL v1_2
DEFINE_LOCAL v1_3
DEFINE_LOCAL v1_4
DEFINE_LOCAL v1_5
DEFINE_LOCAL v1_6
DEFINE_LOCAL v1_7


//======================================================================
// ■共通サブルーチンリスト
//======================================================================
//----------------------------------------------------------------------
// layer 0
//----------------------------------------------------------------------
// DEUBG_PRINT                  ◆デバッグ出力
// YES_NO_WIN_EX                ◆初期カーソル位置を指定して, YES NO ウィンドウを表示する
// SET_FORCE_QUESTION_EVENT_ON  ◆強制アンケートイベントを有効にする
// SET_FORCE_QUESTION_EVENT_OFF ◆強制アンケートイベントを無効にする

//----------------------------------------------------------------------
// ◆初期カーソル位置を指定して, YES NO ウィンドウを表示する
// ◇in  SCWK_TEMP0  カーソル初期位置 ( SCR_YES or SCR_NO )
// ◇out SCWK_ANSWER 選択結果 ( SCR_YES or SCR_NO )
//----------------------------------------------------------------------
YES_NO_WIN_EX:
{
  _BMPMENU_INIT_RIGHT( 31, 10, SCWK_TEMP0, 1, SCWK_ANSWER )
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_yes, SCR_YES ) //『はい』
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_no,  SCR_NO  ) //『いいえ』
  _BMPMENU_START()

  // Bキャンセルは『いいえ』として扱う
  IF $SCWK_ANSWER == EV_WIN_B_CANCEL THEN
    $SCWK_ANSWER = SCR_NO
  ENDIF
}
_RET 
//----------------------------------------------------------------------
// ◆強制アンケートイベントを有効にする
//----------------------------------------------------------------------
SET_FORCE_QUESTION_EVENT_ON:
{
  // シーンワークに値をセット
  _LDVAL( WK_SCENE_C03R0101_QUESTION, 1 )
}
_RET
//----------------------------------------------------------------------
// ◆強制アンケートイベントを無効にする
//----------------------------------------------------------------------
SET_FORCE_QUESTION_EVENT_OFF:
{
  // シーンワークの値をリセット
  _LDVAL( WK_SCENE_C03R0101_QUESTION, 0 )
}
_RET


//======================================================================
// ■隊長サブルーチンリスト
//======================================================================
//----------------------------------------------------------------------
// layer 8
//----------------------------------------------------------------------
// ■シーケンス
// LEADER_MAIN ◆隊長メイン
//----------------------------------------------------------------------
// layer 7
//----------------------------------------------------------------------
// ■シーケンス
// RECEIVE_REQUEST ◆『依頼を受ける』
// REPORT_REQUEST  ◆『依頼の報告』
//----------------------------------------------------------------------
// layer 6
//----------------------------------------------------------------------
// ■シーケンス
// RES_REQ_SELECT ◆依頼選択シーケンス
//----------------------------------------------------------------------
// layer 5
//----------------------------------------------------------------------
// ■シーケンス
// RES_REQ_REPORT ◆調査結果を報告シーケンス
// RES_REQ_CANCEL ◆依頼キャンセルシーケンス
//----------------------------------------------------------------------
// layer 4
//----------------------------------------------------------------------
// ■隊長の台詞
// LEADER_SAY_This_request_is   ◆隊長「〜依頼内容の説明〜」
// LEADER_SAY_Your_request_is   ◆隊長「〜依頼内容の確認〜」
// LEADER_SAY_Ah_hah            ◆隊長「ふむふむ……」
// LEADER_SAY_You_dont_archieve ◆隊長「まだ調査が終わっていないぞ？」
//----------------------------------------------------------------------
// layer 3
//----------------------------------------------------------------------
// ■機能
// START_RES_REQ          ◆依頼の調査を開始する
// FINISH_CURRENT_RES_REQ ◆受けている依頼を完了する
// ■隊長の台詞
// LEADER_SAY_Next_rank   ◆隊長「あと〜回で〜隊員だ」
//----------------------------------------------------------------------
// layer 2
//----------------------------------------------------------------------
// ■シーケンス
// SELECT_REQUEST_TYPE ◆調査方法の選択
// SELECT_REQUEST      ◆調査依頼の選択
// ACHIEVE_PRIZE_GET   ◆依頼達成アイテム入手処理
// COMPLETE_PRIZE_GET  ◆全依頼達成アイテム入手処理
// ■取得
// GET_ACHIEVE_NUM_TO_RANKUP ◆次のランクアップまでの残り依頼達成回数を取得する
// ■システムメッセージ
// SYSTEM_MSG_Rank_up ◆システム「〜隊員に任命された」
// ■隊長の台詞
// LEADER_SAY_I_appoint_you_as ◆隊長「今日から君は〜隊員だ！」
//----------------------------------------------------------------------
// layer 1
//----------------------------------------------------------------------
// ■メニュー
// RES_TYPE_MENU ◆調査タイプメニューを表示する
// RES_REQ_MENU  ◆調査依頼メニューを表示する
// ■フラグ操作
// SET_RES_REQ_ACHIEVE_FLAG ◆指定した依頼の達成フラグをセットする
// ■取得
// GET_FINISH_RES_REQ_NUM     ◆達成した依頼の数を取得する
// GET_RES_REQ_QUESTION_NUM   ◆調査中の依頼の質問数を取得する
// GET_RES_REQ_ABS_NORM_COUNT ◆指定した調査依頼のノルマ人数を取得する
// GET_RES_REQ_ABS_NORM_TIME  ◆指定した調査依頼のノルマ時間[h]を取得する
// GET_RES_REQ_QUESTION_ID    ◆指定した依頼に該当する質問IDを取得する
// GET_RES_REQ_TYPE           ◆指定した依頼の調査タイプ ( 人数 or 時間 ) を取得する
// GET_PRIZE_ITEM             ◆調査中の依頼の報酬を取得する
// ■チェック
// CHECK_RES_REQ_COMPLETE ◆全ての調査依頼が達成されているかどうかをチェックする
// CHECK_RES_REQ_EXIST    ◆依頼を受けているかどうかをチェックする
// ■システムメッセージ
// SYSTEM_MSG_REPORT_RESULT   ◆システム「調査を隊長に報告した！」
// SYSTEM_MSG_RECEIVE_REQUEST ◆システム「調査依頼を受けた！」
// ■隊長の台詞
// LEADER_SAY_Nice_to_meet_you                ◆隊長「〜初回会話〜」
// LEADER_SAY_You_are_welcome                 ◆隊長「よくきたな元気に調査しているか？」
// LEADER_SAY_You_have_already_completed      ◆隊長「キミはすべての依頼を終えている」
// LEADER_SAY_May_I_help_you                  ◆隊長「今日はどうする？」⇒ メニューを表示
// LEADER_SAY_Do_you_cancel_request           ◆隊長「受けている依頼をキャンセルするか？」
// LEADER_SAY_You_dont_have_request           ◆隊長「調査依頼は受けていないようだ」
// LEADER_SAY_ByeBye                          ◆隊長「そうか……たまには顔を見せに来てくれ」
// LEADER_SAY_Is_this_request_ok              ◆隊長「この調査依頼を受けるのか？」
// LEADER_SAY_Do_you_select_other_request     ◆隊長「他の依頼を受けるのか？」
// LEADER_SAY_Come_again_if_you_want          ◆隊長「いらいを　うけたくなったら　またきてくれ」
// LEADER_SAY_Come_again_if_you_want_2        ◆隊長「依頼を受けたくなったら, また来てくれ！」
// LEADER_SAY_Come_again_if_you_achieve       ◆隊長「調査が終了したら, 報告に来てくれ」
// LEADER_SAY_Continue_research               ◆隊長「では引き続き, 調査を続けてくれ」
// LEADER_SAY_Report_research_result          ◆隊長「調査内容を報告してくれ」
// LEADER_SAY_Present_for_you                 ◆隊長「これは調査の報酬だ 受け取ってくれ」
// LEADER_SAY_Congraturation                  ◆隊長「これは私の気持ちだ 受け取ってくれ」
// LEADER_SAY_I_hope_for_you                  ◆隊長「今後も期待しているぞ！」
// LEADER_SAY_Lets_next_research              ◆隊長「次の調査も期待しているぞ！」
// LEADER_SAY_It_is_count_research            ◆隊長「人数調査だな？」
// LEADER_SAY_It_is_time_research             ◆隊長「時間調査だな？」
// LEADER_SAY_You_have_finishd_count_research ◆隊長「すでに調査が完了しているじゃないか！」
// LEADER_SAY_You_have_finishd_time_research  ◆隊長「すでに調査が完了しているじゃないか！」



//======================================================================
// ■調査隊隊長
//======================================================================
EVENT_START ev_leader
{ 
  // 会話スタート
  _TALK_OBJ_START()

  // 初回会話チェック
  _FLAG_CHECK( FE_RES_LEADER_FIRSTTALK, SCWK_ANSWER ) // はじめての会話か？

  // 初回会話
  IF $SCWK_ANSWER == FALSE THEN 
    _CALL LEADER_SAY_Nice_to_meet_you    // 隊長「君を調査隊員に任命する！」
    _FLAG_SET( FE_RES_LEADER_FIRSTTALK ) // 初回会話フラグを立てる
    _RESEARCH_TEAM_RANK_UP()             // 隊員ランクを C にする
    _CALL SET_FORCE_QUESTION_EVENT_ON    // 強制アンケートイベントを有効にする
  // 通常会話
  ELSE
    _CALL LEADER_SAY_You_are_welcome // 隊長「よくきたな」
    _CALL CHECK_RES_REQ_COMPLETE     // すてべの調査依頼が達成されているかチェック
    // すべての調査依頼を達成済み
    IF $SCWK_ANSWER == TRUE THEN 
      _CALL LEADER_SAY_You_have_already_completed // 隊長「キミは　すべてのいらいを　おえている」
      EVENT_END                                   // イベント終了
    ENDIF
  ENDIF

  // 隊長メインシーケンスへ
  _CALL LEADER_MAIN
}
EVENT_END 

//----------------------------------------------------------------------
// ◆隊長メイン
//----------------------------------------------------------------------
LEADER_MAIN:
{
  // v8_1 ループフラグ

  $v8_1 = TRUE
  WHILE $v8_1 == TRUE

    // 隊長「今日はどうする？」
    // メインメニューを表示
    _CALL LEADER_SAY_May_I_help_you
    
    // 選択結果で分岐
    SWITCH $SCWK_ANSWER
    CASE msg_c03r0101__choice_01a THEN //『依頼を受ける』
      _CALL RECEIVE_REQUEST
      _RET
  
    CASE msg_c03r0101__choice_01b THEN //『依頼の報告』
      _CALL REPORT_REQUEST
      _RET

    CASE msg_c03r0101__choice_01d THEN //『依頼の確認』
      _CALL LEADER_SAY_Your_request_is           // 隊長「〜依頼内容の確認〜」
      _CALL LEADER_SAY_Come_again_if_you_achieve // 隊長「調査が終了したら, 報告に来てくれ」
  
    CASE msg_c03r0101__choice_01c THEN //『なんでもないです』
      _CALL LEADER_SAY_ByeBye // 隊長「そうか……」
      _RET
  
    CASE EV_WIN_B_CANCEL THEN //『B ボタン』
      _CALL LEADER_SAY_ByeBye // 隊長「そうか……」
      _RET
    DEFAULT
      _RET
    ENDSWITCH

  ENDWHILE
}
_RET

//----------------------------------------------------------------------
// ◆『依頼を受ける』
//----------------------------------------------------------------------
RECEIVE_REQUEST:
{
  _CALL CHECK_RES_REQ_EXIST // 依頼を受けているかどうかをチェック

  // 依頼を受けている
  IF $SCWK_ANSWER == TRUE THEN
    _CALL LEADER_SAY_Do_you_cancel_request // 隊長「キャンセルするか？」⇒『はい』or『いいえ』
    //『いいえ』
    IF $SCWK_ANSWER == SCR_NO THEN 
      _CALL LEADER_SAY_Continue_research // 隊長「では引き続き, 調査を続けてくれ」
      _RET
    ENDIF

    _CALL RES_REQ_CANCEL // キャンセル処理

  // 依頼を受けていない
  ELSE
    _CALL RES_REQ_SELECT // 依頼選択処理
  ENDIF
}
_RET

//----------------------------------------------------------------------
// ◆『依頼の報告』
//----------------------------------------------------------------------
REPORT_REQUEST:
{
  // v7_1 依頼ID
  // v7_2 調査状況

  _CALL CHECK_RES_REQ_EXIST // 依頼を受けているかどうかをチェック

  // 依頼を受けていない
  IF $SCWK_ANSWER == FALSE THEN
    _CALL LEADER_SAY_You_dont_have_request // 隊長「ちょうさいらいは　うけていないようだ」

  // 依頼を受けている
  ELSE
    // 調査中の依頼を達成しているかどうかをチェック
    _GET_RESEARCH_REQUEST_ID( v7_1 )
    _CHECK_ACHIEVE_REQUEST( v7_1, v7_2 )

    // 依頼を達成している
    IF $v7_2 == RESEARCH_REQ_STATE_ACHIEVE THEN
      _CALL LEADER_SAY_Report_research_result // 隊長「調査内容を報告してくれ」
      _CALL RES_REQ_REPORT                    // 報告処理
      _RET
    // 依頼を達成していない
    ELSE
      $SCWK_TEMP0 = $v7_2                // 隊長「まだ調査が終わっていないぞ？」⇒『はい』or『いいえ』
      _CALL LEADER_SAY_You_dont_archieve //

      //『いいえ』
      IF $SCWK_ANSWER == SCR_NO THEN 
        _CALL LEADER_SAY_Continue_research // 隊長「では引き続き, 調査を続けてくれ」
        _RET
      ENDIF

      _CALL RES_REQ_CANCEL // キャンセル処理
    ENDIF
  ENDIF
}
_RET

//----------------------------------------------------------------------
// ◆依頼選択処理
//----------------------------------------------------------------------
RES_REQ_SELECT:
{
  // v6_1 依頼ID
  // v6_2 調査タイプ
  // v6_3 ループフラグ
  // v6_4 調査状況

  _CALL SELECT_REQUEST_TYPE // 調査タイプを選択
  $v6_2 = $SCWK_ANSWER      // 選択した調査タイプを取得

  // 調査タイプの説明
  SWITCH $v6_2
  CASE RESEARCH_REQ_TYPE_COUNT THEN _CALL LEADER_SAY_It_is_count_research   // 隊長「人数調査だな？」
  CASE RESEARCH_REQ_TYPE_TIME  THEN _CALL LEADER_SAY_It_is_time_research    // 隊長「時間調査だな？」
  ENDSWITCH
  
  //『人数調査』or『時間調査』を選択
  IF ($v6_2 == RESEARCH_REQ_TYPE_COUNT) || ($v6_2 == RESEARCH_REQ_TYPE_TIME) THEN

    // 選択するかキャンセルするまで繰り返す
    $v6_3 = TRUE
    WHILE $v6_3 == TRUE

      _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_35, SCWK_TARGET_OBJID, POS_DOWN ) // 隊長「調査依頼を選んでくれ」

      // 調査依頼の選択
      $SCWK_TEMP0 = $v6_2
      _CALL SELECT_REQUEST // 調査依頼を選択
      $v6_1 = $SCWK_ANSWER // 選択した依頼IDを取得

      //『やめる』以外を選択
      IF ($v6_1 != RESEARCH_REQ_ID_NONE) && ($v6_1 != EV_WIN_B_CANCEL) THEN 

        $SCWK_TEMP0 = $v6_1               // 隊長「〜依頼内容の説明〜」 
        _CALL LEADER_SAY_This_request_is  //

        // すでに達成済みかどうかをチェック
        _CHECK_ACHIEVE_REQUEST( v6_1, v6_4 )

        // すでに達成済み
        IF $v6_4 == RESEARCH_REQ_STATE_ACHIEVE THEN

          //『人数調査』
          IF $v6_2 == RESEARCH_REQ_TYPE_COUNT THEN
            _CALL LEADER_SAY_You_have_finishd_count_research // 隊長「すでに調査が完了しているじゃないか！」
          //『時間調査』
          ELSE
            _CALL LEADER_SAY_You_have_finishd_time_research // 隊長「すでに調査が完了しているじゃないか！」
          ENDIF 

          $SCWK_TEMP0 = $v6_1   // 調査開始
          _CALL START_RES_REQ   //
          _CALL RES_REQ_REPORT  // 報告処理
          _RET

        // まだ達成していない
        ELSE

          _CALL LEADER_SAY_Is_this_request_ok // 隊長「この調査依頼を受けるのか？」==>『はい』or『いいえ』
      
          //『はい』
          IF $SCWK_ANSWER == SCR_YES THEN 
            _BALLOONWIN_CLOSE() 
            $SCWK_TEMP0 = $v6_1                         // 調査開始
            _CALL START_RES_REQ                         //
            _CALL SYSTEM_MSG_RECEIVE_REQUEST            // システム「調査依頼を受けた！」
            _CALL LEADER_SAY_Come_again_if_you_achieve  // 隊長「調査が終了したら, 報告に来てくれ」
            _RET                                        // 依頼選択処理終了
          ENDIF 
        ENDIF

      //『やめる』を選択
      ELSE
        $v6_3 = FALSE // ループを抜ける
      ENDIF

    ENDWHILE

  ENDIF
  
  _CALL LEADER_SAY_Come_again_if_you_want // 隊長「依頼を受けたくなったら また来てくれ」

}
_RET

//----------------------------------------------------------------------
// ◆調査結果を報告する
//----------------------------------------------------------------------
RES_REQ_REPORT:
{
  // v5_1 報告前の隊員ランク
  // v5_2 報告後の隊員ランク

  _GET_RESEARCH_TEAM_RANK( v5_1 ) // 報告前の隊員ランクを取得

  _CALL SYSTEM_MSG_REPORT_RESULT    // システム「調査を隊長に報告した！」
  _CALL LEADER_SAY_Ah_hah           // 隊長「ふむふむ……」
  _CALL LEADER_SAY_Present_for_you  // 隊長「これは調査の報酬だ 受け取ってくれ」

  _CALL ACHIEVE_PRIZE_GET      // 依頼達成アイテムの入手処理
  _CALL FINISH_CURRENT_RES_REQ // 依頼を完了
  _CALL CHECK_RES_REQ_COMPLETE // すべての依頼を達成したかどうかをチェック

  // すべての依頼を達成
  IF $SCWK_ANSWER == TRUE THEN
    _CALL LEADER_SAY_Congraturation  // 隊長「これは私の気持ちだ 受け取ってくれ」
    _CALL COMPLETE_PRIZE_GET         // 全依頼達成アイテムの入手処理
    _CALL LEADER_SAY_I_hope_for_you  // 隊長「今後も期待しているぞ！」

  // 未達成の依頼が残っている
  ELSE
    _GET_RESEARCH_TEAM_RANK( v5_2 ) // 報告後の隊員ランクを取得
    // 隊員ランクが上がっている
    IF $v5_1 != $v5_2 THEN
      _CALL LEADER_SAY_I_appoint_you_as // 隊長「今日から君は〜隊員だ！」
      _CALL SYSTEM_MSG_Rank_up          // システム「〜隊員に任命された」
    // 隊員ランクは上がっていない
    ELSE
      // ランクSSでない
      IF $v5_2 != RESEARCH_TEAM_RANK_5 THEN
        _CALL LEADER_SAY_Next_rank // 隊長「あと〜回で〜隊員だ」
      ENDIF
    ENDIF

    // 隊長「次の調査も期待しているぞ！」
    _CALL LEADER_SAY_Lets_next_research
  ENDIF
}
_RET

//----------------------------------------------------------------------
// ◆受けている依頼をキャンセルする
//----------------------------------------------------------------------
RES_REQ_CANCEL:
{
  //「キャンセルして　いいのか？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_10, SCWK_TARGET_OBJID, POS_DOWN ) 

  //『はい』『いいえ』選択
  $SCWK_TEMP0 = SCR_NO
  _CALL YES_NO_WIN_EX

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE()        

  //『はい』を選択
  IF $SCWK_ANSWER == SCR_YES THEN 
    _CALL LEADER_SAY_Come_again_if_you_want_2 // 隊長「依頼を受けたくなったら, また来てくれ！」
    _FINISH_RESEARCH()                        // 調査終了
    _RET
  ENDIF

  _CALL LEADER_SAY_Continue_research // 隊長「では引き続き, 調査を続けてくれ」
}
_RET

//----------------------------------------------------------------------
// ◆依頼達成アイテム入手処理
//----------------------------------------------------------------------
ACHIEVE_PRIZE_GET:
{
  // v2_1 入手アイテム ( ITEM_xxxx ) 

  _CALL GET_PRIZE_ITEM // 入手アイテムを取得
  $v2_1 = $SCWK_ANSWER // 

  _ITEM_EVENT_KEYWAIT( v2_1, 1 )
}
_RET

//----------------------------------------------------------------------
// ◆全依頼達成アイテム入手処理
//----------------------------------------------------------------------
COMPLETE_PRIZE_GET:
{
  _ITEM_EVENT_KEYWAIT( ITEM_HUSIGINAAME, 1 )
}
_RET

//----------------------------------------------------------------------
// ◆依頼の調査を開始する
// ◇in SCWK_TEMP0 開始する調査依頼ID ( RESEARCH_REQ_ID_xxxx )
//----------------------------------------------------------------------
START_RES_REQ:
{
  _CALL GET_RES_REQ_QUESTION_ID                               // 依頼IDから質問IDを取得
  _START_RESEARCH( v6_1, SCWK_TEMP1, SCWK_TEMP2, SCWK_TEMP3 ) // 調査開始
}
_RET

//----------------------------------------------------------------------
// ◆受けている依頼を完了する
//----------------------------------------------------------------------
FINISH_CURRENT_RES_REQ:
{
  // v3_1 ランクアップまでの残り達成回数

  // 依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v2_1 )

  // 依頼達成フラグをセット
  $SCWK_TEMP0 = $v2_1
  _CALL SET_RES_REQ_ACHIEVE_FLAG

  // セーブデータをクリア
  _FINISH_RESEARCH()

  // 次のランクアップまでの残り依頼達成回数を取得する
  _CALL GET_ACHIEVE_NUM_TO_RANKUP
  $v3_1 = $SCWK_ANSWER

  // ランクアップ
  IF $v3_1 == 0 THEN
    _RESEARCH_TEAM_RANK_UP()
  ENDIF
}
_RET

//----------------------------------------------------------------------
// ◆指定した依頼の達成フラグをセットする
// ◇in SCWK_TEMP0 達成フラグをセットする依頼ID ( RESEARCH_REQ_ID_xxxx )
//----------------------------------------------------------------------
SET_RES_REQ_ACHIEVE_FLAG:
{
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_REQ_ID_WB_count            THEN _FLAG_SET( FE_RES_REQ_WB_COUNT        ) //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN _FLAG_SET( FE_RES_REQ_WB_TIME         ) //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN _FLAG_SET( FE_RES_REQ_FIRST_POKE_COUNT) //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN _FLAG_SET( FE_RES_REQ_FIRST_POKE_TIME ) //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN _FLAG_SET( FE_RES_REQ_PLAY_TIME_COUNT ) //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN _FLAG_SET( FE_RES_REQ_PLAY_TIME_TIME  ) //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN _FLAG_SET( FE_RES_REQ_SEX_COUNT       ) //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN _FLAG_SET( FE_RES_REQ_SEX_TIME        ) //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN _FLAG_SET( FE_RES_REQ_JOB_COUNT       ) //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN _FLAG_SET( FE_RES_REQ_JOB_TIME        ) //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN _FLAG_SET( FE_RES_REQ_HOBBY_COUNT     ) //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN _FLAG_SET( FE_RES_REQ_HOBBY_TIME      ) //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN _FLAG_SET( FE_RES_REQ_BTL_OR_TRD_COUNT) //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN _FLAG_SET( FE_RES_REQ_BTL_OR_TRD_TIME ) //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN _FLAG_SET( FE_RES_REQ_FAV_POKE_COUNT  ) //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN _FLAG_SET( FE_RES_REQ_FAV_POKE_TIME   ) //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN _FLAG_SET( FE_RES_REQ_POKE_TYPE_COUNT ) //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN _FLAG_SET( FE_RES_REQ_POKE_TYPE_TIME  ) //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN _FLAG_SET( FE_RES_REQ_PLACE_COUNT     ) //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN _FLAG_SET( FE_RES_REQ_PLACE_TIME      ) //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN _FLAG_SET( FE_RES_REQ_PRECIOUS_COUNT  ) //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN _FLAG_SET( FE_RES_REQ_PRECIOUS_TIME   ) //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN _FLAG_SET( FE_RES_REQ_PARTNER_COUNT   ) //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN _FLAG_SET( FE_RES_REQ_PARTNER_TIME    ) //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN _FLAG_SET( FE_RES_REQ_SEASON_COUNT    ) //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN _FLAG_SET( FE_RES_REQ_SEASON_TIME     ) //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN _FLAG_SET( FE_RES_REQ_ART_COUNT       ) //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN _FLAG_SET( FE_RES_REQ_ART_TIME        ) //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN _FLAG_SET( FE_RES_REQ_MUSIC_COUNT     ) //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN _FLAG_SET( FE_RES_REQ_MUSIC_TIME      ) //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN _FLAG_SET( FE_RES_REQ_MOVIE_COUNT     ) //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN _FLAG_SET( FE_RES_REQ_MOVIE_TIME      ) //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN _FLAG_SET( FE_RES_REQ_SCHOOL_COUNT    ) //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN _FLAG_SET( FE_RES_REQ_SCHOOL_TIME     ) //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN _FLAG_SET( FE_RES_REQ_STUDY_COUNT     ) //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN _FLAG_SET( FE_RES_REQ_STUDY_TIME      ) //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN _FLAG_SET( FE_RES_REQ_STORTS_COUNT    ) //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN _FLAG_SET( FE_RES_REQ_STORTS_TIME     ) //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN _FLAG_SET( FE_RES_REQ_DAY_OFF_COUNT   )//「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN _FLAG_SET( FE_RES_REQ_DAY_OFF_TIME    )//「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN _FLAG_SET( FE_RES_REQ_DREAM_COUNT     )//「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN _FLAG_SET( FE_RES_REQ_DREAM_TIME      )//「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN _FLAG_SET( FE_RES_REQ_LEADER_COUNT    )//「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN _FLAG_SET( FE_RES_REQ_LEADER_TIME     )//「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN _FLAG_SET( FE_RES_REQ_FUN_COUNT       )//「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN _FLAG_SET( FE_RES_REQ_FUN_TIME        )//「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT _RET
  ENDSWITCH
}
_RET

//----------------------------------------------------------------------
// ◆達成した依頼の数を取得する
// ◇out SCWK_ANSWER 達成した依頼の数
//----------------------------------------------------------------------
GET_FINISH_RES_REQ_NUM:
{
  // v1_1 先頭の依頼達成フラグ
  // v1_2 末尾の依頼達成フラグ
  // v1_3 チェック対象のフラグ
  // v1_4 達成済みの依頼数

  $v1_1 = FE_RES_REQ_WB_COUNT
  $v1_2 = FE_RES_REQ_FUN_TIME
  $v1_3 = $v1_1
  $v1_4 = 0

  // 全フラグを見る
  WHILE $v1_3 <= $v1_2
    // 達成済み
    _FLAG_CHECK( v1_3, SCWK_ANSWER )
    IF $SCWK_ANSWER == TRUE THEN
      _ASM_ADD_WK v1_4, 1 // 達成済みの依頼数をインクリメント
    ENDIF 

    _ASM_ADD_WK v1_3, 1 // フラグをインクリメント
  ENDWHILE

  // 達成済みの依頼数を返す
  $SCWK_ANSWER = $v1_4
}
_RET

//----------------------------------------------------------------------
// ◆次のランクアップまでの残り依頼達成回数を取得する
// ◇out SCWK_ANSWER ランクアップまでの残り回数
//----------------------------------------------------------------------
GET_ACHIEVE_NUM_TO_RANKUP:
{
  // v2_1 現在の隊員ランク
  // v2_2 達成済みの数
  // v2_3 次のランクの必要数

  // 達成済みの依頼数を取得
  _CALL GET_FINISH_RES_REQ_NUM
  $v2_2 = $SCWK_ANSWER

  // 現在の隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( v2_1 )

  // 次のランクの必要達成数を決定
  SWITCH $v2_1
  CASE RESEARCH_TEAM_RANK_1 THEN $v2_3 = 4
  CASE RESEARCH_TEAM_RANK_2 THEN $v2_3 = 10
  CASE RESEARCH_TEAM_RANK_3 THEN $v2_3 = 16
  CASE RESEARCH_TEAM_RANK_4 THEN $v2_3 = 21 
  CASE RESEARCH_TEAM_RANK_5 THEN $v2_3 = RESEARCH_REQ_ID_NUM
  ENDSWITCH

  // ランクアップまでの達成回数を返す
  _ASM_LDWK   SCWK_ANSWER, v2_3
  _ASM_SUB_WK SCWK_ANSWER, v2_2
}
_RET

//----------------------------------------------------------------------
// ◆調査中の依頼の質問数を取得する
// ◇out SCWK_ANSWER 調査中の依頼の質問の数
//----------------------------------------------------------------------
GET_RES_REQ_QUESTION_NUM:
{
  // v1_1 調査中の依頼ID

  // 調査依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v1_1 )

  // 依頼IDごとの質問数を返す
  SWITCH $v1_1
  CASE RESEARCH_REQ_ID_WB_count            THEN $SCWK_ANSWER = 1 //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $SCWK_ANSWER = 1 //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $SCWK_ANSWER = 1 //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $SCWK_ANSWER = 1 //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $SCWK_ANSWER = 1 //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $SCWK_ANSWER = 1 //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $SCWK_ANSWER = 1 //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $SCWK_ANSWER = 1 //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $SCWK_ANSWER = 1 //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $SCWK_ANSWER = 1 //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $SCWK_ANSWER = 1 //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $SCWK_ANSWER = 1 //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $SCWK_ANSWER = 1 //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $SCWK_ANSWER = 1 //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $SCWK_ANSWER = 1 //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $SCWK_ANSWER = 1 //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $SCWK_ANSWER = 1 //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $SCWK_ANSWER = 1 //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $SCWK_ANSWER = 1 //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $SCWK_ANSWER = 1 //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $SCWK_ANSWER = 2 //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $SCWK_ANSWER = 2 //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $SCWK_ANSWER = 2 //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $SCWK_ANSWER = 2 //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $SCWK_ANSWER = 1 //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $SCWK_ANSWER = 1 //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $SCWK_ANSWER = 2 //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $SCWK_ANSWER = 2 //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $SCWK_ANSWER = 1 //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $SCWK_ANSWER = 1 //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $SCWK_ANSWER = 2 //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $SCWK_ANSWER = 2 //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $SCWK_ANSWER = 1 //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $SCWK_ANSWER = 1 //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $SCWK_ANSWER = 2 //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $SCWK_ANSWER = 2 //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $SCWK_ANSWER = 1 //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $SCWK_ANSWER = 1 //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $SCWK_ANSWER = 2 //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $SCWK_ANSWER = 2 //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $SCWK_ANSWER = 1 //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $SCWK_ANSWER = 1 //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $SCWK_ANSWER = 1 //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $SCWK_ANSWER = 1 //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $SCWK_ANSWER = 1 //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $SCWK_ANSWER = 1 //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT $SCWK_ANSWER = 0
  ENDSWITCH 
}
_RET 

//----------------------------------------------------------------------
// ◆指定した調査依頼のノルマ人数を取得する
// ◇in  SCWK_TEMP0 ノルマを取得する調査依頼ID ( RESEARCH_REQ_ID_xxxx )
// ◇out SCWK_TEMP1 依頼内質問番号1のノルマ人数
// ◇out SCWK_TEMP2 依頼内質問番号2のノルマ人数
// ◇out SCWK_TEMP3 依頼内質問番号3のノルマ人数
//----------------------------------------------------------------------
GET_RES_REQ_ABS_NORM_COUNT:
{
  $SCWK_TEMP1 = 0
  $SCWK_TEMP2 = 0
  $SCWK_TEMP3 = 0

  SWITCH $SCWK_TEMP0
  CASE RESEARCH_REQ_ID_PLAY_TIME_count      THEN $SCWK_TEMP1 = 10 //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_count             THEN $SCWK_TEMP1 = 5  //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count     THEN $SCWK_TEMP1 = 5  //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_count            THEN $SCWK_TEMP1 = 10 //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_count            THEN $SCWK_TEMP1 = 10 //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_count          THEN $SCWK_TEMP1 = 10 //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count     THEN $SCWK_TEMP1 = 20 //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count  THEN $SCWK_TEMP1 = 20 //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count      THEN $SCWK_TEMP1 = 20 //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_count          THEN $SCWK_TEMP1 = 20 //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_count         THEN $SCWK_TEMP1 = 30 //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_count          THEN $SCWK_TEMP1 = 40 //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_count         THEN $SCWK_TEMP1 = 40 //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_count         THEN $SCWK_TEMP1 = 50  //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count        THEN $SCWK_TEMP1 = 50  //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_count          THEN $SCWK_TEMP1 = 50  //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count     THEN $SCWK_TEMP1 = 50  //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_count            THEN $SCWK_TEMP1 = 100 //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count THEN //「だいじにしているものに　ついて」( 人数 )
    $SCWK_TEMP1 = 30
    $SCWK_TEMP2 = 30
  CASE RESEARCH_REQ_ID_PARTNER_count THEN //「ひとのみりょくに　ついて」( 人数 )
    $SCWK_TEMP1 = 30
    $SCWK_TEMP2 = 30
  CASE RESEARCH_REQ_ID_ART_count THEN //「げいじゅつに　ついて」( 人数 )
    $SCWK_TEMP1 = 30
    $SCWK_TEMP2 = 30
  CASE RESEARCH_REQ_ID_MOVIE_count THEN //「えいぞうに　ついて」( 人数 )
    $SCWK_TEMP1 = 40
    $SCWK_TEMP2 = 40
  CASE RESEARCH_REQ_ID_STUDY_count THEN //「べんきょうに　ついて」( 人数 )
    $SCWK_TEMP1 = 40
    $SCWK_TEMP2 = 40
  CASE RESEARCH_REQ_ID_WB_time              THEN $SCWK_TEMP1 = 1  //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time      THEN $SCWK_TEMP1 = 1  //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time       THEN $SCWK_TEMP1 = 1  //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_time             THEN $SCWK_TEMP1 = 1  //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_time             THEN $SCWK_TEMP1 = 1  //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_time           THEN $SCWK_TEMP1 = 1  //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time      THEN $SCWK_TEMP1 = 1  //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time   THEN $SCWK_TEMP1 = 1  //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time       THEN $SCWK_TEMP1 = 1  //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_time           THEN $SCWK_TEMP1 = 1  //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_time          THEN $SCWK_TEMP1 = 1   //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time         THEN $SCWK_TEMP1 = 1   //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_time           THEN $SCWK_TEMP1 = 1   //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time      THEN $SCWK_TEMP1 = 1   //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_time             THEN $SCWK_TEMP1 = 1   //「ポケモンのおもしろいところは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time THEN //「だいじにしているものに　ついて」( 時間 )
    $SCWK_TEMP1 = 1
    $SCWK_TEMP2 = 1
  CASE RESEARCH_REQ_ID_PARTNER_time THEN //「ひとのみりょくに　ついて」( 時間 )
    $SCWK_TEMP1 = 1
    $SCWK_TEMP2 = 1
  CASE RESEARCH_REQ_ID_SEASON_time  THEN $SCWK_TEMP1 = 1  //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_time THEN //「げいじゅつに　ついて」( 時間 )
    $SCWK_TEMP1 = 1
    $SCWK_TEMP2 = 1
  CASE RESEARCH_REQ_ID_MUSIC_time  THEN $SCWK_TEMP1 = 1  //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_time THEN //「えいぞうに　ついて」( 時間 )
    $SCWK_TEMP1 = 1
    $SCWK_TEMP2 = 1
  CASE RESEARCH_REQ_ID_SCHOOL_time  THEN $SCWK_TEMP1 = 1  //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_time THEN //「べんきょうに　ついて」( 時間 )
    $SCWK_TEMP1 = 1
    $SCWK_TEMP2 = 1
  DEFAULT
    $SCWK_TEMP1 = 0
    $SCWK_TEMP2 = 0
    $SCWK_TEMP3 = 0
  ENDSWITCH 
}
_RET 

//----------------------------------------------------------------------
// ◆指定した調査依頼のノルマ時間[h]を取得する
// ◇in  SCWK_TEMP0 ノルマを取得する調査依頼ID ( RESEARCH_REQ_ID_xxxx )
// ◇out SCWK_TEMP1 質問1のノルマ時間[h]
// ◇out SCWK_TEMP2 質問2のノルマ時間[h]
// ◇out SCWK_TEMP3 質問3のノルマ時間[h]
//----------------------------------------------------------------------
GET_RES_REQ_ABS_NORM_TIME:
{
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_REQ_ID_WB_count            THEN $SCWK_TEMP1 = 0  //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $SCWK_TEMP1 = 0  //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $SCWK_TEMP1 = 0  //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $SCWK_TEMP1 = 0  //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $SCWK_TEMP1 = 0  //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $SCWK_TEMP1 = 0  //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $SCWK_TEMP1 = 0  //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $SCWK_TEMP1 = 0  //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $SCWK_TEMP1 = 0  //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $SCWK_TEMP1 = 0  //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $SCWK_TEMP1 = 0  //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $SCWK_TEMP1 = 0  //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $SCWK_TEMP1 = 0  //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $SCWK_TEMP1 = 0  //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $SCWK_TEMP1 = 0  //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $SCWK_TEMP1 = 0  //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $SCWK_TEMP1 = 0  //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $SCWK_TEMP1 = 0  //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $SCWK_TEMP1 = 0  //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $SCWK_TEMP1 = 0  //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $SCWK_TEMP1 = 0  //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $SCWK_TEMP1 = 0  //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $SCWK_TEMP1 = 0  //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $SCWK_TEMP1 = 2  //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $SCWK_TEMP1 = 2  //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $SCWK_TEMP1 = 4  //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $SCWK_TEMP1 = 4  //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $SCWK_TEMP1 = 4  //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $SCWK_TEMP1 = 4  //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $SCWK_TEMP1 = 8  //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $SCWK_TEMP1 = 8  //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $SCWK_TEMP1 = 8  //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $SCWK_TEMP1 = 8  //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $SCWK_TEMP1 = 12 //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $SCWK_TEMP1 = 12 //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $SCWK_TEMP1 = 12 //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $SCWK_TEMP1 = 12 //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $SCWK_TEMP1 = 16 //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $SCWK_TEMP1 = 16 //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $SCWK_TEMP1 = 16 //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $SCWK_TEMP1 = 16 //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $SCWK_TEMP1 = 20 //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $SCWK_TEMP1 = 20 //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $SCWK_TEMP1 = 20 //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $SCWK_TEMP1 = 24 //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $SCWK_TEMP1 = 24 //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT                                       $SCWK_TEMP1 = 0
  ENDSWITCH 

  // 3つとも同じノルマ時間
  $SCWK_TEMP2 = $SCWK_TEMP1
  $SCWK_TEMP3 = $SCWK_TEMP1
}
_RET 

//----------------------------------------------------------------------
// ◆指定した依頼に該当する質問IDを取得する
// ◇in  SCWK_TEMP0 調査依頼ID ( RESEARCH_REQ_ID_xxxx )
// ◇out SCWK_TEMP1 質問ID1 ( QUESTION_ID_xxxx, 存在しない場合, QUESTION_ID_DUMMY )
// ◇out SCWK_TEMP2 質問ID2 ( QUESTION_ID_xxxx, 存在しない場合, QUESTION_ID_DUMMY ) 
// ◇out SCWK_TEMP3 質問ID3 ( QUESTION_ID_xxxx, 存在しない場合, QUESTION_ID_DUMMY ) 
//----------------------------------------------------------------------
GET_RES_REQ_QUESTION_ID:
{
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_REQ_ID_WB_count, RESEARCH_REQ_ID_WB_time THEN //「ブラックと　ホワイト　おおいのは？」
    $SCWK_TEMP1 = QUESTION_ID_WB
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_FIRST_POKE_count, RESEARCH_REQ_ID_FIRST_POKE_time THEN //「えらんだ　さいしょのポケモンは？」
    $SCWK_TEMP1 = QUESTION_ID_FIRST_POKEMON
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_PLAY_TIME_count, RESEARCH_REQ_ID_PLAY_TIME_time THEN //「いちばんおおい　プレイじかんは？」
    $SCWK_TEMP1 = QUESTION_ID_PLAY_TIME
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_SEX_count, RESEARCH_REQ_ID_SEX_time THEN //「おとこのこと　おんなのこ　おおいのは？」
    $SCWK_TEMP1 = QUESTION_ID_SEX
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_JOB_count, RESEARCH_REQ_ID_JOB_time THEN //「いちばんおおい　しごとは？」
    $SCWK_TEMP1 = QUESTION_ID_JOB
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_HOBBY_count, RESEARCH_REQ_ID_HOBBY_time THEN //「いちばんおおい　しゅみは？」
    $SCWK_TEMP1 = QUESTION_ID_HOBBY
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count, RESEARCH_REQ_ID_BTL_OR_TRD_time THEN //「たいせんと　こうかん　にんきがあるのは？」
    $SCWK_TEMP1 = QUESTION_ID_FUN
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count, RESEARCH_REQ_ID_FAVORITE_POKE_time THEN //「すきな　ポケモンは？」
    $SCWK_TEMP1 = QUESTION_ID_FAVORITE_POKEMON
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_POKE_TYPE_count, RESEARCH_REQ_ID_POKE_TYPE_time THEN //「すきな　ポケモンのタイプは？」
    $SCWK_TEMP1 = QUESTION_ID_POKEMON_TYPE
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_PLACE_count, RESEARCH_REQ_ID_PLACE_time THEN //「とかいと　いなか　すみたいのは？」
    $SCWK_TEMP1 = QUESTION_ID_PLACE
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_PRECIOUS_count, RESEARCH_REQ_ID_PRECIOUS_time THEN //「だいじにしているものに　ついて」
    $SCWK_TEMP1 = QUESTION_ID_WANT
    $SCWK_TEMP2 = QUESTION_ID_PRECIOUS
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_PARTNER_count, RESEARCH_REQ_ID_PARTNER_time THEN //「ひとのみりょくに　ついて」
    $SCWK_TEMP1 = QUESTION_ID_PARTNER
    $SCWK_TEMP2 = QUESTION_REQUIREMENT
    $SCWK_TEMP3 = QUESTION_ID_CHARACTER
  CASE RESEARCH_REQ_ID_SEASON_count, RESEARCH_REQ_ID_SEASON_time THEN //「きせつに　ついて」
    $SCWK_TEMP1 = QUESTION_ID_SEASON
    $SCWK_TEMP2 = QUESTION_ID_FOOD
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_ART_count, RESEARCH_REQ_ID_ART_time THEN //「げいじゅつに　ついて」
    $SCWK_TEMP1 = QUESTION_ID_COLOR
    $SCWK_TEMP2 = QUESTION_ID_MUSIC
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_MUSIC_count, RESEARCH_REQ_ID_MUSIC_time THEN //「いちばんすきな　おんがくは？」
    $SCWK_TEMP1 = QUESTION_ID_MUSIC
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_MOVIE_count, RESEARCH_REQ_ID_MOVIE_time THEN //「えいぞうに　ついて」
    $SCWK_TEMP1 = QUESTION_ID_TV
    $SCWK_TEMP2 = QUESTION_ID_MOVIE
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_SCHOOL_count, RESEARCH_REQ_ID_SCHOOL_time THEN //「いちばんすきな　がっこうのじかんは？」
    $SCWK_TEMP1 = QUESTION_ID_FAVORITE_CLASS
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_STUDY_count, RESEARCH_REQ_ID_STUDY_time THEN //「べんきょうに　ついて」
    $SCWK_TEMP1 = QUESTION_ID_STRONG_CLASS
    $SCWK_TEMP2 = QUESTION_ID_WEAK_CLASS
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_STORTS_count, RESEARCH_REQ_ID_STORTS_time THEN //「いちばんにんきのある　スポーツは？」
    $SCWK_TEMP1 = QUESTION_ID_SPORTS
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_DAY_OFF_count, RESEARCH_REQ_ID_DAY_OFF_time THEN //「きゅうじつに　ついて」
    $SCWK_TEMP1 = QUESTION_ID_DAY_OFF
    $SCWK_TEMP2 = QUESTION_ID_PLAY_SPOT
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_DREAM_count, RESEARCH_REQ_ID_DREAM_time THEN //「いちばんなりたいものは？」
    $SCWK_TEMP1 = QUESTION_ID_DREAM
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_GYM_LEADER_count, RESEARCH_REQ_ID_GYM_LEADER_time THEN //「いちばんにんきのある　ジムリーダーは？」
    $SCWK_TEMP1 = QUESTION_ID_GYM_LEADER
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_REQ_ID_FUN_count, RESEARCH_REQ_ID_FUN_time THEN //「ポケモンのおもしろいところは？」
    $SCWK_TEMP1 = QUESTION_ID_POKEMON
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  DEFAULT
    $SCWK_TEMP1 = QUESTION_ID_DUMMY
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  ENDSWITCH 
}
_RET

//----------------------------------------------------------------------
// ◆指定した依頼の調査タイプ ( 人数 or 時間 ) を取得する
// ◇in  SCWK_TEMP0  依頼ID
// ◇out SCWK_ANSWER 調査中の依頼のタイプ ( RESEARCH_REQ_TYPE_xxxx )
//----------------------------------------------------------------------
GET_RES_REQ_TYPE:
{ 
  // v1_1 調査依頼ID
  
  // 調査中の依頼IDを取得
  $v1_1 = $SCWK_TEMP0

  // 調査タイプを判別
  SWITCH $v1_1
  CASE RESEARCH_REQ_ID_WB_count            THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $SCWK_ANSWER = RESEARCH_REQ_TYPE_TIME  //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT                                       $SCWK_ANSWER = RESEARCH_REQ_TYPE_COUNT
  ENDSWITCH 
}
_RET

//----------------------------------------------------------------------
// ◆調査中の依頼の報酬を取得する
// ◇out SCWK_ANSWER 依頼を達成した時にもらえるアイテム ( ITEM_xxxx )
//----------------------------------------------------------------------
GET_PRIZE_ITEM:
{
  // v1_1 調査中の依頼ID
  
  // 調査中の依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v1_1 )

  // 調査タイプを判別
  SWITCH $v1_1
  CASE RESEARCH_REQ_ID_WB_count            THEN $SCWK_ANSWER = ITEM_SUUPAABOORU     //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $SCWK_ANSWER = ITEM_SUUPAABOORU     //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $SCWK_ANSWER = ITEM_NETTOBOORU      //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $SCWK_ANSWER = ITEM_NETTOBOORU      //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $SCWK_ANSWER = ITEM_TAIMAABOORU     //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $SCWK_ANSWER = ITEM_TAIMAABOORU     //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $SCWK_ANSWER = ITEM_DAAKUBOORU      //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $SCWK_ANSWER = ITEM_DAAKUBOORU      //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $SCWK_ANSWER = ITEM_HIIRUBOORU      //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $SCWK_ANSWER = ITEM_HIIRUBOORU      //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $SCWK_ANSWER = ITEM_KUIKKUBOORU     //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $SCWK_ANSWER = ITEM_KUIKKUBOORU     //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $SCWK_ANSWER = ITEM_SUGOIKIZUGUSURI //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $SCWK_ANSWER = ITEM_SUGOIKIZUGUSURI //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $SCWK_ANSWER = ITEM_GENKINOKAKERA   //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $SCWK_ANSWER = ITEM_GENKINOKAKERA   //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $SCWK_ANSWER = ITEM_SINZYU          //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $SCWK_ANSWER = ITEM_SINZYU          //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $SCWK_ANSWER = ITEM_HOSINOSUNA      //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $SCWK_ANSWER = ITEM_HOSINOSUNA      //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $SCWK_ANSWER = ITEM_HAATONOUROKO    //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $SCWK_ANSWER = ITEM_HAATONOUROKO    //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $SCWK_ANSWER = ITEM_OOKINAKINOKO    //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $SCWK_ANSWER = ITEM_OOKINAKINOKO    //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $SCWK_ANSWER = ITEM_OOKINASINZYU    //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $SCWK_ANSWER = ITEM_OOKINASINZYU    //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $SCWK_ANSWER = ITEM_HOSINOKAKERA    //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $SCWK_ANSWER = ITEM_HOSINOKAKERA    //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $SCWK_ANSWER = ITEM_POINTOAPPU      //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $SCWK_ANSWER = ITEM_POINTOAPPU      //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $SCWK_ANSWER = ITEM_MAKKUSUAPPU     //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $SCWK_ANSWER = ITEM_MAKKUSUAPPU     //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $SCWK_ANSWER = ITEM_INDOMETASIN     //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $SCWK_ANSWER = ITEM_INDOMETASIN     //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $SCWK_ANSWER = ITEM_BUROMUHEKISIN   //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $SCWK_ANSWER = ITEM_BUROMUHEKISIN   //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $SCWK_ANSWER = ITEM_TAURIN          //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $SCWK_ANSWER = ITEM_TAURIN          //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $SCWK_ANSWER = ITEM_KITOSAN         //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $SCWK_ANSWER = ITEM_KITOSAN         //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $SCWK_ANSWER = ITEM_RIZOTIUMU       //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $SCWK_ANSWER = ITEM_RIZOTIUMU       //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $SCWK_ANSWER = ITEM_KITYOUNAHONE    //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $SCWK_ANSWER = ITEM_KITYOUNAHONE    //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $SCWK_ANSWER = ITEM_KINNOTAMA       //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $SCWK_ANSWER = ITEM_KINNOTAMA       //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT                                       $SCWK_ANSWER = ITEM_OISIIMIZU
  ENDSWITCH 
}
_RET

//----------------------------------------------------------------------
// ◆全ての調査依頼が達成されているかどうかをチェックする
// ◇out SCWK_ANSWER 全ての調査依頼が達成されている場合 TRUE
//----------------------------------------------------------------------
CHECK_RES_REQ_COMPLETE:
{
  // v1_1 先頭の依頼達成フラグ
  // v1_2 末尾の依頼達成フラグ
  // v1_3 チェック対象のフラグ
  // v1_4 フラグの値

  $v1_1 = FE_RES_REQ_WB_COUNT
  $v1_2 = FE_RES_REQ_FUN_TIME
  $v1_3 = $v1_1

  // 全フラグを見る
  WHILE $v1_3 <= $v1_2
    _FLAG_CHECK( v1_3, v1_4 )
    // 達成されていない依頼を発見
    IF $v1_4 == FALSE THEN
      $SCWK_ANSWER = FALSE 
      _RET
    ENDIF
    _ASM_ADD_WK v1_3, 1 // フラグをインクリメント
  ENDWHILE

  // すべての依頼が達成されている
  $SCWK_ANSWER = TRUE
}
_RET

//----------------------------------------------------------------------
// ◆依頼を受けているかどうかをチェックする
// ◇out SCWK_ANSWER 依頼を受けている場合 TRUE
//----------------------------------------------------------------------
CHECK_RES_REQ_EXIST:
{
  // v1_1 調査中の依頼ID

  // 調査中の依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v1_1 )

  IF $v1_1 == RESEARCH_REQ_ID_NONE THEN
    $SCWK_ANSWER = FALSE // 受けていない
  ELSE
    $SCWK_ANSWER = TRUE // 受けている
  ENDIF
}
_RET

//----------------------------------------------------------------------
// ◆隊長「今日はどうする？」⇒ メニューを表示
// ◇out SCWK_ANSWER 選択した項目のメッセージID
//----------------------------------------------------------------------
LEADER_SAY_May_I_help_you:
{
  // v1_1 調査中の依頼ID

  // 調査中の依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v1_1 )

  // 隊長「きょうは　どうする？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_06, SCWK_TARGET_OBJID, POS_DOWN )

  // メニューを表示
  _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_01a, msg_c03r0101__choice_01a ) //「いらいをうける」
  IF $v1_1 != RESEARCH_REQ_ID_NONE THEN 
    _BMPMENU_MAKE_LIST( msg_c03r0101__choice_01d, msg_c03r0101__choice_01d ) //「いらいのかくにん」
  ENDIF
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_01b, msg_c03r0101__choice_01b ) //「いらいのほうこく」
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_01c, msg_c03r0101__choice_01c ) //「なんでもないです」
  _BMPMENU_START()

  // 吹出しを消す
  //_BALLOONWIN_CLOSE() 
}
_RET 

//----------------------------------------------------------------------
// ◆調査タイプメニューを表示する
// ◇out SCWK_ANSWER 選択した調査タイプ ( RESEARCH_REQ_TYPE_xxxx )
//----------------------------------------------------------------------
RES_TYPE_MENU:
{
  _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_02b, RESEARCH_REQ_TYPE_COUNT ) //『にんずうちょうさ』
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_02a, RESEARCH_REQ_TYPE_TIME )  //『じかんちょうさ』
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_02c, RESEARCH_REQ_TYPE_NUM )   //『やめる』
  _BMPMENU_START()
}
_RET

//----------------------------------------------------------------------
// ◆調査依頼メニューを表示する
// ◇in  SCWK_TEMP0  調査タイプ ( RESEARCH_REQ_TYPE_xxxx )
// ◇in  SCWK_TEMP1  隊員ランク ( RESEARCH_MEMBER_RANK_xxxx )
// ◇out SCWK_ANSWER 選択した調査依頼ID ( RESEARCH_REQ_ID_xxxx )
//----------------------------------------------------------------------
RES_REQ_MENU:
{
  DEFINE_LOCAL flag

  _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )

  // メニューリストを作成
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_REQ_TYPE_COUNT THEN // 人数調査
    // 隊員ランク C 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_1 THEN 
      //「ブラックと　ホワイト　おおいのは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_WB_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03a, RESEARCH_REQ_ID_WB_count )         
      ENDIF
      //「えらんだ　さいしょのポケモンは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_FIRST_POKE_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03b, RESEARCH_REQ_ID_FIRST_POKE_count ) 
      ENDIF
      //「いちばんおおい　プレイじかんは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_PLAY_TIME_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03c, RESEARCH_REQ_ID_PLAY_TIME_count )  
      ENDIF
      //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_SEX_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03d, RESEARCH_REQ_ID_SEX_count )        
      ENDIF
    ENDIF
    // 隊員ランク B 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_2 THEN
      //「いちばんおおい　しごとは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_JOB_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03e, RESEARCH_REQ_ID_JOB_count )           
      ENDIF
      //「いちばんおおい　しゅみは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_HOBBY_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03f, RESEARCH_REQ_ID_HOBBY_count )         
      ENDIF
      //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_BTL_OR_TRD_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03g, RESEARCH_REQ_ID_BTL_OR_TRD_count )    
      ENDIF
      //「すきな　ポケモンは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_FAV_POKE_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03h, RESEARCH_REQ_ID_FAVORITE_POKE_count ) 
      ENDIF
      //「すきな　ポケモンのタイプは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_POKE_TYPE_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03i, RESEARCH_REQ_ID_POKE_TYPE_count )     
      ENDIF
      //「とかいと　いなか　すみたいのは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_PLACE_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03j, RESEARCH_REQ_ID_PLACE_count )         
      ENDIF
    ENDIF
    // 隊員ランク A 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_3 THEN
      //「だいじにしているものに　ついて」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_PRECIOUS_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03k, RESEARCH_REQ_ID_PRECIOUS_count ) 
      ENDIF
      //「ひとのみりょくに　ついて」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_PARTNER_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03l, RESEARCH_REQ_ID_PARTNER_count )  
      ENDIF
      //「きせつに　ついて」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_SEASON_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03m, RESEARCH_REQ_ID_SEASON_count )   
      ENDIF
      //「げいじゅつに　ついて」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_ART_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03n, RESEARCH_REQ_ID_ART_count )      
      ENDIF
      //「いちばんすきな　おんがくは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_MUSIC_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03o, RESEARCH_REQ_ID_MUSIC_count )    
      ENDIF
      //「えいぞうに　ついて」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_MOVIE_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03p, RESEARCH_REQ_ID_MOVIE_count )    
      ENDIF
    ENDIF
    // 隊員ランク S 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_4 THEN
      //「いちばんすきな　がっこうのじかんは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_SCHOOL_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03q, RESEARCH_REQ_ID_SCHOOL_count )  
      ENDIF
      //「べんきょうに　ついて」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_STUDY_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03r, RESEARCH_REQ_ID_STUDY_count )   
      ENDIF
      //「いちばんにんきのある　スポーツは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_STORTS_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03s, RESEARCH_REQ_ID_STORTS_count )  
      ENDIF
      //「きゅうじつに　ついて」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_DAY_OFF_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03t, RESEARCH_REQ_ID_DAY_OFF_count ) 
      ENDIF
      //「いちばんなりたいものは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_DREAM_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03u, RESEARCH_REQ_ID_DREAM_count )   
      ENDIF
    ENDIF
    // 隊員ランク SS 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_5 THEN
      //「いちばんにんきのある　ジムリーダーは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_LEADER_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03v, RESEARCH_REQ_ID_GYM_LEADER_count ) 
      ENDIF
      //「ポケモンのおもしろいところは？」( 人数 )
      _FLAG_CHECK( FE_RES_REQ_FUN_COUNT, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03w, RESEARCH_REQ_ID_FUN_count )        
      ENDIF
    ENDIF

  CASE RESEARCH_REQ_TYPE_TIME THEN // 時間調査
    // 隊員ランク C 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_1 THEN 
      //「ブラックと　ホワイト　おおいのは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_WB_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03a, RESEARCH_REQ_ID_WB_time )         
      ENDIF
      //「えらんだ　さいしょのポケモンは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_FIRST_POKE_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03b, RESEARCH_REQ_ID_FIRST_POKE_time ) 
      ENDIF
      //「いちばんおおい　プレイじかんは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_PLAY_TIME_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03c, RESEARCH_REQ_ID_PLAY_TIME_time )  
      ENDIF
      //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_SEX_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03d, RESEARCH_REQ_ID_SEX_time )        
      ENDIF
    ENDIF
    // 隊員ランク B 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_2 THEN
      //「いちばんおおい　しごとは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_JOB_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03e, RESEARCH_REQ_ID_JOB_time )           
      ENDIF
      //「いちばんおおい　しゅみは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_HOBBY_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03f, RESEARCH_REQ_ID_HOBBY_time )         
      ENDIF
      //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_BTL_OR_TRD_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03g, RESEARCH_REQ_ID_BTL_OR_TRD_time )    
      ENDIF
      //「すきな　ポケモンは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_FAV_POKE_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03h, RESEARCH_REQ_ID_FAVORITE_POKE_time ) 
      ENDIF
      //「すきな　ポケモンのタイプは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_POKE_TYPE_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03i, RESEARCH_REQ_ID_POKE_TYPE_time )     
      ENDIF
      //「とかいと　いなか　すみたいのは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_PLACE_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03j, RESEARCH_REQ_ID_PLACE_time )         
      ENDIF
    ENDIF
    // 隊員ランク A 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_3 THEN
      //「だいじにしているものに　ついて」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_PRECIOUS_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03k, RESEARCH_REQ_ID_PRECIOUS_time ) 
      ENDIF
      //「ひとのみりょくに　ついて」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_PARTNER_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03l, RESEARCH_REQ_ID_PARTNER_time )  
      ENDIF
      //「きせつに　ついて」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_SEASON_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03m, RESEARCH_REQ_ID_SEASON_time )   
      ENDIF
      //「げいじゅつに　ついて」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_ART_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03n, RESEARCH_REQ_ID_ART_time )      
      ENDIF
      //「いちばんすきな　おんがくは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_MUSIC_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03o, RESEARCH_REQ_ID_MUSIC_time )    
      ENDIF
      //「えいぞうに　ついて」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_MOVIE_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03p, RESEARCH_REQ_ID_MOVIE_time )    
    ENDIF
      ENDIF
    // 隊員ランク S 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_4 THEN
      //「いちばんすきな　がっこうのじかんは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_SCHOOL_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03q, RESEARCH_REQ_ID_SCHOOL_time )  
      //「べんきょうに　ついて」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_STUDY_TIME, SCWK_ANSWER )
      ENDIF
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03r, RESEARCH_REQ_ID_STUDY_time )   
      ENDIF
      //「いちばんにんきのある　スポーツは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_STORTS_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03s, RESEARCH_REQ_ID_STORTS_time )  
      ENDIF
      //「きゅうじつに　ついて」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_DAY_OFF_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03t, RESEARCH_REQ_ID_DAY_OFF_time ) 
      ENDIF
      //「いちばんなりたいものは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_DREAM_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03u, RESEARCH_REQ_ID_DREAM_time )   
      ENDIF
    ENDIF
    // 隊員ランク SS 以上
    IF $SCWK_TEMP1 >= RESEARCH_TEAM_RANK_5 THEN
      //「いちばんにんきのある　ジムリーダーは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_LEADER_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03v, RESEARCH_REQ_ID_GYM_LEADER_time ) 
      ENDIF
      //「ポケモンのおもしろいところは？」( 時間 )
      _FLAG_CHECK( FE_RES_REQ_FUN_TIME, SCWK_ANSWER )
      IF $SCWK_ANSWER == FALSE THEN
        _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03w, RESEARCH_REQ_ID_FUN_time )        
      ENDIF
    ENDIF 
  ENDSWITCH

  //『やめる』
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03x, RESEARCH_REQ_ID_NONE )        

  // メニューを表示
  _BMPMENU_START()
}
_RET

//----------------------------------------------------------------------
// ◆システム「調査を隊長に報告した！」
//----------------------------------------------------------------------
SYSTEM_MSG_REPORT_RESULT:
{
  // v1_1 調査中の依頼ID
  // v1_2 メッセージID

  // 調査依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v1_1 )

  // メッセージを選択
  SWITCH $v1_1
  CASE RESEARCH_REQ_ID_WB_count            THEN $v1_2 = msg_c03r0101_assistantm_01_23a //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $v1_2 = msg_c03r0101_assistantm_01_23a //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $v1_2 = msg_c03r0101_assistantm_01_23b //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $v1_2 = msg_c03r0101_assistantm_01_23b //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $v1_2 = msg_c03r0101_assistantm_01_23c //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $v1_2 = msg_c03r0101_assistantm_01_23c //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $v1_2 = msg_c03r0101_assistantm_01_23d //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $v1_2 = msg_c03r0101_assistantm_01_23d //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $v1_2 = msg_c03r0101_assistantm_01_23e //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $v1_2 = msg_c03r0101_assistantm_01_23e //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $v1_2 = msg_c03r0101_assistantm_01_23f //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $v1_2 = msg_c03r0101_assistantm_01_23f //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $v1_2 = msg_c03r0101_assistantm_01_23g //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $v1_2 = msg_c03r0101_assistantm_01_23g //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $v1_2 = msg_c03r0101_assistantm_01_23h //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $v1_2 = msg_c03r0101_assistantm_01_23h //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $v1_2 = msg_c03r0101_assistantm_01_23i //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $v1_2 = msg_c03r0101_assistantm_01_23i //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $v1_2 = msg_c03r0101_assistantm_01_23j //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $v1_2 = msg_c03r0101_assistantm_01_23j //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $v1_2 = msg_c03r0101_assistantm_01_23k //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $v1_2 = msg_c03r0101_assistantm_01_23k //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $v1_2 = msg_c03r0101_assistantm_01_23l //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $v1_2 = msg_c03r0101_assistantm_01_23l //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $v1_2 = msg_c03r0101_assistantm_01_23m //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $v1_2 = msg_c03r0101_assistantm_01_23m //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $v1_2 = msg_c03r0101_assistantm_01_23n //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $v1_2 = msg_c03r0101_assistantm_01_23n //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $v1_2 = msg_c03r0101_assistantm_01_23o //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $v1_2 = msg_c03r0101_assistantm_01_23o //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $v1_2 = msg_c03r0101_assistantm_01_23p //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $v1_2 = msg_c03r0101_assistantm_01_23p //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $v1_2 = msg_c03r0101_assistantm_01_23q //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $v1_2 = msg_c03r0101_assistantm_01_23q //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $v1_2 = msg_c03r0101_assistantm_01_23r //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $v1_2 = msg_c03r0101_assistantm_01_23r //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $v1_2 = msg_c03r0101_assistantm_01_23s //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $v1_2 = msg_c03r0101_assistantm_01_23s //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $v1_2 = msg_c03r0101_assistantm_01_23t //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $v1_2 = msg_c03r0101_assistantm_01_23t //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $v1_2 = msg_c03r0101_assistantm_01_23u //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $v1_2 = msg_c03r0101_assistantm_01_23u //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $v1_2 = msg_c03r0101_assistantm_01_23v //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $v1_2 = msg_c03r0101_assistantm_01_23v //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $v1_2 = msg_c03r0101_assistantm_01_23w //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $v1_2 = msg_c03r0101_assistantm_01_23w //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT _RET
  ENDSWITCH

  // メッセージを表示
  _SYSWIN_MSG( v1_2, POS_DOWN )
  _SYSWIN_CLOSE()
}
_RET

//----------------------------------------------------------------------
// ◆システム「調査依頼を受けた！」
//----------------------------------------------------------------------
SYSTEM_MSG_RECEIVE_REQUEST:
{
  // v1_1 調査中の依頼ID
  // v1_2 メッセージID

  // 調査依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v1_1 )

  // メッセージを選択
  SWITCH $v1_1
  CASE RESEARCH_REQ_ID_WB_count            THEN $v1_2 = msg_c03r0101_assistantm_01_16a //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $v1_2 = msg_c03r0101_assistantm_01_16a //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $v1_2 = msg_c03r0101_assistantm_01_16b //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $v1_2 = msg_c03r0101_assistantm_01_16b //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $v1_2 = msg_c03r0101_assistantm_01_16c //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $v1_2 = msg_c03r0101_assistantm_01_16c //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $v1_2 = msg_c03r0101_assistantm_01_16d //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $v1_2 = msg_c03r0101_assistantm_01_16d //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $v1_2 = msg_c03r0101_assistantm_01_16e //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $v1_2 = msg_c03r0101_assistantm_01_16e //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $v1_2 = msg_c03r0101_assistantm_01_16f //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $v1_2 = msg_c03r0101_assistantm_01_16f //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $v1_2 = msg_c03r0101_assistantm_01_16g //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $v1_2 = msg_c03r0101_assistantm_01_16g //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $v1_2 = msg_c03r0101_assistantm_01_16h //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $v1_2 = msg_c03r0101_assistantm_01_16h //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $v1_2 = msg_c03r0101_assistantm_01_16i //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $v1_2 = msg_c03r0101_assistantm_01_16i //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $v1_2 = msg_c03r0101_assistantm_01_16j //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $v1_2 = msg_c03r0101_assistantm_01_16j //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $v1_2 = msg_c03r0101_assistantm_01_16k //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $v1_2 = msg_c03r0101_assistantm_01_16k //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $v1_2 = msg_c03r0101_assistantm_01_16l //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $v1_2 = msg_c03r0101_assistantm_01_16l //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $v1_2 = msg_c03r0101_assistantm_01_16m //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $v1_2 = msg_c03r0101_assistantm_01_16m //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $v1_2 = msg_c03r0101_assistantm_01_16n //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $v1_2 = msg_c03r0101_assistantm_01_16n //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $v1_2 = msg_c03r0101_assistantm_01_16o //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $v1_2 = msg_c03r0101_assistantm_01_16o //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $v1_2 = msg_c03r0101_assistantm_01_16p //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $v1_2 = msg_c03r0101_assistantm_01_16p //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $v1_2 = msg_c03r0101_assistantm_01_16q //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $v1_2 = msg_c03r0101_assistantm_01_16q //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $v1_2 = msg_c03r0101_assistantm_01_16r //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $v1_2 = msg_c03r0101_assistantm_01_16r //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $v1_2 = msg_c03r0101_assistantm_01_16s //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $v1_2 = msg_c03r0101_assistantm_01_16s //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $v1_2 = msg_c03r0101_assistantm_01_16t //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $v1_2 = msg_c03r0101_assistantm_01_16t //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $v1_2 = msg_c03r0101_assistantm_01_16u //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $v1_2 = msg_c03r0101_assistantm_01_16u //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $v1_2 = msg_c03r0101_assistantm_01_16v //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $v1_2 = msg_c03r0101_assistantm_01_16v //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $v1_2 = msg_c03r0101_assistantm_01_16w //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $v1_2 = msg_c03r0101_assistantm_01_16w //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT _RET
  ENDSWITCH

  // SE を再生
  _SE_PLAY( SEQ_SE_SYS_80 )

  // メッセージを表示
  _SYSWIN_MSG( v1_2, POS_DOWN )
  _SYSWIN_CLOSE()
}
_RET 
//----------------------------------------------------------------------
// ◆システム「〜隊員に任命された」
//----------------------------------------------------------------------
SYSTEM_MSG_Rank_up:
{
  // v2_1 隊員ランク
  // v2_2 メッセージID

  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( v2_1 )

  // メッセージIDを選択
  SWITCH $v2_1
  CASE RESEARCH_TEAM_RANK_1 THEN $v2_2 = msg_c03r0101_assistantm_01_27a
  CASE RESEARCH_TEAM_RANK_2 THEN $v2_2 = msg_c03r0101_assistantm_01_27a
  CASE RESEARCH_TEAM_RANK_3 THEN $v2_2 = msg_c03r0101_assistantm_01_27b
  CASE RESEARCH_TEAM_RANK_4 THEN $v2_2 = msg_c03r0101_assistantm_01_27c
  CASE RESEARCH_TEAM_RANK_5 THEN $v2_2 = msg_c03r0101_assistantm_01_27d
  ENDSWITCH 

  // メッセージを表示
  _SE_PLAY( SEQ_SE_SYS_82 )
  _PLAYER_NAME(1)
  _SYSWIN_MSG( v2_2, POS_DOWN )
  _SYSWIN_CLOSE()
}
_RET 
//----------------------------------------------------------------------
// ◆隊長 初回会話
//----------------------------------------------------------------------
LEADER_SAY_Nice_to_meet_you:
{
  //「キミを　とくべつに　ちょうさたいいんに　にんめいする！」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_01, SCWK_TARGET_OBJID, POS_DOWN )
  _BALLOONWIN_CLOSE() 

  //「ちょうさたいいん　に　にんめい　されてしまった！」
  _SE_PLAY( SEQ_SE_SYS_82 ) 
  _PLAYER_NAME(1)
  _SYSWIN_MSG( msg_c03r0101_assistantm_01_02, POS_DOWN )
  _SYSWIN_CLOSE()

  //「キミの　かつやくを　きたいしているぞ！」
  _PLAYER_NAME(1)
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_03, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET 
//----------------------------------------------------------------------
// ◆隊長「よくきたな　げんきに　ちょうさ　しているか？」
//----------------------------------------------------------------------
LEADER_SAY_You_are_welcome:
  _PLAYER_NAME(1)
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_04, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
_RET
//----------------------------------------------------------------------
// ◆隊長「キミは　すべてのいらいを　おえている」
//----------------------------------------------------------------------
LEADER_SAY_You_have_already_completed:
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_05, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
_RET
//----------------------------------------------------------------------
// ◆隊長「うけている　いらいを　キャンセルするか？」
// ◇out SCWK_ANSWER 『はい』or『いいえ』の選択結果
//----------------------------------------------------------------------
LEADER_SAY_Do_you_cancel_request:
  //「うけている　いらいを　キャンセルするか？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_09, SCWK_TARGET_OBJID, POS_DOWN ) 

  //『はい』『いいえ』選択
  $SCWK_TEMP0 = SCR_NO
  _CALL YES_NO_WIN_EX

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE()        
_RET
//----------------------------------------------------------------------
// ◆隊長「ちょうさいらいは　うけていないようだ」
//----------------------------------------------------------------------
LEADER_SAY_You_dont_have_request:
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_22, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
_RET
//----------------------------------------------------------------------
// ◆隊長「そうか……　また　きてね」
//----------------------------------------------------------------------
LEADER_SAY_ByeBye:
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_32, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
_RET
//----------------------------------------------------------------------
// ◆調査方法の選択
// ◇out SCWK_ANSWER 選択した調査依頼タイプ ( RESEARCH_REQ_TYPE_xxxx )
//----------------------------------------------------------------------
SELECT_REQUEST_TYPE:
{
  // 隊長「調査方法を選んでくれ」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_07, SCWK_TARGET_OBJID, POS_DOWN )

  // 調査タイプを選択
  _CALL RES_TYPE_MENU 

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE()
}
_RET
//----------------------------------------------------------------------
// ◆調査依頼の選択
// ◇in  SCWK_TEMP0  調査依頼のタイプ ( RESEARCH_REQ_TYPE_xxxx )
// ◇out SCWK_ANSWER 選択した調査依頼のID ( RESEARCH_REQ_ID_xxxx )
//                   依頼選択で『やめる』を選択した場合, RESEARCH_REQ_ID_NONE
//----------------------------------------------------------------------
SELECT_REQUEST:
{
  // v2_1 調査タイプ
  // v2_2 隊員ランク
  // v2_3 依頼ID

  $v2_1 = $SCWK_TEMP0             // 調査タイプを取得
  _GET_RESEARCH_TEAM_RANK( v2_2 ) // 隊員ランクを取得

  // 依頼を選択
  SWITCH $v2_1
  CASE RESEARCH_REQ_TYPE_COUNT THEN //『にんずうちょうさ』
    $SCWK_TEMP0 = $v2_1  // 依頼を選択
    $SCWK_TEMP1 = $v2_2  // 
    _CALL RES_REQ_MENU   // 
    $v2_3 = $SCWK_ANSWER // 選択した依頼IDを取得
  CASE RESEARCH_REQ_TYPE_TIME THEN //『じかんちょうさ』
    $SCWK_TEMP0 = $v2_1  // 依頼を選択
    $SCWK_TEMP1 = $v2_2  // 
    _CALL RES_REQ_MENU   // 
    $v2_3 = $SCWK_ANSWER // 選択した依頼IDを取得
  DEFAULT
    $v2_3 = RESEARCH_REQ_TYPE_DUMMY
  ENDSWITCH

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE()

  // 選択結果を返す
  $SCWK_TEMP0  = $v2_1
  $SCWK_ANSWER = $v2_3
}
_RET
//----------------------------------------------------------------------
// ◆隊長「この調査依頼を受けるのか？」
// ◇out SCWK_ANSWER 『はい』or『いいえ』の選択結果
//----------------------------------------------------------------------
LEADER_SAY_Is_this_request_ok:
{
  //「この調査依頼を受けるのか？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_15, SCWK_TARGET_OBJID, POS_DOWN )

  //『はい』『いいえ』選択
  $SCWK_TEMP0 = SCR_YES
  _CALL YES_NO_WIN_EX

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE()        
}
_RET 
//----------------------------------------------------------------------
// ◆隊長「他の依頼を受けるのか？」
// ◇out SCWK_ANSWER 『はい』or『いいえ』の選択結果
//----------------------------------------------------------------------
LEADER_SAY_Do_you_select_other_request:
{
  //「他の依頼を受けるのか？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_18, SCWK_TARGET_OBJID, POS_DOWN )

  //『はい』『いいえ』選択
  $SCWK_TEMP0 = SCR_YES
  _CALL YES_NO_WIN_EX

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE()
}
_RET
//----------------------------------------------------------------------
// ◆隊長「いらいを　うけたくなったら　またきてくれ」
//----------------------------------------------------------------------
LEADER_SAY_Come_again_if_you_want:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_08, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「依頼を受けたくなったら, また来てくれ！」
//----------------------------------------------------------------------
LEADER_SAY_Come_again_if_you_want_2:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_11, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET 
//----------------------------------------------------------------------
// ◆隊長「調査が終了したら, 報告に来てくれ」
//----------------------------------------------------------------------
LEADER_SAY_Come_again_if_you_achieve:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_17, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「では引き続き, 調査を続けてくれ」
//----------------------------------------------------------------------
LEADER_SAY_Continue_research:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_12, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「調査内容を報告してくれ」
//----------------------------------------------------------------------
LEADER_SAY_Report_research_result:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_19, SCWK_TARGET_OBJID, POS_DOWN )
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「これは調査の報酬だ 受け取ってくれ」
//----------------------------------------------------------------------
LEADER_SAY_Present_for_you:
{
  _PLAYER_NAME(1)
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_25, SCWK_TARGET_OBJID, POS_DOWN )
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「これは私の気持ちだ 受け取ってくれ」
//----------------------------------------------------------------------
LEADER_SAY_Congraturation:
{
  _PLAYER_NAME(1)
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_30, SCWK_TARGET_OBJID, POS_DOWN )
  _BALLOONWIN_CLOSE()
}
_RET
//----------------------------------------------------------------------
// ◆隊長「今後も期待しているぞ！」
//----------------------------------------------------------------------
LEADER_SAY_I_hope_for_you:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_31, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「次の調査も期待しているぞ！」
//----------------------------------------------------------------------
LEADER_SAY_Lets_next_research:
{
  _PLAYER_NAME(1)
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_29, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「人数調査だな？」
//----------------------------------------------------------------------
LEADER_SAY_It_is_count_research:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_34b, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「時間調査だな？」
//----------------------------------------------------------------------
LEADER_SAY_It_is_time_research:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_34a, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「すでに調査が完了しているじゃないか！」( 人数調査 )
//----------------------------------------------------------------------
LEADER_SAY_You_have_finishd_count_research:
{
  _PLAYER_NAME(1)
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_14x, SCWK_TARGET_OBJID, POS_DOWN )
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「すでに調査が完了しているじゃないか！」( 時間調査 )
//----------------------------------------------------------------------
LEADER_SAY_You_have_finishd_time_research:
{
  _PLAYER_NAME(1)
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_assistantm_01_13x, SCWK_TARGET_OBJID, POS_DOWN )
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「今日から君は〜隊員だ！」
//----------------------------------------------------------------------
LEADER_SAY_I_appoint_you_as:
{
  // v2_1 隊員ランク
  // v2_2 メッセージID

  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( v2_1 )

  // メッセージIDを選択
  SWITCH $v2_1
  CASE RESEARCH_TEAM_RANK_1 THEN $v2_2 = msg_c03r0101_assistantm_01_26a
  CASE RESEARCH_TEAM_RANK_2 THEN $v2_2 = msg_c03r0101_assistantm_01_26a
  CASE RESEARCH_TEAM_RANK_3 THEN $v2_2 = msg_c03r0101_assistantm_01_26b
  CASE RESEARCH_TEAM_RANK_4 THEN $v2_2 = msg_c03r0101_assistantm_01_26c
  CASE RESEARCH_TEAM_RANK_5 THEN $v2_2 = msg_c03r0101_assistantm_01_26d
  ENDSWITCH 

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v2_2, SCWK_TARGET_OBJID, POS_DOWN )

  // 吹出しを閉じる
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「あと〜回で〜隊員だ」
//----------------------------------------------------------------------
LEADER_SAY_Next_rank:
{
  // v3_1 隊員ランク
  // v3_2 メッセージID

  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( v3_1 )

  // メッセージIDを選択
  SWITCH $v3_1
  CASE RESEARCH_TEAM_RANK_1 THEN $v3_2 = msg_c03r0101_assistantm_01_28a
  CASE RESEARCH_TEAM_RANK_2 THEN $v3_2 = msg_c03r0101_assistantm_01_28b
  CASE RESEARCH_TEAM_RANK_3 THEN $v3_2 = msg_c03r0101_assistantm_01_28c
  CASE RESEARCH_TEAM_RANK_4 THEN $v3_2 = msg_c03r0101_assistantm_01_28d
  CASE RESEARCH_TEAM_RANK_5 THEN $v3_2 = msg_c03r0101_assistantm_01_28d
  ENDSWITCH 

  // ランクアップまでの残り依頼数をワードセットに登録
  _CALL GET_ACHIEVE_NUM_TO_RANKUP 
  _NUMBER( 1, SCWK_ANSWER, 2 )

  // メッセージ表示
  _BALLOONWIN_OBJMSG_POS( v3_2, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「〜依頼内容の説明〜」
// ◇in SCWK_TEMP0 説明する調査依頼ID
//----------------------------------------------------------------------
LEADER_SAY_This_request_is:
{
  // v4_1 メッセージID
  // v4_2 調査依頼ID
  // v4_3 現在の調査人数
  // v4_4 ノルマ人数
  // v4_5 依頼達成人数

  // 引数を受け取る
  $v4_2 = $SCWK_TEMP0

  // メッセージを選択
  SWITCH $v4_2
  CASE RESEARCH_REQ_ID_WB_count            THEN $v4_1 = msg_c03r0101_assistantm_01_14a //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $v4_1 = msg_c03r0101_assistantm_01_13a //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $v4_1 = msg_c03r0101_assistantm_01_14b //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $v4_1 = msg_c03r0101_assistantm_01_13b //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $v4_1 = msg_c03r0101_assistantm_01_14c //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $v4_1 = msg_c03r0101_assistantm_01_13c //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14d //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13d //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14e //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13e //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14f //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13f //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $v4_1 = msg_c03r0101_assistantm_01_14g //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $v4_1 = msg_c03r0101_assistantm_01_13g //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $v4_1 = msg_c03r0101_assistantm_01_14h //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $v4_1 = msg_c03r0101_assistantm_01_13h //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $v4_1 = msg_c03r0101_assistantm_01_14i //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $v4_1 = msg_c03r0101_assistantm_01_13i //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14j //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13j //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $v4_1 = msg_c03r0101_assistantm_01_14k //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $v4_1 = msg_c03r0101_assistantm_01_13k //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $v4_1 = msg_c03r0101_assistantm_01_14l //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $v4_1 = msg_c03r0101_assistantm_01_13l //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $v4_1 = msg_c03r0101_assistantm_01_14m //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $v4_1 = msg_c03r0101_assistantm_01_13m //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14n //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13n //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14o //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13o //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14p //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13p //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $v4_1 = msg_c03r0101_assistantm_01_14q //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $v4_1 = msg_c03r0101_assistantm_01_13q //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14r //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13r //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $v4_1 = msg_c03r0101_assistantm_01_14s //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $v4_1 = msg_c03r0101_assistantm_01_13s //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $v4_1 = msg_c03r0101_assistantm_01_14t //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $v4_1 = msg_c03r0101_assistantm_01_13t //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14u //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13u //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $v4_1 = msg_c03r0101_assistantm_01_14v //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $v4_1 = msg_c03r0101_assistantm_01_13v //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14w //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13w //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT _RET
  ENDSWITCH 

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v4_1, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET 
//----------------------------------------------------------------------
// ◆隊長「〜依頼内容の確認〜」
//----------------------------------------------------------------------
LEADER_SAY_Your_request_is:
{
  // v4_1 メッセージID
  // v4_2 調査依頼ID
  // v4_3 現在の調査人数
  // v4_4 ノルマ人数
  // v4_5 依頼達成人数

  // 調査中の依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v4_2 )

  // メッセージを選択
  SWITCH $v4_2
  CASE RESEARCH_REQ_ID_WB_count            THEN $v4_1 = msg_c03r0101_assistantm_01_14a //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $v4_1 = msg_c03r0101_assistantm_01_13a //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $v4_1 = msg_c03r0101_assistantm_01_14b //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $v4_1 = msg_c03r0101_assistantm_01_13b //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $v4_1 = msg_c03r0101_assistantm_01_14c //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $v4_1 = msg_c03r0101_assistantm_01_13c //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14d //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13d //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14e //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13e //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14f //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13f //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $v4_1 = msg_c03r0101_assistantm_01_14g //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $v4_1 = msg_c03r0101_assistantm_01_13g //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $v4_1 = msg_c03r0101_assistantm_01_14h //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $v4_1 = msg_c03r0101_assistantm_01_13h //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $v4_1 = msg_c03r0101_assistantm_01_14i //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $v4_1 = msg_c03r0101_assistantm_01_13i //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14j //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13j //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $v4_1 = msg_c03r0101_assistantm_01_14k //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $v4_1 = msg_c03r0101_assistantm_01_13k //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $v4_1 = msg_c03r0101_assistantm_01_14l //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $v4_1 = msg_c03r0101_assistantm_01_13l //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $v4_1 = msg_c03r0101_assistantm_01_14m //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $v4_1 = msg_c03r0101_assistantm_01_13m //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14n //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13n //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14o //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13o //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14p //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13p //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $v4_1 = msg_c03r0101_assistantm_01_14q //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $v4_1 = msg_c03r0101_assistantm_01_13q //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14r //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13r //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $v4_1 = msg_c03r0101_assistantm_01_14s //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $v4_1 = msg_c03r0101_assistantm_01_13s //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $v4_1 = msg_c03r0101_assistantm_01_14t //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $v4_1 = msg_c03r0101_assistantm_01_13t //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $v4_1 = msg_c03r0101_assistantm_01_14u //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $v4_1 = msg_c03r0101_assistantm_01_13u //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $v4_1 = msg_c03r0101_assistantm_01_14v //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $v4_1 = msg_c03r0101_assistantm_01_13v //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $v4_1 = msg_c03r0101_assistantm_01_14w //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $v4_1 = msg_c03r0101_assistantm_01_13w //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT _RET
  ENDSWITCH 

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v4_1, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆隊長「ふむふむ……」
//----------------------------------------------------------------------
LEADER_SAY_Ah_hah:
{
  // v4_1 メッセージID
  // v4_2 調査中の依頼ID
  // v4_3 1つ目の質問ID
  // v4_4 2つ目の質問ID
  // v4_5 3つ目の質問ID
  // v4_6 1つ目の質問に対する, 最も多数派の回答ID
  // v4_7 2つ目の質問に対する, 最も多数派の回答ID
  // v4_8 3つ目の質問に対する, 最も多数派の回答ID

  // 調査中の依頼ID・質問IDを取得
  _GET_RESEARCH_REQUEST_ID( v4_2 )
  _GET_RESEARCH_QUESTION_ID( v4_3, v4_4, v4_5 )

  // 最も多数派の回答IDを取得する
  IF $v4_3 != QUESTION_ID_DUMMY THEN
    _GET_MAJORITY_ANSWER_OF_QUESTION( v4_3, v4_6 )
  ENDIF
  IF $v4_4 != QUESTION_ID_DUMMY THEN
    _GET_MAJORITY_ANSWER_OF_QUESTION( v4_4, v4_7 )
  ENDIF
  IF $v4_5 != QUESTION_ID_DUMMY THEN
    _GET_MAJORITY_ANSWER_OF_QUESTION( v4_5, v4_8 )
  ENDIF

  // メッセージを選択
  SWITCH $v4_2
  CASE RESEARCH_REQ_ID_WB_count            THEN $v4_1 = msg_c03r0101_assistantm_01_24a //「ブラックと　ホワイト　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_WB_time             THEN $v4_1 = msg_c03r0101_assistantm_01_24a //「ブラックと　ホワイト　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $v4_1 = msg_c03r0101_assistantm_01_24b //「えらんだ　さいしょのポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FIRST_POKE_time     THEN $v4_1 = msg_c03r0101_assistantm_01_24b //「えらんだ　さいしょのポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $v4_1 = msg_c03r0101_assistantm_01_24c //「いちばんおおい　プレイじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLAY_TIME_time      THEN $v4_1 = msg_c03r0101_assistantm_01_24c //「いちばんおおい　プレイじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_SEX_count           THEN $v4_1 = msg_c03r0101_assistantm_01_24d //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_SEX_time            THEN $v4_1 = msg_c03r0101_assistantm_01_24d //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_JOB_count           THEN $v4_1 = msg_c03r0101_assistantm_01_24e //「いちばんおおい　しごとは？」( 人数 )
  CASE RESEARCH_REQ_ID_JOB_time            THEN $v4_1 = msg_c03r0101_assistantm_01_24e //「いちばんおおい　しごとは？」( 時間 )
  CASE RESEARCH_REQ_ID_HOBBY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_24f //「いちばんおおい　しゅみは？」( 人数 )
  CASE RESEARCH_REQ_ID_HOBBY_time          THEN $v4_1 = msg_c03r0101_assistantm_01_24f //「いちばんおおい　しゅみは？」( 時間 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $v4_1 = msg_c03r0101_assistantm_01_24g //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
  CASE RESEARCH_REQ_ID_BTL_OR_TRD_time     THEN $v4_1 = msg_c03r0101_assistantm_01_24g //「たいせんと　こうかん　にんきがあるのは？」( 時間 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $v4_1 = msg_c03r0101_assistantm_01_24h //「すきな　ポケモンは？」( 人数 )
  CASE RESEARCH_REQ_ID_FAVORITE_POKE_time  THEN $v4_1 = msg_c03r0101_assistantm_01_24h //「すきな　ポケモンは？」( 時間 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $v4_1 = msg_c03r0101_assistantm_01_24i //「すきな　ポケモンのタイプは？」( 人数 )
  CASE RESEARCH_REQ_ID_POKE_TYPE_time      THEN $v4_1 = msg_c03r0101_assistantm_01_24i //「すきな　ポケモンのタイプは？」( 時間 )
  CASE RESEARCH_REQ_ID_PLACE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_24j //「とかいと　いなか　すみたいのは？」( 人数 )
  CASE RESEARCH_REQ_ID_PLACE_time          THEN $v4_1 = msg_c03r0101_assistantm_01_24j //「とかいと　いなか　すみたいのは？」( 時間 )
  CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $v4_1 = msg_c03r0101_assistantm_01_24k //「だいじにしているものに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PRECIOUS_time       THEN $v4_1 = msg_c03r0101_assistantm_01_24k //「だいじにしているものに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_PARTNER_count       THEN $v4_1 = msg_c03r0101_assistantm_01_24l //「ひとのみりょくに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_PARTNER_time        THEN $v4_1 = msg_c03r0101_assistantm_01_24l //「ひとのみりょくに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SEASON_count        THEN $v4_1 = msg_c03r0101_assistantm_01_24m //「きせつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_SEASON_time         THEN $v4_1 = msg_c03r0101_assistantm_01_24m //「きせつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_ART_count           THEN $v4_1 = msg_c03r0101_assistantm_01_24n //「げいじゅつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_ART_time            THEN $v4_1 = msg_c03r0101_assistantm_01_24n //「げいじゅつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_MUSIC_count         THEN $v4_1 = msg_c03r0101_assistantm_01_24o //「いちばんすきな　おんがくは？」( 人数 )
  CASE RESEARCH_REQ_ID_MUSIC_time          THEN $v4_1 = msg_c03r0101_assistantm_01_24o //「いちばんすきな　おんがくは？」( 時間 )
  CASE RESEARCH_REQ_ID_MOVIE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_24p //「えいぞうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_MOVIE_time          THEN $v4_1 = msg_c03r0101_assistantm_01_24p //「えいぞうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $v4_1 = msg_c03r0101_assistantm_01_24q //「いちばんすきな　がっこうのじかんは？」( 人数 )
  CASE RESEARCH_REQ_ID_SCHOOL_time         THEN $v4_1 = msg_c03r0101_assistantm_01_24q //「いちばんすきな　がっこうのじかんは？」( 時間 )
  CASE RESEARCH_REQ_ID_STUDY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_24r //「べんきょうに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_STUDY_time          THEN $v4_1 = msg_c03r0101_assistantm_01_24r //「べんきょうに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_STORTS_count        THEN $v4_1 = msg_c03r0101_assistantm_01_24s //「いちばんにんきのある　スポーツは？」( 人数 )
  CASE RESEARCH_REQ_ID_STORTS_time         THEN $v4_1 = msg_c03r0101_assistantm_01_24s //「いちばんにんきのある　スポーツは？」( 時間 )
  CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $v4_1 = msg_c03r0101_assistantm_01_24t //「きゅうじつに　ついて」( 人数 )
  CASE RESEARCH_REQ_ID_DAY_OFF_time        THEN $v4_1 = msg_c03r0101_assistantm_01_24t //「きゅうじつに　ついて」( 時間 )
  CASE RESEARCH_REQ_ID_DREAM_count         THEN $v4_1 = msg_c03r0101_assistantm_01_24u //「いちばんなりたいものは？」( 人数 )
  CASE RESEARCH_REQ_ID_DREAM_time          THEN $v4_1 = msg_c03r0101_assistantm_01_24u //「いちばんなりたいものは？」( 時間 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $v4_1 = msg_c03r0101_assistantm_01_24v //「いちばんにんきのある　ジムリーダーは？」( 人数 )
  CASE RESEARCH_REQ_ID_GYM_LEADER_time     THEN $v4_1 = msg_c03r0101_assistantm_01_24v //「いちばんにんきのある　ジムリーダーは？」( 時間 )
  CASE RESEARCH_REQ_ID_FUN_count           THEN $v4_1 = msg_c03r0101_assistantm_01_24w //「ポケモンのおもしろいところは？」( 人数 )
  CASE RESEARCH_REQ_ID_FUN_time            THEN $v4_1 = msg_c03r0101_assistantm_01_24w //「ポケモンのおもしろいところは？」( 時間 )
  DEFAULT _RET
  ENDSWITCH

  // 多数派の回答をワードセットに登録
  IF $v4_3 != QUESTION_ID_DUMMY THEN
    _ANSWER_NAME( 0, v4_6 )
  ENDIF
  IF $v4_4 != QUESTION_ID_DUMMY THEN
    _ANSWER_NAME( 1, v4_7 )
  ENDIF
  IF $v4_5 != QUESTION_ID_DUMMY THEN
    _ANSWER_NAME( 2, v4_8 )
  ENDIF

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v4_1, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET

//----------------------------------------------------------------------
// ◆隊長「まだ調査が終わっていないぞ」
// ◇in  SCWK_TEMP0   調査状況 ( RESEARCH_REQ_STATE_xxxx )
// ◇out SCWK_ANSWER 『はい』or『いいえ』の選択結果
//----------------------------------------------------------------------
LEADER_SAY_You_dont_archieve:
{
  // v4_1 メッセージID
  // v4_2 調査中の依頼ID
  // v4_3 調査中の依頼の調査タイプ
  // v4_4 ノルマ達成不足値
  // v4_5 調査状況

  // 引数を取得
  $v4_5 = $SCWK_TEMP0

  // 調査依頼IDを取得
  _GET_RESEARCH_REQUEST_ID( v4_2 )

  // 調査不足値を取得
  _GET_LACK_FOR_ACHIEVE( v4_4 )

  // 調査不足値をワードセットに登録
  SWITCH $v4_5
  CASE RESEARCH_REQ_STATE_FALSE_NORM_COUNT THEN _NUMBER( 1, v4_4, 3 ) // 人数調査 ⇒ 人数不足
  CASE RESEARCH_REQ_STATE_FALSE_NORM_TIME  THEN _NUMBER( 2, v4_4, 2 ) // 時間調査 ⇒ 時間不足
  CASE RESEARCH_REQ_STATE_FALSE_ZERO_COUNT THEN                       // 時間調査 ⇒ 人数不足
  DEFAULT _RET
  ENDSWITCH

  // メッセージを選択
  SWITCH $v4_5
  CASE RESEARCH_REQ_STATE_FALSE_NORM_COUNT THEN // 人数調査 ⇒ 人数不足

    SWITCH $v4_2 
    CASE RESEARCH_REQ_ID_WB_count            THEN $v4_1 = msg_c03r0101_assistantm_01_21a //「ブラックと　ホワイト　おおいのは？」( 人数 )
    CASE RESEARCH_REQ_ID_FIRST_POKE_count    THEN $v4_1 = msg_c03r0101_assistantm_01_21b //「えらんだ　さいしょのポケモンは？」( 人数 )
    CASE RESEARCH_REQ_ID_PLAY_TIME_count     THEN $v4_1 = msg_c03r0101_assistantm_01_21c //「いちばんおおい　プレイじかんは？」( 人数 )
    CASE RESEARCH_REQ_ID_SEX_count           THEN $v4_1 = msg_c03r0101_assistantm_01_21d //「おとこのこと　おんなのこ　おおいのは？」( 人数 )
    CASE RESEARCH_REQ_ID_JOB_count           THEN $v4_1 = msg_c03r0101_assistantm_01_21e //「いちばんおおい　しごとは？」( 人数 )
    CASE RESEARCH_REQ_ID_HOBBY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_21f //「いちばんおおい　しゅみは？」( 人数 )
    CASE RESEARCH_REQ_ID_BTL_OR_TRD_count    THEN $v4_1 = msg_c03r0101_assistantm_01_21g //「たいせんと　こうかん　にんきがあるのは？」( 人数 )
    CASE RESEARCH_REQ_ID_FAVORITE_POKE_count THEN $v4_1 = msg_c03r0101_assistantm_01_21h //「すきな　ポケモンは？」( 人数 )
    CASE RESEARCH_REQ_ID_POKE_TYPE_count     THEN $v4_1 = msg_c03r0101_assistantm_01_21i //「すきな　ポケモンのタイプは？」( 人数 )
    CASE RESEARCH_REQ_ID_PLACE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_21j //「とかいと　いなか　すみたいのは？」( 人数 )
    CASE RESEARCH_REQ_ID_PRECIOUS_count      THEN $v4_1 = msg_c03r0101_assistantm_01_21k //「だいじにしているものに　ついて」( 人数 )
    CASE RESEARCH_REQ_ID_PARTNER_count       THEN $v4_1 = msg_c03r0101_assistantm_01_21l //「ひとのみりょくに　ついて」( 人数 )
    CASE RESEARCH_REQ_ID_SEASON_count        THEN $v4_1 = msg_c03r0101_assistantm_01_21m //「きせつに　ついて」( 人数 )
    CASE RESEARCH_REQ_ID_ART_count           THEN $v4_1 = msg_c03r0101_assistantm_01_21n //「げいじゅつに　ついて」( 人数 )
    CASE RESEARCH_REQ_ID_MUSIC_count         THEN $v4_1 = msg_c03r0101_assistantm_01_21o //「いちばんすきな　おんがくは？」( 人数 )
    CASE RESEARCH_REQ_ID_MOVIE_count         THEN $v4_1 = msg_c03r0101_assistantm_01_21p //「えいぞうに　ついて」( 人数 )
    CASE RESEARCH_REQ_ID_SCHOOL_count        THEN $v4_1 = msg_c03r0101_assistantm_01_21q //「いちばんすきな　がっこうのじかんは？」( 人数 )
    CASE RESEARCH_REQ_ID_STUDY_count         THEN $v4_1 = msg_c03r0101_assistantm_01_21r //「べんきょうに　ついて」( 人数 )
    CASE RESEARCH_REQ_ID_STORTS_count        THEN $v4_1 = msg_c03r0101_assistantm_01_21s //「いちばんにんきのある　スポーツは？」( 人数 )
    CASE RESEARCH_REQ_ID_DAY_OFF_count       THEN $v4_1 = msg_c03r0101_assistantm_01_21t //「きゅうじつに　ついて」( 人数 )
    CASE RESEARCH_REQ_ID_DREAM_count         THEN $v4_1 = msg_c03r0101_assistantm_01_21u //「いちばんなりたいものは？」( 人数 )
    CASE RESEARCH_REQ_ID_GYM_LEADER_count    THEN $v4_1 = msg_c03r0101_assistantm_01_21v //「いちばんにんきのある　ジムリーダーは？」( 人数 )
    CASE RESEARCH_REQ_ID_FUN_count           THEN $v4_1 = msg_c03r0101_assistantm_01_21w //「ポケモンのおもしろいところは？」( 人数 ) 
    DEFAULT _RET
    ENDSWITCH

  CASE RESEARCH_REQ_STATE_FALSE_NORM_TIME  THEN // 時間調査 ⇒ 時間不足

    SWITCH $v4_2 
    CASE RESEARCH_REQ_ID_WB_time            THEN $v4_1 = msg_c03r0101_assistantm_01_20a //「ブラックと　ホワイト　おおいのは？」( 時間 )
    CASE RESEARCH_REQ_ID_FIRST_POKE_time    THEN $v4_1 = msg_c03r0101_assistantm_01_20b //「えらんだ　さいしょのポケモンは？」( 時間 ) 
    CASE RESEARCH_REQ_ID_PLAY_TIME_time     THEN $v4_1 = msg_c03r0101_assistantm_01_20c //「いちばんおおい　プレイじかんは？」( 時間 )
    CASE RESEARCH_REQ_ID_SEX_time           THEN $v4_1 = msg_c03r0101_assistantm_01_20d //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
    CASE RESEARCH_REQ_ID_JOB_time           THEN $v4_1 = msg_c03r0101_assistantm_01_20e //「いちばんおおい　しごとは？」( 時間 )
    CASE RESEARCH_REQ_ID_HOBBY_time         THEN $v4_1 = msg_c03r0101_assistantm_01_20f //「いちばんおおい　しゅみは？」( 時間 )
    CASE RESEARCH_REQ_ID_BTL_OR_TRD_time    THEN $v4_1 = msg_c03r0101_assistantm_01_20g //「たいせんと　こうかん　にんきがあるのは？」( 時間 ) 
    CASE RESEARCH_REQ_ID_FAVORITE_POKE_time THEN $v4_1 = msg_c03r0101_assistantm_01_20h //「すきな　ポケモンは？」( 時間 )HEN 
    CASE RESEARCH_REQ_ID_POKE_TYPE_time     THEN $v4_1 = msg_c03r0101_assistantm_01_20i //「すきな　ポケモンのタイプは？」( 時間 )
    CASE RESEARCH_REQ_ID_PLACE_time         THEN $v4_1 = msg_c03r0101_assistantm_01_20j //「とかいと　いなか　すみたいのは？」( 時間 )
    CASE RESEARCH_REQ_ID_PRECIOUS_time      THEN $v4_1 = msg_c03r0101_assistantm_01_20k //「だいじにしているものに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_PARTNER_time       THEN $v4_1 = msg_c03r0101_assistantm_01_20l //「ひとのみりょくに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_SEASON_time        THEN $v4_1 = msg_c03r0101_assistantm_01_20m //「きせつに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_ART_time           THEN $v4_1 = msg_c03r0101_assistantm_01_20n //「げいじゅつに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_MUSIC_time         THEN $v4_1 = msg_c03r0101_assistantm_01_20o //「いちばんすきな　おんがくは？」( 時間 )
    CASE RESEARCH_REQ_ID_MOVIE_time         THEN $v4_1 = msg_c03r0101_assistantm_01_20p //「えいぞうに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_SCHOOL_time        THEN $v4_1 = msg_c03r0101_assistantm_01_20q //「いちばんすきな　がっこうのじかんは？」( 時間 )
    CASE RESEARCH_REQ_ID_STUDY_time         THEN $v4_1 = msg_c03r0101_assistantm_01_20r //「べんきょうに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_STORTS_time        THEN $v4_1 = msg_c03r0101_assistantm_01_20s //「いちばんにんきのある　スポーツは？」( 時間 )
    CASE RESEARCH_REQ_ID_DAY_OFF_time       THEN $v4_1 = msg_c03r0101_assistantm_01_20t //「きゅうじつに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_DREAM_time         THEN $v4_1 = msg_c03r0101_assistantm_01_20u //「いちばんなりたいものは？」( 時間 )
    CASE RESEARCH_REQ_ID_GYM_LEADER_time    THEN $v4_1 = msg_c03r0101_assistantm_01_20v //「いちばんにんきのある　ジムリーダーは？」( 時間 ) 
    CASE RESEARCH_REQ_ID_FUN_time           THEN $v4_1 = msg_c03r0101_assistantm_01_20w //「ポケモンのおもしろいところは？」( 時間 )
    DEFAULT _RET
    ENDSWITCH

  CASE RESEARCH_REQ_STATE_FALSE_ZERO_COUNT THEN // 時間調査 ⇒ 人数不足

    SWITCH $v4_2 
    CASE RESEARCH_REQ_ID_WB_time            THEN $v4_1 = msg_c03r0101_assistantm_01_33_a //「ブラックと　ホワイト　おおいのは？」( 時間 )
    CASE RESEARCH_REQ_ID_FIRST_POKE_time    THEN $v4_1 = msg_c03r0101_assistantm_01_33b //「えらんだ　さいしょのポケモンは？」( 時間 ) 
    CASE RESEARCH_REQ_ID_PLAY_TIME_time     THEN $v4_1 = msg_c03r0101_assistantm_01_33c //「いちばんおおい　プレイじかんは？」( 時間 )
    CASE RESEARCH_REQ_ID_SEX_time           THEN $v4_1 = msg_c03r0101_assistantm_01_33d //「おとこのこと　おんなのこ　おおいのは？」( 時間 )
    CASE RESEARCH_REQ_ID_JOB_time           THEN $v4_1 = msg_c03r0101_assistantm_01_33e //「いちばんおおい　しごとは？」( 時間 )
    CASE RESEARCH_REQ_ID_HOBBY_time         THEN $v4_1 = msg_c03r0101_assistantm_01_33f //「いちばんおおい　しゅみは？」( 時間 )
    CASE RESEARCH_REQ_ID_BTL_OR_TRD_time    THEN $v4_1 = msg_c03r0101_assistantm_01_33g //「たいせんと　こうかん　にんきがあるのは？」( 時間 ) 
    CASE RESEARCH_REQ_ID_FAVORITE_POKE_time THEN $v4_1 = msg_c03r0101_assistantm_01_33h //「すきな　ポケモンは？」( 時間 )HEN 
    CASE RESEARCH_REQ_ID_POKE_TYPE_time     THEN $v4_1 = msg_c03r0101_assistantm_01_33i //「すきな　ポケモンのタイプは？」( 時間 )
    CASE RESEARCH_REQ_ID_PLACE_time         THEN $v4_1 = msg_c03r0101_assistantm_01_33j //「とかいと　いなか　すみたいのは？」( 時間 )
    CASE RESEARCH_REQ_ID_PRECIOUS_time      THEN $v4_1 = msg_c03r0101_assistantm_01_33k //「だいじにしているものに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_PARTNER_time       THEN $v4_1 = msg_c03r0101_assistantm_01_33l //「ひとのみりょくに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_SEASON_time        THEN $v4_1 = msg_c03r0101_assistantm_01_33m //「きせつに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_ART_time           THEN $v4_1 = msg_c03r0101_assistantm_01_33n //「げいじゅつに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_MUSIC_time         THEN $v4_1 = msg_c03r0101_assistantm_01_33o //「いちばんすきな　おんがくは？」( 時間 )
    CASE RESEARCH_REQ_ID_MOVIE_time         THEN $v4_1 = msg_c03r0101_assistantm_01_33p //「えいぞうに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_SCHOOL_time        THEN $v4_1 = msg_c03r0101_assistantm_01_33q //「いちばんすきな　がっこうのじかんは？」( 時間 )
    CASE RESEARCH_REQ_ID_STUDY_time         THEN $v4_1 = msg_c03r0101_assistantm_01_33r //「べんきょうに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_STORTS_time        THEN $v4_1 = msg_c03r0101_assistantm_01_33s //「いちばんにんきのある　スポーツは？」( 時間 )
    CASE RESEARCH_REQ_ID_DAY_OFF_time       THEN $v4_1 = msg_c03r0101_assistantm_01_33t //「きゅうじつに　ついて」( 時間 )
    CASE RESEARCH_REQ_ID_DREAM_time         THEN $v4_1 = msg_c03r0101_assistantm_01_33u //「いちばんなりたいものは？」( 時間 )
    CASE RESEARCH_REQ_ID_GYM_LEADER_time    THEN $v4_1 = msg_c03r0101_assistantm_01_33v //「いちばんにんきのある　ジムリーダーは？」( 時間 ) 
    CASE RESEARCH_REQ_ID_FUN_time           THEN $v4_1 = msg_c03r0101_assistantm_01_33w //「ポケモンのおもしろいところは？」( 時間 )
    DEFAULT _RET
    ENDSWITCH

  DEFAULT _RET
  ENDSWITCH

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v4_1, SCWK_TARGET_OBJID, POS_DOWN )

  //『はい』『いいえ』選択
  $SCWK_TEMP0 = SCR_NO
  _CALL YES_NO_WIN_EX

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE()        
}
_RET 



//======================================================================
// ■アンケート隊員サブルーチンリスト
//======================================================================
//----------------------------------------------------------------------
// layer 5
//----------------------------------------------------------------------
// ■シーケンス
// MEMBER_Q_MAIN ◆アンケート隊員メイン
//----------------------------------------------------------------------
// layer 4
//----------------------------------------------------------------------
// ■シーケンス
// QUESTIONNAIRE_SELECT ◆回答するアンケートを選択する
// ANSWER_QUESTION_1    ◆アンケートの質問１に答える
// ANSWER_QUESTION_2    ◆アンケートの質問２に答える
// ANSWER_QUESTION_3    ◆アンケートの質問３に答える
//----------------------------------------------------------------------
// layer 3
//----------------------------------------------------------------------
// ■台詞
// MEMBER_Q_SAY_11 ◆アンケート隊員「〜質問１〜」
// MEMBER_Q_SAY_12 ◆アンケート隊員「〜質問２〜」
// MEMBER_Q_SAY_13 ◆アンケート隊員「〜質問３〜」
//----------------------------------------------------------------------
// layer 2
//----------------------------------------------------------------------
// ■メニュー表示
// ANSWER_MENU ◆アンケートの回答メニューを表示する
// ■チェック
// CHECK_ALL_QUESTIONNAIRE_FINISH ◆全てのアンケートに答えたかどうかをチェックする
// ■台詞
// MEMBER_Q_SAY_7  ◆アンケート隊員「答えるアンケートを選んでくれる？」
// MEMBER_Q_SAY_21 ◆アンケート隊員「これで残りのアンケートは…」
//----------------------------------------------------------------------
// layer 1
//----------------------------------------------------------------------
// ■シーケンス
// QUESTIONNAIRE_ITEM_GET ◆お礼アイテム入手
// ■機能
// FINISH_QUESTIONNAIRE ◆アンケート回答済みフラグをセットする
// ■メニュー表示
// QUESTIONNAIRE_MENU ◆アンケート選択メニューを表示する
// ■チェック
// CHECK_QUESTIONNAIRE_FINISH ◆指定したアンケートが回答済みかどうかをチェックする
// ■取得
// GET_REST_QUESTIONNAIRE_NUM ◆残りアンケート数を取得する
// GET_BLANK_QUESTIONNAIRE_ID ◆答えていないアンケートのIDを取得する
// GET_QUESTIONNAIRE_QUESTION ◆アンケートの質問のIDを取得する
// GET_ANSWER_RANGE ◆指定した質問の回答IDを取得する
// ■システムメッセージ
// SYSTEM_MSG_1 ◆システム「調査レーダーに〜が増えた！」
// ■台詞
// MEMBER_Q_SAY_1  ◆アンケート隊員「ここはすれ違い調査隊本部よ」
// MEMBER_Q_SAY_2  ◆アンケート隊員「おつかれさま」
// MEMBER_Q_SAY_3  ◆アンケート隊員「そうだアナタに頼みたい事があるの」
// MEMBER_Q_SAY_4  ◆アンケート隊員「またアナタにアンケートをお願いしたいんだけど…」
// MEMBER_Q_SAY_5  ◆アンケート隊員「しょうがないわね」
// MEMBER_Q_SAY_6  ◆アンケート隊員「答えたアンケートにもう一度答える？」
// MEMBER_Q_SAY_8  ◆アンケート隊員「このアンケートでいいのね？」
// MEMBER_Q_SAY_9  ◆アンケート隊員「回答を変えたくなったら言ってね」
// MEMBER_Q_SAY_10 ◆アンケート隊員「今回のアンケートは〜についてよ」
// MEMBER_Q_SAY_14 ◆アンケート隊員「なるほど なるほど」
// MEMBER_Q_SAY_15 ◆アンケート隊員「はい おしまい」
// MEMBER_Q_SAY_16 ◆アンケート隊員「このアンケート用紙あげるわ」
// MEMBER_Q_SAY_18 ◆アンケート隊員「これはアンケートに答えてくれたお礼よ」
// MEMBER_Q_SAY_19 ◆アンケート隊員「これでアンケートは全部おわり」
// MEMBER_Q_SAY_20 ◆アンケート隊員「アンケートは何度も答えられるから…」
// MEMBER_Q_SAY_22 ◆アンケート隊員「アンケートに協力してね！」
// MEMBER_Q_SAY_23 ◆アンケート隊員「ちょっと待って！」
// MEMBER_Q_SAY_24 ◆アンケート隊員「他のアンケートもやらない？」
//----------------------------------------------------------------------
// layer 0
//----------------------------------------------------------------------
// ■アニメーション
// ANIME_member_q_call_player      ◆アンケート隊員: プレイヤーを呼び止める
// ANIME_player_turn               ◆プレイヤー: 振り向く
// ANIME_player_walk_to_member_q_1 ◆プレイヤー: アンケート隊員まで歩く
// ANIME_player_walk_to_member_q_2 ◆プレイヤー: アンケート隊員まで歩く
// ANIME_player_walk_to_member_q_3 ◆プレイヤー: アンケート隊員まで歩く
// ANIME_member_q_turn             ◆アンケート隊員: プレイヤーの方を向く


//======================================================================
// ■強制アンケートイベント
//======================================================================
EVENT_START ev_force_question
{
  // アンケート隊員: プレイヤーを呼び止める
  _OBJ_ANIME( C03R0101_WOMAN2_01, ANIME_member_q_call_player )
  _OBJ_ANIME_WAIT()

  // アンケート隊員「ちょっと待って！」
  _CALL MEMBER_Q_SAY_23

  // プレイヤー: 振り向く
  _OBJ_ANIME( MMDL_ID_PLAYER, ANIME_player_turn )
  _OBJ_ANIME_WAIT()

  // プレイヤー座標を取得
  _OBJ_POS_GET( MMDL_ID_PLAYER, SCWK_TEMP0, SCWK_TEMP1 )

  // プレイヤー: アンケート隊員まで歩く
  SWITCH $SCWK_TEMP0
  CASE 6 THEN _OBJ_ANIME( MMDL_ID_PLAYER, ANIME_player_walk_to_member_q_1 )
  CASE 7 THEN _OBJ_ANIME( MMDL_ID_PLAYER, ANIME_player_walk_to_member_q_2 )
  CASE 8 THEN _OBJ_ANIME( MMDL_ID_PLAYER, ANIME_player_walk_to_member_q_3 )
  DEFAULT EVENT_END
  ENDSWITCH 
  _OBJ_ANIME_WAIT() // アニメ終了を待つ

  // アンケート隊員: プレイヤーの方を向く
  _OBJ_ANIME( C03R0101_WOMAN2_01, ANIME_member_q_turn )
  _OBJ_ANIME_WAIT()

  // アンケート隊員メインシーケンスへ
  _CALL MEMBER_Q_MAIN
}
EVENT_END

//======================================================================
// ■アンケート隊員メイン
//======================================================================
EVENT_START	ev_member_question
{
  // 会話スタート
  _TALK_OBJ_START()

  _FLAG_CHECK( FE_RES_LEADER_FIRSTTALK, SCWK_ANSWER ) // 隊員になっているか？

  // 隊員になっていない場合
  IF $SCWK_ANSWER == FALSE THEN
    _CALL MEMBER_Q_SAY_1 // アンケート隊員「ここはすれ違い調査隊本部よ」
    EVENT_END            // イベント終了
  ENDIF

  _CALL MEMBER_Q_SAY_2 // アンケート隊員「おつかれさま」

  // アンケート隊員メインシーケンスへ
  _CALL MEMBER_Q_MAIN
}
EVENT_END

//----------------------------------------------------------------------
// ◆アンケート隊員メイン
//----------------------------------------------------------------------
MEMBER_Q_MAIN:
{
  // v5_1 アンケートID
  // v5_2 ループフラグ

  _FLAG_CHECK( FE_RES_QUESTION_FIRSTTALK, SCWK_ANSWER ) // 初回会話かどうか？

  // 初回会話
  IF $SCWK_ANSWER == FALSE THEN
    _FLAG_SET( FE_RES_QUESTION_FIRSTTALK ) // 初回会話フラグを立てる
    _CALL SET_FORCE_QUESTION_EVENT_OFF     // 強制アンケートイベントを無効にする
    _CALL MEMBER_Q_SAY_3                   // アンケート隊員「そうだアナタに頼みたい事があるの」
  // 通常会話
  ELSE
    _CALL MEMBER_Q_SAY_4 // アンケート隊員「またアナタにアンケートをお願いしたいんだけど…」⇒ 『はい』or『いいえ』
    //『いいえ』
    IF $SCWK_ANSWER == SCR_NO THEN
      _CALL MEMBER_Q_SAY_5  // アンケート隊員「しょうがないわね」
      _RET                  // イベント終了
    ENDIF
  ENDIF 

  // 全てのアンケートに答えるか, キャンセルするまで繰り返す
  $v5_2 = TRUE
  WHILE $v5_2 == TRUE

    _CALL QUESTIONNAIRE_SELECT // 回答するアンケートを選択
    $v5_1 = $SCWK_ANSWER       // 選択したアンケートIDを取得
  
    // アンケート選択 ⇒ キャンセル
    IF $v5_1 == RESEARCH_QUESTIONNAIRE_ID_DUMMY THEN
      _CALL MEMBER_Q_SAY_9 // アンケート隊員「回答を変えたくなったら言ってね」
      _RET                 // イベント終了
    ENDIF 
  
    $SCWK_TEMP0 = $v5_1     // アンケート隊員「今回のアンケートは〜についてよ」
    _CALL MEMBER_Q_SAY_10   // 
    $SCWK_TEMP0 = $v5_1     // 質問１に回答
    _CALL ANSWER_QUESTION_1 //
    $SCWK_TEMP0 = $v5_1     // 質問２に回答
    _CALL ANSWER_QUESTION_2 //
    $SCWK_TEMP0 = $v5_1     // 質問３に回答 
    _CALL ANSWER_QUESTION_3 //
    _CALL MEMBER_Q_SAY_15   // アンケート隊員「はい おしまい」
  
    // 以前にも答えたことがある
    $SCWK_TEMP0 = $v5_1
    _CALL CHECK_QUESTIONNAIRE_FINISH
    IF $SCWK_ANSWER == TRUE THEN
      _CALL MEMBER_Q_SAY_20 // アンケート隊員「アンケートは何度も答えられるから…」
      _RET                  // イベント終了
    ENDIF
  
    _CALL MEMBER_Q_SAY_16        // アンケート隊員「このアンケート用紙あげるわ」
    _CALL SYSTEM_MSG_1           // システム「調査レーダーに〜が増えた！」
    $SCWK_TEMP0 = $v5_1          // アンケート回答済みフラグをセットする
    _CALL FINISH_QUESTIONNAIRE   //
  
    // 全てのアンケートに回答
    _CALL CHECK_ALL_QUESTIONNAIRE_FINISH
    IF $SCWK_ANSWER == TRUE THEN
      _CALL MEMBER_Q_SAY_19        // アンケート隊員「これでアンケートは全部おわり」
      _CALL MEMBER_Q_SAY_18        // アンケート隊員「これはアンケートに答えてくれたお礼よ」
      $SCWK_TEMP0 = $v5_1          // お礼アイテム入手
      _CALL QUESTIONNAIRE_ITEM_GET //
      _CALL MEMBER_Q_SAY_20        // アンケート隊員「アンケートは何度も答えられるから…」
      _RET                         // イベント終了
    ENDIF
  
    _CALL MEMBER_Q_SAY_21 // アンケート隊員「これで残りのアンケートは…」
    _CALL MEMBER_Q_SAY_24 // アンケート隊員「他のアンケートもやらない？」

    //『いいえ』
    IF $SCWK_ANSWER == SCR_NO THEN
      $v5_2 = FALSE // ループを抜ける
    ENDIF

  ENDWHILE

  _CALL MEMBER_Q_SAY_22 // アンケート隊員「アンケートに協力してね！」
}
_RET

//----------------------------------------------------------------------
// ◆回答するアンケートを選択する
// ◇out SCWK_ANSWER 回答するアンケートのID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//                  『 回答しない』を選択した場合, RESEARCH_QUESTIONNAIRE_ID_DUMMY
//----------------------------------------------------------------------
QUESTIONNAIRE_SELECT:
{
  // v3_1 選択したアンケートID

  _CALL CHECK_ALL_QUESTIONNAIRE_FINISH // 答えていないアンケートの有無をチェック

  // 回答していないアンケートがある
  IF $SCWK_ANSWER == FALSE THEN
    _CALL GET_BLANK_QUESTIONNAIRE_ID // 未回答アンケートのIDを返す
    _RET                             //
  ENDIF 

  _CALL MEMBER_Q_SAY_6 // アンケート隊員「答えたアンケートにもう一度答える？」⇒『はい』or『いいえ』

  //『いいえ』
  IF $SCWK_ANSWER == SCR_NO THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_DUMMY
    _RET
  ENDIF

  _CALL MEMBER_Q_SAY_7 // アンケート隊員「答えるアンケートを選んでくれる？」
  $v3_1 = $SCWK_ANSWER // 選択結果を取得

  //『やめる』
  IF $v3_1 == RESEARCH_QUESTIONNAIRE_ID_DUMMY THEN 
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_DUMMY
    _RET
  ENDIF

  //『Bキャンセル』
  IF $v3_1 == EV_WIN_B_CANCEL THEN 
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_DUMMY
    _RET
  ENDIF

  _CALL MEMBER_Q_SAY_8 // アンケート隊員「このアンケートでいいのね？」⇒『はい』or『いいえ』

  //『いいえ』
  IF $SCWK_ANSWER == SCR_NO THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_DUMMY
    _RET
  ENDIF

  $SCWK_ANSWER = $v3_1 // 選択したアンケートのIDを返す
}
_RET
//----------------------------------------------------------------------
// ◆アンケートの質問1に答える
// ◇in  SCWK_TEMP0  アンケートID ( QUESTIONNAIRE_ID_xxxx )
// ◇out SCWK_ANSWER アンケートに答えた場合 TRUE
//----------------------------------------------------------------------
ANSWER_QUESTION_1:
{
  // v4_1 アンケートID
  // v4_2 質問ID
  // v4_3 次の質問ID

  // アンケートIDを取得
  $v4_1 = $SCWK_TEMP0

  // 質問IDを取得
  $SCWK_TEMP0 = $v4_1
  _CALL GET_QUESTIONNAIRE_QUESTION
  $v4_2 = $SCWK_TEMP1
  $v4_3 = $SCWK_TEMP2

  // 質問が無い
  IF $v4_2 == QUESTION_ID_DUMMY THEN
    $SCWK_ANSWER = FALSE
    _RET
  ENDIF

  // アンケート隊員「〜質問１〜」⇒ 回答を選択
  $SCWK_TEMP0 = $v4_1
  $SCWK_TEMP1 = $v4_2
  _CALL MEMBER_Q_SAY_11

  // セーブデータを更新
  _SET_MY_ANSWER( v4_2, SCWK_ANSWER )

  // 趣味を登録
  IF $v4_1 == RESEARCH_QUESTIONNAIRE_ID_YOU THEN
    _UN_SET_MY_FAVORITE( SCWK_ANSWER )
  ENDIF

  // 次の質問がある
  IF $v4_3 != QUESTION_ID_DUMMY THEN
    _CALL MEMBER_Q_SAY_14   // アンケート隊員「なるほど なるほど 」
  ENDIF

  // 戻り値をセット
  $SCWK_ANSWER = TRUE
}
_RET
//----------------------------------------------------------------------
// ◆アンケートの質問2に答える
// ◇in  SCWK_TEMP0  アンケートID ( QUESTIONNAIRE_ID_xxxx )
// ◇out SCWK_ANSWER アンケートに答えた場合 TRUE
//----------------------------------------------------------------------
ANSWER_QUESTION_2:
{
  // v4_1 アンケートID
  // v4_2 質問ID
  // v4_3 次の質問ID

  // アンケートIDを取得
  $v4_1 = $SCWK_TEMP0

  // 質問IDを取得
  $SCWK_TEMP0 = $v4_1
  _CALL GET_QUESTIONNAIRE_QUESTION
  $v4_2 = $SCWK_TEMP2
  $v4_3 = $SCWK_TEMP3

  // 質問が無い
  IF $v4_2 == QUESTION_ID_DUMMY THEN
    $SCWK_ANSWER = FALSE
    _RET
  ENDIF

  // アンケート隊員「〜質問２〜」⇒ 回答を選択
  $SCWK_TEMP0 = $v4_1
  $SCWK_TEMP1 = $v4_2
  _CALL MEMBER_Q_SAY_12

  // セーブデータを更新
  _SET_MY_ANSWER( v4_2, SCWK_ANSWER )

  // 次の質問がある
  IF $v4_3 != QUESTION_ID_DUMMY THEN
    _CALL MEMBER_Q_SAY_14   // アンケート隊員「なるほど なるほど 」
  ENDIF

  // 戻り値をセット
  $SCWK_ANSWER = TRUE
}
_RET
//----------------------------------------------------------------------
// ◆アンケートの質問3に答える
// ◇in  SCWK_TEMP0  アンケートID ( QUESTIONNAIRE_ID_xxxx )
// ◇out SCWK_ANSWER アンケートに答えた場合 TRUE
//----------------------------------------------------------------------
ANSWER_QUESTION_3:
{
  // v4_1 アンケートID
  // v4_2 質問ID

  // アンケートIDを取得
  $v4_1 = $SCWK_TEMP0

  // 質問IDを取得
  $SCWK_TEMP0 = $v4_1
  _CALL GET_QUESTIONNAIRE_QUESTION
  $v4_2 = $SCWK_TEMP3

  // 質問が無い
  IF $v4_2 == QUESTION_ID_DUMMY THEN
    $SCWK_ANSWER = FALSE
    _RET
  ENDIF

  // アンケート隊員「〜質問３〜」⇒ 回答を選択
  $SCWK_TEMP0 = $v4_1
  $SCWK_TEMP1 = $v4_2
  _CALL MEMBER_Q_SAY_13 

  // セーブデータを更新
  _SET_MY_ANSWER( v4_2, SCWK_ANSWER )

  // 戻り値をセット
  $SCWK_ANSWER = TRUE
}
_RET 
//----------------------------------------------------------------------
// ◆お礼アイテム入手
// ◇in SCWK_TEMP0 回答したアンケートのID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//----------------------------------------------------------------------
QUESTIONNAIRE_ITEM_GET:
{
  // v1_1 入手アイテム ( ITEM_xxxx )

  // 入手アイテムを決定
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『どんなひとが　いるか』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『すきなポケモン』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『みんなの　りそう』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『すきなひと』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『みんなの　このみ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『みんなの　しゅみ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『がっこうせいかつ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『どんな　あそびがすきか』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN $v1_1 = ITEM_SAIKOSOODA // 調査隊アンケート『ポケモン』に回答
  DEFAULT _RET
  ENDSWITCH

  // アイテム入手イベント
  _ITEM_EVENT_KEYWAIT( v1_1, 1 )
}
_RET
//----------------------------------------------------------------------
// ◆アンケート回答完了処理
// ◇in SCWK_TEMP0 回答したアンケートのID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//----------------------------------------------------------------------
FINISH_QUESTIONNAIRE:
{
  // イベントフラグを立てる
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN _FLAG_SET( FE_RES_QUESTION_YOU      ) // 調査隊アンケート『どんなひとが　いるか』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN _FLAG_SET( FE_RES_QUESTION_FAVARITE ) // 調査隊アンケート『すきなポケモン』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN _FLAG_SET( FE_RES_QUESTION_WISH     ) // 調査隊アンケート『みんなの　りそう』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN _FLAG_SET( FE_RES_QUESTION_PARTNER  ) // 調査隊アンケート『すきなひと』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN _FLAG_SET( FE_RES_QUESTION_TASTE    ) // 調査隊アンケート『みんなの　このみ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN _FLAG_SET( FE_RES_QUESTION_HOBBY    ) // 調査隊アンケート『みんなの　しゅみ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN _FLAG_SET( FE_RES_QUESTION_SCHOOL   ) // 調査隊アンケート『がっこうせいかつ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN _FLAG_SET( FE_RES_QUESTION_PLAY     ) // 調査隊アンケート『どんな　あそびがすきか』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN _FLAG_SET( FE_RES_QUESTION_POKEMON  ) // 調査隊アンケート『ポケモン』に回答
  DEFAULT _RET
  ENDSWITCH
}
_RET 
//----------------------------------------------------------------------
// ◆アンケート選択メニューを表示する
// ◇out SCWK_ANSWER 選択したアンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//                   『やめる』を選んだ場合 RESEARCH_QUESTIONNAIRE_ID_DUMMY
//----------------------------------------------------------------------
QUESTIONNAIRE_MENU:
{
  _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, SCWK_ANSWER )
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04a, RESEARCH_QUESTIONNAIRE_ID_YOU           ) // どんなひとが　いるか
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04b, RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE ) // すきなポケモン
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04c, RESEARCH_QUESTIONNAIRE_ID_WISH          ) // みんなの　りそう
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04d, RESEARCH_QUESTIONNAIRE_ID_PARTNER       ) // すきなひと
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04e, RESEARCH_QUESTIONNAIRE_ID_TASTE         ) // みんなの　このみ
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04f, RESEARCH_QUESTIONNAIRE_ID_HOBBY         ) // みんなの　しゅみ
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04g, RESEARCH_QUESTIONNAIRE_ID_SCHOOL        ) // がっこうせいかつ
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04h, RESEARCH_QUESTIONNAIRE_ID_PLAY          ) // どんな　あそびがすきか
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_04i, RESEARCH_QUESTIONNAIRE_ID_POKEMON       ) // ポケモン
  _BMPMENU_MAKE_LIST( msg_c03r0101__choice_03x, RESEARCH_QUESTIONNAIRE_ID_DUMMY         ) // やめる
  _BMPMENU_START()
}
_RET
//----------------------------------------------------------------------
// ◆アンケートの回答メニューを表示する
// ◇in  SCWK_TEMP0  回答メニューを表示する質問のID ( QUESTION_ID_xxxx )
// ◇out SCWK_ANSWER 何番目の回答を選択したか
//----------------------------------------------------------------------
ANSWER_MENU:
{
  // v2_1 最初の回答ID
  // v2_2 最後の回答ID
  // v2_3 ループ変数 ( 回答ID )
  // v2_4 ループ変数 ( 何番目の回答か )

  // 回答IDの範囲を取得
  _CALL GET_ANSWER_RANGE
  $v2_1 = $SCWK_TEMP1
  $v2_2 = $SCWK_TEMP2

  // メニューを表示
  _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 0, SCWK_ANSWER )
  $v2_3 = $v2_1
  $v2_4 = 1
  WHILE $v2_3 <= $v2_2
    _ANSWER_NAME( 0, v2_3 )
    _BMPMENU_MAKE_LIST( msg_c03r0101_answer, v2_4 )
    _ASM_ADD_WK v2_3, 1
    _ASM_ADD_WK v2_4, 1
  ENDWHILE
  _BMPMENU_START()
}
_RET
//----------------------------------------------------------------------
// ◆全てのアンケートに答えたかどうかをチェックする
// ◇out SCWK_ANSWER すべてのアンケートに答えた場合 TRUE
//----------------------------------------------------------------------
CHECK_ALL_QUESTIONNAIRE_FINISH:
{
  // 残りアンケートの数をチェック
  _CALL GET_REST_QUESTIONNAIRE_NUM

  IF $SCWK_ANSWER == 0 THEN
    $SCWK_ANSWER = TRUE // 全アンケートに回答済み
  ELSE
    $SCWK_ANSWER = FALSE // 未回答アンケートあり
  ENDIF
}
_RET
//----------------------------------------------------------------------
// ◆指定したアンケートが回答済みかどうかをチェックする
// ◇in  SCWK_TEMP0  チェックするアンケートのID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
// ◇out SCWK_ANSWER 回答済みの場合 TRUE
//----------------------------------------------------------------------
CHECK_QUESTIONNAIRE_FINISH:
{
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN _FLAG_CHECK( FE_RES_QUESTION_YOU,      SCWK_ANSWER ) // 調査隊アンケート『どんなひとが　いるか』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN _FLAG_CHECK( FE_RES_QUESTION_FAVARITE, SCWK_ANSWER ) // 調査隊アンケート『すきなポケモン』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN _FLAG_CHECK( FE_RES_QUESTION_WISH,     SCWK_ANSWER ) // 調査隊アンケート『みんなの　りそう』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN _FLAG_CHECK( FE_RES_QUESTION_PARTNER,  SCWK_ANSWER ) // 調査隊アンケート『すきなひと』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN _FLAG_CHECK( FE_RES_QUESTION_TASTE,    SCWK_ANSWER ) // 調査隊アンケート『みんなの　このみ』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN _FLAG_CHECK( FE_RES_QUESTION_HOBBY,    SCWK_ANSWER ) // 調査隊アンケート『みんなの　しゅみ』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN _FLAG_CHECK( FE_RES_QUESTION_SCHOOL,   SCWK_ANSWER ) // 調査隊アンケート『がっこうせいかつ』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN _FLAG_CHECK( FE_RES_QUESTION_PLAY,     SCWK_ANSWER ) // 調査隊アンケート『どんな　あそびがすきか』に回答 */
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN _FLAG_CHECK( FE_RES_QUESTION_POKEMON,  SCWK_ANSWER ) // 調査隊アンケート『ポケモン』に回答 */
  DEFAULT _RET
  ENDSWITCH
}
_RET
//----------------------------------------------------------------------
// ◆残りアンケート数を取得する
// ◇out SCWK_ANSWER 残りアンケート数
//----------------------------------------------------------------------
GET_REST_QUESTIONNAIRE_NUM:
{
  // v1_1 未回答アンケートの数
  $v1_1 = 0

  // どんなひとが　いるか
  _FLAG_CHECK( FE_RES_QUESTION_YOU, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // すきなポケモン
  _FLAG_CHECK( FE_RES_QUESTION_FAVARITE, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // みんなの　りそう
  _FLAG_CHECK( FE_RES_QUESTION_WISH, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // すきなひと
  _FLAG_CHECK( FE_RES_QUESTION_PARTNER, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // みんなの　このみ
  _FLAG_CHECK( FE_RES_QUESTION_TASTE, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // みんなの　しゅみ
  _FLAG_CHECK( FE_RES_QUESTION_HOBBY, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // がっこうせいかつ
  _FLAG_CHECK( FE_RES_QUESTION_SCHOOL, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // どんな　あそびがすきか
  _FLAG_CHECK( FE_RES_QUESTION_PLAY, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF
  // ポケモン
  _FLAG_CHECK( FE_RES_QUESTION_POKEMON, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    _ASM_ADD_WK v1_1, 1
  ENDIF

  // 未回答アンケートの数を返す
  $SCWK_ANSWER = $v1_1
}
_RET
//----------------------------------------------------------------------
// ◆答えていないアンケートのIDを取得する
// ◇out SCWK_ANSWER まだ答えていないアンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//                   全てのアンケートに回答済みなら, RESEARCH_QUESTIONNAIRE_ID_DUMMY
//----------------------------------------------------------------------
GET_BLANK_QUESTIONNAIRE_ID:
{ 
  // どんなひとが　いるか
  _FLAG_CHECK( FE_RES_QUESTION_YOU, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_YOU
    _RET
  ENDIF
  // すきなポケモン
  _FLAG_CHECK( FE_RES_QUESTION_FAVARITE, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE
    _RET
  ENDIF
  // みんなの　りそう
  _FLAG_CHECK( FE_RES_QUESTION_WISH, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_WISH
    _RET
  ENDIF
  // すきなひと
  _FLAG_CHECK( FE_RES_QUESTION_PARTNER, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_PARTNER
    _RET
  ENDIF
  // みんなの　このみ
  _FLAG_CHECK( FE_RES_QUESTION_TASTE, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_TASTE
    _RET
  ENDIF
  // みんなの　しゅみ
  _FLAG_CHECK( FE_RES_QUESTION_HOBBY, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_HOBBY
    _RET
  ENDIF
  // がっこうせいかつ
  _FLAG_CHECK( FE_RES_QUESTION_SCHOOL, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_SCHOOL
    _RET
  ENDIF
  // どんな　あそびがすきか
  _FLAG_CHECK( FE_RES_QUESTION_PLAY, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_PLAY
    _RET
  ENDIF
  // ポケモン
  _FLAG_CHECK( FE_RES_QUESTION_POKEMON, SCWK_TEMP0 )
  IF $SCWK_TEMP0 == FALSE THEN
    $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_POKEMON
    _RET
  ENDIF

  // 全てのアンケートに回答済み
  $SCWK_ANSWER = RESEARCH_QUESTIONNAIRE_ID_DUMMY
}
_RET 
//----------------------------------------------------------------------
// ◆アンケートの質問のIDを取得する
// ◇in  SCWK_TEMP0 アンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
// ◇out SCWK_TEMP1 質問１のID ( QUESTION_ID_xxxx ) 存在しない場合 QUESTION_ID_DUMMY
// ◇out SCWK_TEMP2 質問２のID ( QUESTION_ID_xxxx ) 存在しない場合 QUESTION_ID_DUMMY
// ◇out SCWK_TEMP3 質問３のID ( QUESTION_ID_xxxx ) 存在しない場合 QUESTION_ID_DUMMY
//----------------------------------------------------------------------
GET_QUESTIONNAIRE_QUESTION:
{
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN // 調査隊アンケート『どんなひとが　いるか』に回答
    $SCWK_TEMP1 = QUESTION_ID_HOBBY
    $SCWK_TEMP2 = QUESTION_ID_JOB
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN // 調査隊アンケート『すきなポケモン』に回答
    $SCWK_TEMP1 = QUESTION_ID_FUN
    $SCWK_TEMP2 = QUESTION_ID_FAVORITE_POKEMON
    $SCWK_TEMP3 = QUESTION_ID_POKEMON_TYPE
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN // 調査隊アンケート『みんなの　りそう』に回答
    $SCWK_TEMP1 = QUESTION_ID_PLACE
    $SCWK_TEMP2 = QUESTION_ID_WANT
    $SCWK_TEMP3 = QUESTION_ID_PRECIOUS
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN // 調査隊アンケート『すきなひと』に回答
    $SCWK_TEMP1 = QUESTION_ID_PARTNER
    $SCWK_TEMP2 = QUESTION_REQUIREMENT
    $SCWK_TEMP3 = QUESTION_ID_CHARACTER
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN // 調査隊アンケート『みんなの　このみ』に回答
    $SCWK_TEMP1 = QUESTION_ID_SEASON
    $SCWK_TEMP2 = QUESTION_ID_FOOD
    $SCWK_TEMP3 = QUESTION_ID_COLOR
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN // 調査隊アンケート『みんなの　しゅみ』に回答
    $SCWK_TEMP1 = QUESTION_ID_MUSIC
    $SCWK_TEMP2 = QUESTION_ID_TV
    $SCWK_TEMP3 = QUESTION_ID_MOVIE
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN // 調査隊アンケート『がっこうせいかつ』に回答
    $SCWK_TEMP1 = QUESTION_ID_FAVORITE_CLASS
    $SCWK_TEMP2 = QUESTION_ID_STRONG_CLASS
    $SCWK_TEMP3 = QUESTION_ID_WEAK_CLASS
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN // 調査隊アンケート『どんな　あそびがすきか』に回答
    $SCWK_TEMP1 = QUESTION_ID_PLAY_SPOT
    $SCWK_TEMP2 = QUESTION_ID_DAY_OFF
    $SCWK_TEMP3 = QUESTION_ID_SPORTS
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN // 調査隊アンケート『ポケモン』に回答
    $SCWK_TEMP1 = QUESTION_ID_POKEMON
    $SCWK_TEMP2 = QUESTION_ID_DREAM
    $SCWK_TEMP3 = QUESTION_ID_GYM_LEADER
  DEFAULT 
    $SCWK_TEMP1 = QUESTION_ID_DUMMY
    $SCWK_TEMP2 = QUESTION_ID_DUMMY
    $SCWK_TEMP3 = QUESTION_ID_DUMMY
  ENDSWITCH
}
_RET
//----------------------------------------------------------------------
// ◆指定した質問の回答IDを取得する
// ◇in  SCWK_TEMP0 質問ID ( QUESTION_ID_xxxx )
// ◇out SCWK_TEMP1 最初の回答ID ( ANSWER_ID_xxxx )
// ◇out SCWK_TEMP2 最後の回答ID ( ANSWER_ID_xxxx )
//----------------------------------------------------------------------
GET_ANSWER_RANGE:
{
  SWITCH $SCWK_TEMP0
  CASE QUESTION_ID_WB THEN
    $SCWK_TEMP1 = ANSWER_ID_001
    $SCWK_TEMP2 = ANSWER_ID_002
  CASE QUESTION_ID_SEX THEN
    $SCWK_TEMP1 = ANSWER_ID_003
    $SCWK_TEMP2 = ANSWER_ID_004
  CASE QUESTION_ID_FUN THEN
    $SCWK_TEMP1 = ANSWER_ID_005
    $SCWK_TEMP2 = ANSWER_ID_006
  CASE QUESTION_ID_PLACE THEN
    $SCWK_TEMP1 = ANSWER_ID_007
    $SCWK_TEMP2 = ANSWER_ID_008
  CASE QUESTION_ID_PARTNER THEN
    $SCWK_TEMP1 = ANSWER_ID_009
    $SCWK_TEMP2 = ANSWER_ID_010
  CASE QUESTION_ID_WANT THEN
    $SCWK_TEMP1 = ANSWER_ID_011
    $SCWK_TEMP2 = ANSWER_ID_012
  CASE QUESTION_REQUIREMENT THEN
    $SCWK_TEMP1 = ANSWER_ID_013
    $SCWK_TEMP2 = ANSWER_ID_014
  CASE QUESTION_ID_FAVORITE_POKEMON THEN
    $SCWK_TEMP1 = ANSWER_ID_015
    $SCWK_TEMP2 = ANSWER_ID_017
  CASE QUESTION_ID_FIRST_POKEMON THEN
    $SCWK_TEMP1 = ANSWER_ID_018
    $SCWK_TEMP2 = ANSWER_ID_020
  CASE QUESTION_ID_PLAY_SPOT THEN
    $SCWK_TEMP1 = ANSWER_ID_021
    $SCWK_TEMP2 = ANSWER_ID_023
  CASE QUESTION_ID_FAVORITE_CLASS THEN
    $SCWK_TEMP1 = ANSWER_ID_024
    $SCWK_TEMP2 = ANSWER_ID_026
  CASE QUESTION_ID_PRECIOUS THEN
    $SCWK_TEMP1 = ANSWER_ID_027
    $SCWK_TEMP2 = ANSWER_ID_029
  CASE QUESTION_ID_SEASON THEN
    $SCWK_TEMP1 = ANSWER_ID_030
    $SCWK_TEMP2 = ANSWER_ID_033
  CASE QUESTION_ID_FOOD THEN
    $SCWK_TEMP1 = ANSWER_ID_034
    $SCWK_TEMP2 = ANSWER_ID_037
  CASE QUESTION_ID_CHARACTER THEN
    $SCWK_TEMP1 = ANSWER_ID_038
    $SCWK_TEMP2 = ANSWER_ID_041
  CASE QUESTION_ID_POKEMON THEN
    $SCWK_TEMP1 = ANSWER_ID_042
    $SCWK_TEMP2 = ANSWER_ID_045
  CASE QUESTION_ID_STRONG_CLASS THEN
    $SCWK_TEMP1 = ANSWER_ID_046
    $SCWK_TEMP2 = ANSWER_ID_049
  CASE QUESTION_ID_WEAK_CLASS THEN
    $SCWK_TEMP1 = ANSWER_ID_050
    $SCWK_TEMP2 = ANSWER_ID_053
  CASE QUESTION_ID_DREAM THEN
    $SCWK_TEMP1 = ANSWER_ID_054
    $SCWK_TEMP2 = ANSWER_ID_057
  CASE QUESTION_ID_DAY_OFF THEN
    $SCWK_TEMP1 = ANSWER_ID_058
    $SCWK_TEMP2 = ANSWER_ID_062
  CASE QUESTION_ID_MUSIC THEN
    $SCWK_TEMP1 = ANSWER_ID_063
    $SCWK_TEMP2 = ANSWER_ID_067
  CASE QUESTION_ID_TV THEN
    $SCWK_TEMP1 = ANSWER_ID_068
    $SCWK_TEMP2 = ANSWER_ID_072
  CASE QUESTION_ID_MOVIE THEN
    $SCWK_TEMP1 = ANSWER_ID_073
    $SCWK_TEMP2 = ANSWER_ID_078
  CASE QUESTION_ID_SPORTS THEN
    $SCWK_TEMP1 = ANSWER_ID_079
    $SCWK_TEMP2 = ANSWER_ID_084
  CASE QUESTION_ID_COLOR THEN
    $SCWK_TEMP1 = ANSWER_ID_085
    $SCWK_TEMP2 = ANSWER_ID_090
  CASE QUESTION_ID_HOBBY THEN
    $SCWK_TEMP1 = ANSWER_ID_091
    $SCWK_TEMP2 = ANSWER_ID_098
  CASE QUESTION_ID_JOB THEN
    $SCWK_TEMP1 = ANSWER_ID_099
    $SCWK_TEMP2 = ANSWER_ID_106
  CASE QUESTION_ID_GYM_LEADER THEN
    $SCWK_TEMP1 = ANSWER_ID_107
    $SCWK_TEMP2 = ANSWER_ID_117
  CASE QUESTION_ID_POKEMON_TYPE THEN
    $SCWK_TEMP1 = ANSWER_ID_118
    $SCWK_TEMP2 = ANSWER_ID_134
  CASE QUESTION_ID_PLAY_TIME THEN
    $SCWK_TEMP1 = ANSWER_ID_135
    $SCWK_TEMP2 = ANSWER_ID_145
  DEFAULT
    $SCWK_TEMP1 = ANSWER_ID_000
    $SCWK_TEMP2 = ANSWER_ID_000
  ENDSWITCH
}
_RET
//----------------------------------------------------------------------
// ◆システム「調査レーダーに〜が増えた！」
// ◇in SCWK_TEMP0 答えたアンケートのID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//----------------------------------------------------------------------
SYSTEM_MSG_1:
{
  // v1_1 メッセージID

  // メッセージを選択
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN $v1_1 = msg_c03r0101_woman2_17a // 調査隊アンケート『どんなひとが　いるか』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN $v1_1 = msg_c03r0101_woman2_17b // 調査隊アンケート『すきなポケモン』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN $v1_1 = msg_c03r0101_woman2_17c // 調査隊アンケート『みんなの　りそう』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN $v1_1 = msg_c03r0101_woman2_17d // 調査隊アンケート『すきなひと』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN $v1_1 = msg_c03r0101_woman2_17e // 調査隊アンケート『みんなの　このみ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN $v1_1 = msg_c03r0101_woman2_17f // 調査隊アンケート『みんなの　しゅみ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN $v1_1 = msg_c03r0101_woman2_17g // 調査隊アンケート『がっこうせいかつ』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN $v1_1 = msg_c03r0101_woman2_17h // 調査隊アンケート『どんな　あそびがすきか』に回答
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN $v1_1 = msg_c03r0101_woman2_17i // 調査隊アンケート『ポケモン』に回答
  DEFAULT _RET
  ENDSWITCH

  // SE を再生
  _SE_PLAY( SEQ_SE_SYS_82 )

  // メッセージを表示
  _SYSWIN_MSG( v1_1, POS_DOWN )
  _SYSWIN_CLOSE()
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「ここはすれ違い調査隊本部よ」
//----------------------------------------------------------------------
MEMBER_Q_SAY_1:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_01, C03R0101_WOMAN2_01, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「おつかれさま」
//----------------------------------------------------------------------
MEMBER_Q_SAY_2:
{
  _PLAYER_NAME(1) 
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_02, C03R0101_WOMAN2_01, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「そうだアナタに頼みたい事があるの」
//----------------------------------------------------------------------
MEMBER_Q_SAY_3:
{
  //「そうだアナタに頼みたい事があるの」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_03, C03R0101_WOMAN2_01, POS_DOWN ) 
  //_BALLOONWIN_CLOSE()
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「またアナタにアンケートをお願いしたいんだけど…」
// ◇out SCWK_ANSWER 『はい』or『いいえ』の選択結果
//----------------------------------------------------------------------
MEMBER_Q_SAY_4:
{
  //「またアナタにアンケートをお願いしたいんだけど…」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_04, C03R0101_WOMAN2_01, POS_DOWN ) 
  _YES_NO_WIN( SCWK_ANSWER ) //『はい』or『いいえ』を選択
  //_BALLOONWIN_CLOSE() // 吹出しを閉じる
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「しょうがないわね」
//----------------------------------------------------------------------
MEMBER_Q_SAY_5:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_05, C03R0101_WOMAN2_01, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「答えたアンケートにもう一度答える？」
// ◇out SCWK_ANSWER 『はい』or『いいえ』の選択結果
//----------------------------------------------------------------------
MEMBER_Q_SAY_6:
{
  //「答えたアンケートにもう一度答える？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_06, C03R0101_WOMAN2_01, POS_DOWN ) 
  _YES_NO_WIN( SCWK_ANSWER ) //『はい』or『いいえ』を選択
  //_BALLOONWIN_CLOSE() // 吹出しを閉じる
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「答えるアンケートを選んでくれる？」
// ◇out SCWK_ANSWER 選択したアンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//                   『やめる』を選んだ場合 RESEARCH_QUESTIONNAIRE_ID_DUMMY
//----------------------------------------------------------------------
MEMBER_Q_SAY_7:
{
  //「答えるアンケートを選んでくれる？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_07, C03R0101_WOMAN2_01, POS_DOWN )

  // アンケートを選択
  _CALL QUESTIONNAIRE_MENU 

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「このアンケートでいいのね？」
// ◇out SCWK_ANSWER 『はい』or『いいえ』の選択結果
//----------------------------------------------------------------------
MEMBER_Q_SAY_8:
{
  //「このアンケートでいいのね？」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_08, C03R0101_WOMAN2_01, POS_DOWN ) 
  _YES_NO_WIN( SCWK_ANSWER ) //『はい』or『いいえ』を選択
  //_BALLOONWIN_CLOSE() // 吹出しを閉じる
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「回答を変えたくなったら言ってね」
//----------------------------------------------------------------------
MEMBER_Q_SAY_9:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_09, C03R0101_WOMAN2_01, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「今回のアンケートは〜についてよ」
// ◇in SCWK_TEMP0 アンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
//----------------------------------------------------------------------
MEMBER_Q_SAY_10:
{
  // v1_1 メッセージID

  // メッセージを選択
  SWITCH $SCWK_TEMP0
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN $v1_1 = msg_c03r0101_woman2_10a // 調査隊アンケート『どんなひとが　いるか』
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN $v1_1 = msg_c03r0101_woman2_10b // 調査隊アンケート『すきなポケモン』
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN $v1_1 = msg_c03r0101_woman2_10c // 調査隊アンケート『みんなの　りそう』
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN $v1_1 = msg_c03r0101_woman2_10d // 調査隊アンケート『すきなひと』
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN $v1_1 = msg_c03r0101_woman2_10e // 調査隊アンケート『みんなの　このみ』
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN $v1_1 = msg_c03r0101_woman2_10f // 調査隊アンケート『みんなの　しゅみ』
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN $v1_1 = msg_c03r0101_woman2_10g // 調査隊アンケート『がっこうせいかつ』
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN $v1_1 = msg_c03r0101_woman2_10h // 調査隊アンケート『どんな　あそびがすきか』
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN $v1_1 = msg_c03r0101_woman2_10i // 調査隊アンケート『ポケモン』
  DEFAULT _RET
  ENDSWITCH

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v1_1, C03R0101_WOMAN2_01, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「〜質問１〜」
// ◇in  SCWK_TEMP0 アンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
// ◇in  SCWK_TEMP1 質問ID ( QUESTION_ID_xxxx )
// ◇out SCWK_ANSWER 何番目の回答を選択したか
//----------------------------------------------------------------------
MEMBER_Q_SAY_11:
{
  // v3_1 メッセージID
  // v3_2 アンケートID
  // v3_3 質問ID

  // 引数の受け取り
  $v3_2 = $SCWK_TEMP0
  $v3_3 = $SCWK_TEMP1

  // メッセージを選択
  SWITCH $v3_2
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN $v3_1 = msg_c03r0101_woman2_11a // 質問１『アナタの趣味は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN $v3_1 = msg_c03r0101_woman2_11b // 質問１『対戦と交換どっちが好き？』
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN $v3_1 = msg_c03r0101_woman2_11c // 質問１『都会と田舎住むならどっち？』
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN $v3_1 = msg_c03r0101_woman2_11d // 質問１『相手を選ぶならどっち？』
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN $v3_1 = msg_c03r0101_woman2_11e // 質問１『好きな季節は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN $v3_1 = msg_c03r0101_woman2_11f // 質問１『好きな音楽は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN $v3_1 = msg_c03r0101_woman2_11g // 質問１『好きな学校の時間は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN $v3_1 = msg_c03r0101_woman2_11h // 質問１『遊びに行くなら？』
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN $v3_1 = msg_c03r0101_woman2_11i // 質問１『ポケモンの面白いところは？』
  DEFAULT _RET
  ENDSWITCH

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v3_1, C03R0101_WOMAN2_01, POS_DOWN )

  // 回答を選択
  $SCWK_TEMP0 = $v3_3
  _CALL ANSWER_MENU

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「〜質問２〜」
// ◇in  SCWK_TEMP0 アンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
// ◇in  SCWK_TEMP1 質問ID ( QUESTION_ID_xxxx )
// ◇out SCWK_ANSWER 何番目の回答を選択したか
//----------------------------------------------------------------------
MEMBER_Q_SAY_12:
{
  // v3_1 メッセージID
  // v3_2 アンケートID
  // v3_3 質問ID

  // 引数の受け取り
  $v3_2 = $SCWK_TEMP0
  $v3_3 = $SCWK_TEMP1

  // メッセージを選択
  SWITCH $v3_2
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN $v3_1 = msg_c03r0101_woman2_12a // 質問２『アナタのお仕事は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN $v3_1 = msg_c03r0101_woman2_12b // 質問２『好きなポケモンは？』
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN $v3_1 = msg_c03r0101_woman2_12c // 質問２『欲しいのはどっち？』
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN $v3_1 = msg_c03r0101_woman2_12d // 質問２『相手に求めるものは？』
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN $v3_1 = msg_c03r0101_woman2_12e // 質問２『好きな食べ物は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN $v3_1 = msg_c03r0101_woman2_12f // 質問２『好きなTV番組は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN $v3_1 = msg_c03r0101_woman2_12g // 質問２『好きな勉強は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN $v3_1 = msg_c03r0101_woman2_12h // 質問２『休日は何をしてる？』
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN $v3_1 = msg_c03r0101_woman2_12i // 質問２『もし なれるなら？』
  DEFAULT _RET
  ENDSWITCH

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v3_1, C03R0101_WOMAN2_01, POS_DOWN )

  // 回答を選択
  $SCWK_TEMP0 = $v3_3
  _CALL ANSWER_MENU

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「〜質問３〜」
// ◇in  SCWK_TEMP0 アンケートID ( RESEARCH_QUESTIONNAIRE_ID_xxxx )
// ◇in  SCWK_TEMP1 質問ID ( QUESTION_ID_xxxx )
// ◇out SCWK_ANSWER 何番目の回答を選択したか
//----------------------------------------------------------------------
MEMBER_Q_SAY_13:
{
  // v3_1 メッセージID
  // v3_2 アンケートID
  // v3_3 質問ID

  // 引数の受け取り
  $v3_2 = $SCWK_TEMP0
  $v3_3 = $SCWK_TEMP1

  // メッセージを選択
  SWITCH $v3_2
  CASE RESEARCH_QUESTIONNAIRE_ID_YOU           THEN $v3_1 = msg_c03r0101_woman2_13a // 質問３『』
  CASE RESEARCH_QUESTIONNAIRE_ID_FAVARITE_POKE THEN $v3_1 = msg_c03r0101_woman2_13b // 質問３『好きなポケモンのタイプは？』
  CASE RESEARCH_QUESTIONNAIRE_ID_WISH          THEN $v3_1 = msg_c03r0101_woman2_13c // 質問３『大事なのは？』
  CASE RESEARCH_QUESTIONNAIRE_ID_PARTNER       THEN $v3_1 = msg_c03r0101_woman2_13d // 質問３『好きな人間のタイプは？』
  CASE RESEARCH_QUESTIONNAIRE_ID_TASTE         THEN $v3_1 = msg_c03r0101_woman2_13e // 質問３『好きな色は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_HOBBY         THEN $v3_1 = msg_c03r0101_woman2_13f // 質問３『好きな映画は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_SCHOOL        THEN $v3_1 = msg_c03r0101_woman2_13g // 質問３『苦手な勉強は？』
  CASE RESEARCH_QUESTIONNAIRE_ID_PLAY          THEN $v3_1 = msg_c03r0101_woman2_13h // 質問３『好きなスポーツは？』
  CASE RESEARCH_QUESTIONNAIRE_ID_POKEMON       THEN $v3_1 = msg_c03r0101_woman2_13i // 質問３『好きなジムリーダーは？』
  DEFAULT _RET
  ENDSWITCH

  // メッセージを表示
  _BALLOONWIN_OBJMSG_POS( v3_1, C03R0101_WOMAN2_01, POS_DOWN )

  // 回答を選択
  $SCWK_TEMP0 = $v3_3
  _CALL ANSWER_MENU

  // 吹出しを閉じる
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「なるほど なるほど」
//----------------------------------------------------------------------
MEMBER_Q_SAY_14:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_14, C03R0101_WOMAN2_01, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「はい おしまい」
//----------------------------------------------------------------------
MEMBER_Q_SAY_15:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_15, C03R0101_WOMAN2_01, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「このアンケート用紙あげるわ」
//----------------------------------------------------------------------
MEMBER_Q_SAY_16:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_16, C03R0101_WOMAN2_01, POS_DOWN )
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「これはアンケートに答えてくれたお礼よ」
//----------------------------------------------------------------------
MEMBER_Q_SAY_18:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_18, C03R0101_WOMAN2_01, POS_DOWN )
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「これでアンケートは全部おわり」
//----------------------------------------------------------------------
MEMBER_Q_SAY_19:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_19, C03R0101_WOMAN2_01, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「アンケートは何度も答えられるから…」
//----------------------------------------------------------------------
MEMBER_Q_SAY_20:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_20, C03R0101_WOMAN2_01, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「これで残りのアンケートは…」
//----------------------------------------------------------------------
MEMBER_Q_SAY_21:
{
  // 残りアンケート数をワードセットに登録
  _CALL GET_REST_QUESTIONNAIRE_NUM
  _NUMBER( 1, SCWK_ANSWER, 1 )

  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_21, C03R0101_WOMAN2_01, POS_DOWN )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「アンケートに協力してね！」
//----------------------------------------------------------------------
MEMBER_Q_SAY_22:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_22, C03R0101_WOMAN2_01, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「ちょっと待って！」
//----------------------------------------------------------------------
MEMBER_Q_SAY_23:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_23, C03R0101_WOMAN2_01, POS_DOWN )
  _BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員「他のアンケートもやらない？」
// ◇out SCWK_ANSWER 『はい』『いいえ』の選択結果
//----------------------------------------------------------------------
MEMBER_Q_SAY_24:
{
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_woman2_24, C03R0101_WOMAN2_01, POS_DOWN )
  _YES_NO_WIN( SCWK_ANSWER )
  //_BALLOONWIN_CLOSE() 
}
_RET
//----------------------------------------------------------------------
// ◆アンケート隊員: プレイヤーを呼び止める
//----------------------------------------------------------------------
_ANIME_LABEL ANIME_member_q_call_player
  _ANIME_DATA AC_DIR_D, 1
  _ANIME_DATA AC_STAY_JUMP_D_8F, 2
	_ANIME_DATA	ACMD_END, 0
//----------------------------------------------------------------------
// ◆プレイヤー: 振り向く
//----------------------------------------------------------------------
_ANIME_LABEL ANIME_player_turn
  _ANIME_DATA AC_MARK_GYOE, 1
  _ANIME_DATA AC_DIR_U, 1
	_ANIME_DATA	ACMD_END, 0
//----------------------------------------------------------------------
// ◆プレイヤー: アンケート隊員まで歩く
//----------------------------------------------------------------------
_ANIME_LABEL ANIME_player_walk_to_member_q_1
  _ANIME_DATA AC_WALK_U_8F, 7
  _ANIME_DATA AC_DIR_L, 1
	_ANIME_DATA	ACMD_END, 0
//----------------------------------------------------------------------
// ◆プレイヤー: アンケート隊員まで歩く
//----------------------------------------------------------------------
_ANIME_LABEL ANIME_player_walk_to_member_q_2
  _ANIME_DATA AC_WALK_U_8F, 3
  _ANIME_DATA AC_WALK_L_8F, 1
  _ANIME_DATA AC_WALK_U_8F, 4
  _ANIME_DATA AC_DIR_L, 1
	_ANIME_DATA	ACMD_END, 0 
//----------------------------------------------------------------------
// ◆プレイヤー: アンケート隊員まで歩く
//----------------------------------------------------------------------
_ANIME_LABEL ANIME_player_walk_to_member_q_3
  _ANIME_DATA AC_WALK_U_8F, 3
  _ANIME_DATA AC_WALK_L_8F, 2
  _ANIME_DATA AC_WALK_U_8F, 4
  _ANIME_DATA AC_DIR_L, 1
	_ANIME_DATA	ACMD_END, 0
//----------------------------------------------------------------------
// ◆アンケート隊員: プレイヤーの方を向く
//----------------------------------------------------------------------
_ANIME_LABEL ANIME_member_q_turn
  _ANIME_DATA AC_DIR_R, 1
	_ANIME_DATA	ACMD_END, 0


//======================================================================
// ■挨拶隊員メイン
//======================================================================
EVENT_START ev_member_hello 
{
  // 会話スタート
  _TALK_OBJ_START()

  //「こんにちは！」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_boy2_01, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 

  // 初回会話チェック
  _FLAG_CHECK( FE_RES_HELLO_FIRSTTALK, SCWK_ANSWER )

  // 初回会話
  IF $SCWK_ANSWER == FALSE THEN 
    _FLAG_SET( FE_RES_HELLO_FIRSTTALK ) // 初回会話フラグを立てる
    //「君の好きな挨拶を教えて？」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_boy2_02, SCWK_TARGET_OBJID, POS_DOWN )
  // 通常会話
  ELSE 
    //「また君の好きな挨拶を教えて？」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_boy2_03, SCWK_TARGET_OBJID, POS_DOWN )
  ENDIF

  //『はい』or『いいえ』選択
  _YES_NO_WIN( SCWK_ANSWER )
  //_BALLOONWIN_CLOSE()

  //『いいえ』
  IF $SCWK_ANSWER == SCR_NO THEN
    //「それじゃ また今度ね」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_boy2_04, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE() 
    EVENT_END
  ENDIF

  // フリーワード入力画面を呼ぶ
  _BALLOONWIN_CLOSE()
  _CALL_CROSS_COMM_HELLO_MSG_INPUT( SCWK_ANSWER ) 

  // 入力を確定
  IF $SCWK_ANSWER == TRUE THEN
    //「うん！いい挨拶だね！」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_boy2_05, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE() 
  // 入力をキャンセル
  ELSE
    //「それじゃ また今度ね」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_boy2_04, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE() 
  ENDIF 
}
EVENT_END 



//======================================================================
// ■お礼隊員メイン
//======================================================================
EVENT_START ev_member_thanks 
{
  // 会話スタート
  _TALK_OBJ_START()

  //「こんにちは」
  _BALLOONWIN_OBJMSG_POS( msg_c03r0101_girl4_01, SCWK_TARGET_OBJID, POS_DOWN )
  //_BALLOONWIN_CLOSE() 

  // 初回会話チェック
  _FLAG_CHECK( FE_RES_THANKS_FIRSTTALK, SCWK_ANSWER )

  // 初回会話
  IF $SCWK_ANSWER == FALSE THEN 
    _FLAG_SET( FE_RES_THANKS_FIRSTTALK ) // 初回会話フラグを立てる
    //「モンスターボールを落としたわよ」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_girl4_02, SCWK_TARGET_OBJID, POS_DOWN )
    _BALLOONWIN_CLOSE() 
    //『落としたモンスターボール度受けとった』
    _PLAYER_NAME(1)
    _SYSWIN_MSG( msg_c03r0101_girl4_03, POS_DOWN )
    _SYSWIN_CLOSE()
    //「こら！まちなさい！」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_girl4_04, SCWK_TARGET_OBJID, POS_DOWN )
  // 通常会話
  ELSE 
    //「感謝の気持ちを教えてくれるかしら？」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_girl4_05, SCWK_TARGET_OBJID, POS_DOWN )
  ENDIF

  //『はい』or『いいえ』選択
  _YES_NO_WIN( SCWK_ANSWER )
  //_BALLOONWIN_CLOSE() 

  //『いいえ』
  IF $SCWK_ANSWER == SCR_NO THEN
    //「それじゃ また今度ね」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_girl4_06, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE() 
    EVENT_END
  ENDIF

  // フリーワード入力画面を呼ぶ
  _BALLOONWIN_CLOSE()
  _CALL_CROSS_COMM_THANKS_MSG_INPUT( SCWK_ANSWER ) 

  // 入力を確定
  IF $SCWK_ANSWER == TRUE THEN
    //「すてきな言葉ね」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_girl4_07, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE() 
  // 入力をキャンセル
  ELSE
    //「それじゃ また今度ね」
    _BALLOONWIN_OBJMSG_POS( msg_c03r0101_girl4_06, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE() 
  ENDIF 
}
EVENT_END 



//======================================================================
// ■一般隊員A
//======================================================================
EVENT_START	ev_member_a
{
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // メッセージを選択
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN $SCWK_TEMP0 = msg_c03r0101_boy1_01
  CASE RESEARCH_TEAM_RANK_2 THEN $SCWK_TEMP0 = msg_c03r0101_boy1_02
  CASE RESEARCH_TEAM_RANK_3 THEN $SCWK_TEMP0 = msg_c03r0101_boy1_03
  CASE RESEARCH_TEAM_RANK_4 THEN $SCWK_TEMP0 = msg_c03r0101_boy1_04
  CASE RESEARCH_TEAM_RANK_5 THEN $SCWK_TEMP0 = msg_c03r0101_boy1_05
  DEFAULT EVENT_END
  ENDSWITCH

  // メッセージを表示
  _PLAYER_NAME(1)
  _TALK_OBJ_START()
  _BALLOONWIN_OBJMSG_POS( SCWK_TEMP0, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
EVENT_END


//======================================================================
// ■一般隊員B
//======================================================================
EVENT_START	ev_member_b
{
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // メッセージを選択
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN $SCWK_TEMP0 = msg_c03r0101_boy3_01
  CASE RESEARCH_TEAM_RANK_2 THEN $SCWK_TEMP0 = msg_c03r0101_boy3_02
  CASE RESEARCH_TEAM_RANK_3 THEN $SCWK_TEMP0 = msg_c03r0101_boy3_03
  CASE RESEARCH_TEAM_RANK_4 THEN $SCWK_TEMP0 = msg_c03r0101_boy3_04
  CASE RESEARCH_TEAM_RANK_5 THEN $SCWK_TEMP0 = msg_c03r0101_boy3_05
  DEFAULT EVENT_END
  ENDSWITCH

  // メッセージを表示
  _PLAYER_NAME(1)
  _TALK_OBJ_START()
  _BALLOONWIN_OBJMSG_POS( SCWK_TEMP0, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
EVENT_END


//======================================================================
// ■一般隊員C
//======================================================================
EVENT_START	ev_member_c
{
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // メッセージを選択
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_2 THEN $SCWK_TEMP0 = msg_c03r0101_girl1_01
  CASE RESEARCH_TEAM_RANK_3 THEN $SCWK_TEMP0 = msg_c03r0101_girl1_02
  CASE RESEARCH_TEAM_RANK_4 THEN $SCWK_TEMP0 = msg_c03r0101_girl1_03
  CASE RESEARCH_TEAM_RANK_5 THEN $SCWK_TEMP0 = msg_c03r0101_girl1_04
  DEFAULT EVENT_END
  ENDSWITCH

  // メッセージを表示
  _PLAYER_NAME(1)
  _TALK_OBJ_START()
  _BALLOONWIN_OBJMSG_POS( SCWK_TEMP0, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
EVENT_END


//======================================================================
// ■一般隊員D
//======================================================================
EVENT_START	ev_member_d
{
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // メッセージを選択
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_2 THEN $SCWK_TEMP0 = msg_c03r0101_girl2_01
  CASE RESEARCH_TEAM_RANK_3 THEN $SCWK_TEMP0 = msg_c03r0101_girl2_02
  CASE RESEARCH_TEAM_RANK_4 THEN $SCWK_TEMP0 = msg_c03r0101_girl2_03
  CASE RESEARCH_TEAM_RANK_5 THEN $SCWK_TEMP0 = msg_c03r0101_girl2_04
  DEFAULT EVENT_END
  ENDSWITCH

  // メッセージを表示
  _PLAYER_NAME(1)
  _TALK_OBJ_START()
  _BALLOONWIN_OBJMSG_POS( SCWK_TEMP0, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
EVENT_END


//======================================================================
// ■一般隊員E
//======================================================================
EVENT_START	ev_member_e
{
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // メッセージを選択
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_2 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_3 THEN $SCWK_TEMP0 = msg_c03r0101_boy4_01
  CASE RESEARCH_TEAM_RANK_4 THEN $SCWK_TEMP0 = msg_c03r0101_boy4_02
  CASE RESEARCH_TEAM_RANK_5 THEN $SCWK_TEMP0 = msg_c03r0101_boy4_03
  DEFAULT EVENT_END
  ENDSWITCH

  // メッセージを表示
  _PLAYER_NAME(1)
  _TALK_OBJ_START()
  _BALLOONWIN_OBJMSG_POS( SCWK_TEMP0, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
EVENT_END


//======================================================================
// ■一般隊員F
//======================================================================
EVENT_START	ev_member_f
{
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // メッセージを選択
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_2 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_3 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_4 THEN $SCWK_TEMP0 = msg_c03r0101_man1_01
  CASE RESEARCH_TEAM_RANK_5 THEN $SCWK_TEMP0 = msg_c03r0101_man1_02
  DEFAULT EVENT_END
  ENDSWITCH

  // メッセージを表示
  _PLAYER_NAME(1)
  _TALK_OBJ_START()
  _BALLOONWIN_OBJMSG_POS( SCWK_TEMP0, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
EVENT_END


//======================================================================
// ■一般隊員G
//======================================================================
EVENT_START	ev_member_g
{
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // メッセージを選択
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_2 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_3 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_4 THEN EVENT_END
  CASE RESEARCH_TEAM_RANK_5 THEN $SCWK_TEMP0 = msg_c03r0101_girl3_01
  DEFAULT EVENT_END
  ENDSWITCH

  // メッセージを表示
  _PLAYER_NAME(1)
  _TALK_OBJ_START()
  _BALLOONWIN_OBJMSG_POS( SCWK_TEMP0, SCWK_TARGET_OBJID, POS_DOWN )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE() 
}
EVENT_END


//======================================================================
// ■書類
//======================================================================
EVENT_START	ev_paper
{
  _DISP_RESEARCH_TEAM_INFO()
}
EVENT_END



//======================================================================
// ■ゾーンチェンジ時の初期化
//======================================================================
INIT_EVENT_START ev_zone_c03r0101
  // 隊員ランクを取得
  _GET_RESEARCH_TEAM_RANK( SCWK_ANSWER )

  // フラグをセット ( 非表示 )
  _FLAG_SET( FV_C03R0101_MEMBER_A )
  _FLAG_SET( FV_C03R0101_MEMBER_B )
  _FLAG_SET( FV_C03R0101_MEMBER_C )
  _FLAG_SET( FV_C03R0101_MEMBER_D )
  _FLAG_SET( FV_C03R0101_MEMBER_E )
  _FLAG_SET( FV_C03R0101_MEMBER_F )
  _FLAG_SET( FV_C03R0101_MEMBER_G )

  // 隊員ランクに応じてフラグをリセット ( 表示 )
  SWITCH $SCWK_ANSWER
  CASE RESEARCH_TEAM_RANK_1 THEN // ランクC
    _FLAG_RESET( FV_C03R0101_MEMBER_A )
    _FLAG_RESET( FV_C03R0101_MEMBER_B )
  CASE RESEARCH_TEAM_RANK_2 THEN // ランクB
    _FLAG_RESET( FV_C03R0101_MEMBER_A )
    _FLAG_RESET( FV_C03R0101_MEMBER_B )
    _FLAG_RESET( FV_C03R0101_MEMBER_C )
    _FLAG_RESET( FV_C03R0101_MEMBER_D )
  CASE RESEARCH_TEAM_RANK_3 THEN // ランクA
    _FLAG_RESET( FV_C03R0101_MEMBER_A )
    _FLAG_RESET( FV_C03R0101_MEMBER_B )
    _FLAG_RESET( FV_C03R0101_MEMBER_C )
    _FLAG_RESET( FV_C03R0101_MEMBER_D )
    _FLAG_RESET( FV_C03R0101_MEMBER_E )
  CASE RESEARCH_TEAM_RANK_4 THEN // ランクS
    _FLAG_RESET( FV_C03R0101_MEMBER_A )
    _FLAG_RESET( FV_C03R0101_MEMBER_B )
    _FLAG_RESET( FV_C03R0101_MEMBER_C )
    _FLAG_RESET( FV_C03R0101_MEMBER_D )
    _FLAG_RESET( FV_C03R0101_MEMBER_E )
    _FLAG_RESET( FV_C03R0101_MEMBER_F )
  CASE RESEARCH_TEAM_RANK_5 THEN // ランクSS
    _FLAG_RESET( FV_C03R0101_MEMBER_A )
    _FLAG_RESET( FV_C03R0101_MEMBER_B )
    _FLAG_RESET( FV_C03R0101_MEMBER_C )
    _FLAG_RESET( FV_C03R0101_MEMBER_D )
    _FLAG_RESET( FV_C03R0101_MEMBER_E )
    _FLAG_RESET( FV_C03R0101_MEMBER_F )
    _FLAG_RESET( FV_C03R0101_MEMBER_G )
  ENDSWITCH
INIT_EVENT_END
