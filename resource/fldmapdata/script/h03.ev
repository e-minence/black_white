
//======================================================================
//                h03.ev
//
//    スクリプトファイル：h03用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "../../message/dst/script/msg_h03.h"
  .include  "h03.h"

//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA    	ev_h03_fighterw_01
_EVENT_DATA		ev_h03_middlewoman1_01
_EVENT_DATA		ev_init_h03
_EVENT_DATA		ev_recover_h03
_EVENT_DATA		ev_zone_h03
_EVENT_DATA		ev_h03_badrider1_01
_EVENT_DATA		ev_h03_badrider1_02
_EVENT_DATA		ev_h03_badrider1_03
_EVENT_DATA		ev_h03_badrider1_04
_EVENT_DATA		ev_h03_badrider1_05
_EVENT_DATA		ev_pos_h03_badrider_01
_EVENT_DATA_END
//------------------------------注意--------------------------------//
//																	//
//	暴走族イベントに LOCALWORK0〜1 まで使用しています。				//
//	同マップ内の使用を禁止します。									//
//----------------------------------------------------------------	//


/************************************************************/
/*					ZONE_CHANGE_SCRIPT						*/
/************************************************************/
INIT_EVENT_START	ev_zone_h03
	
	//一般人を表示 暴走族を非表示
	_FLAG_RESET(FV_H03_GENERALPERSON)
	_FLAG_SET(FV_H03_BADRIDER)
	
	//暴走族のPOSイベントを有効にする
	$WK_SCENE_H03_BADRIDER = 0

	//タイムフラグがOFFだったら（対戦してから一日経過していたら）
	IF FLAG_OFF(TMFLG_H03_EMPEROR_BTL) THEN
	
		//トレーナーフラグセット
		_TRAINER_FLAG_RESET(TRID_BADRIDER_05)
		_TRAINER_FLAG_RESET(TRID_BADRIDER_06)
		
		//タグにエンペルトを挿入
		$WK_OTHER_EMPEROR_MONSNUM = MONSNO_395
		
	ENDIF
	
	//LOCALWORK0→ 曜日
	//LOCALWORK1→ 時間帯
	//曜日の取得
	_GET_WEEK( LOCALWORK0 )
	
	//暴走族の表示チェック
	IF $LOCALWORK0 == RTC_WEEK_FRIDAY THEN
		//金曜日なら時間帯チェックへ
		_CALL	ev_time_chk
	ENDIF
	
INIT_EVENT_END


//時間帯チェック
ev_time_chk:
	//時間帯の取得
	_GET_TIMEZONE( LOCALWORK1 )
	
	//夕方〜夜の間は暴走族を表示し、一般人を非表示
	IF $LOCALWORK1 == TIMEZONE_NIGHT  || $LOCALWORK1 == TIMEZONE_EVENING THEN
		_FLAG_RESET(FV_H03_BADRIDER)
		_FLAG_SET(FV_H03_GENERALPERSON)
		
		//トレーナーと対戦していないなら、POSイベントを有効にする
		_TRAINER_FLAG_CHECK( TRID_BADRIDER_05, SCWK_ANSWER )
  		IF $SCWK_ANSWER ==  FALSE THEN
			//暴走族子分のPOSイベントを有効にする
			$WK_SCENE_H03_BADRIDER = 1
		ENDIF
		
	ENDIF
_RET

/**************************************************************/
/*           FIELD_INIT_LABEL								  */
/**************************************************************/
INIT_EVENT_START	ev_init_h03
{
	//LOCALWORK0→ 曜日
	//LOCALWORK1→ 時間帯
	
	DEFINE_LOCAL LWK_POSX_1
	DEFINE_LOCAL LWK_POSZ_1
	
	//プレイヤーの座標を取得する
	_PLAYER_POS_GET( LWK_POSX_1,LWK_POSZ_1 )
	
	IF $LOCALWORK1 == TIMEZONE_NIGHT  || $LOCALWORK1 == TIMEZONE_EVENING THEN
		IF $LOCALWORK0 == RTC_WEEK_FRIDAY THEN
			//群集の起動
			_CROWD_PEOPLE_START()
			IF $LWK_POSZ_1 == 32 THEN
				_OBJ_POS_CHANGE(H03_BADRIDER1_01,15,0,37,DIR_UP)
				
			ELSIF $LWK_POSZ_1 == 159 THEN
				_OBJ_POS_CHANGE(H03_BADRIDER1_01,15,0,154,DIR_DOWN)
			ENDIF
			
		ENDIF
	ENDIF
}
INIT_EVENT_END
INIT_EVENT_START	ev_recover_h03
	//LOCALWORK0→ 曜日
	//LOCALWORK1→ 時間帯
	IF $LOCALWORK1 == TIMEZONE_NIGHT  || $LOCALWORK1 == TIMEZONE_EVENING THEN
		IF $LOCALWORK0 == RTC_WEEK_FRIDAY THEN
			//群集の起動
			_CROWD_PEOPLE_START()
		ENDIF
	ENDIF

INIT_EVENT_END
/**************************************************************/
/*    ニトロチャージをくれるイベント           */                                                           
/**************************************************************/
EVENT_START    ev_h03_fighterw_01
	
	_TALK_OBJ_START()	
	
	//アイテムを入手しているかによって分岐
	IF FLAG_OFF(FE_H03_ITEMGET_01) THEN
		_BALLOONWIN_OBJMSG_POS( msg_h03_fighterw_01, H03_FIGHTERW_01, POS_UP )
		_MSGWIN_CLOSE()

		_ITEM_EVENT_KEYWAIT(ITEM_WAZAMASIN43,1)
		_BALLOONWIN_OBJMSG_POS( msg_h03_fighterw_02, H03_FIGHTERW_01, POS_UP )
		
		//アイテム入手フラグON
		_FLAG_SET(FE_H03_ITEMGET_01)

	ELSE
		_BALLOONWIN_OBJMSG_POS( msg_h03_fighterw_02, H03_FIGHTERW_01, POS_UP)
	ENDIF
		_LAST_KEYWAIT()
		_MSGWIN_CLOSE()
		
EVENT_END

/**************************************************************/
/*    POSイベント           */                                                           
/**************************************************************/ 
EVENT_START    ev_pos_h03_badrider_01
	{
	DEFINE_LOCAL LWK_POSX
	DEFINE_LOCAL LWK_POSZ
	
	_PLAYER_POS_GET(LWK_POSX,LWK_POSZ)
	
	_OBJ_ANIME(H03_BADRIDER1_01,anm_common_gyoe)
	_OBJ_ANIME_WAIT()
	_TIME_WAIT(8)
	
	IF $LWK_POSX == 7 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u7)
	ELSIF $LWK_POSX == 8  THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u8)
	ELSIF $LWK_POSX == 9  THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u9)
	ELSIF $LWK_POSX == 10 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u10)
	ELSIF $LWK_POSX == 11 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u11)
	ELSIF $LWK_POSX == 12 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u12)
	ELSIF $LWK_POSX == 13 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u13)
	ELSIF $LWK_POSX == 14 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u14)
	ELSIF $LWK_POSX == 16 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u16)
	ELSIF $LWK_POSX == 17 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u17)
	ELSIF $LWK_POSX == 18 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u18)
	ELSIF $LWK_POSX == 19 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u19)
	ELSIF $LWK_POSX == 20 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u20)
	ELSIF $LWK_POSX == 21 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u21)
	ELSIF $LWK_POSX == 22 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u22)
	ELSIF $LWK_POSX == 23 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u23)
	ELSIF $LWK_POSX == 24 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_u24)
	ENDIF

	_OBJ_ANIME_WAIT()
	
	IF $LWK_POSZ ==  34 THEN
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_up)	
		_OBJ_ANIME_WAIT()
	ELSE
		_OBJ_ANIME(H03_BADRIDER1_01,anm_badrider_move_down)	
		_OBJ_ANIME_WAIT()		
	ENDIF
		
	_TIME_WAIT(16)
		
	//タグにリーダーに勝った際、使用していたポケモンか、エンペルトの種族名をセット
	_MONS_NAME( 0, WK_OTHER_EMPEROR_MONSNUM )
	_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_01,H03_BADRIDER1_01,POS_UP)
	_YES_NO_WIN(SCWK_ANSWER)
			
	IF$SCWK_ANSWER == SCR_YES THEN
		_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_03,H03_BADRIDER1_01,POS_UP)
				
	ELSE
		_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_02,H03_BADRIDER1_01,POS_UP)
		_MSGWIN_CLOSE()
				
		_TRAINER_BTL_SET( TRID_BADRIDER_05, 0 )
				
		//敗戦チェック
		_TRAINER_LOSE_CHECK( SCWK_ANSWER )
		IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
			_TRAINER_WIN()			//勝ち(1)ならトレーナー勝利処理へ
			_TRAINER_FLAG_SET( TRID_BADRIDER_05 )
			_FLAG_SET(TMFLG_H03_EMPEROR_BTL)

		ELSE
			_TRAINER_LOSE()			//負け(0)ならトレーナー敗北処理へ(ここでスクリプト終了します）
		ENDIF
						
		//対戦後メッセージ
		_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_04,H03_BADRIDER1_01,POS_UP)	
				    	
	ENDIF
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
	
	//POSイベントを無効にする
	$WK_SCENE_H03_BADRIDER = 2
	
	}
EVENT_END

//--------------------------------------------------------------------
// 共通アニメ：びっくりする                    
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_gyoe

	_ANIME_DATA AC_MARK_GYOE,1
	_ANIME_DATA	ACMD_END,0
	
//--------------------------------------------------------------------
// 共通アニメ：右振り向き                   
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_r

	_ANIME_DATA AC_STAY_WALK_R_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
// 共通アニメ：左振り向き                      
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_l

	_ANIME_DATA AC_STAY_WALK_L_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
// 共通アニメ：下振り向き                       
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_d

	_ANIME_DATA AC_STAY_WALK_D_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
// 共通アニメ：上振り向き                       
//--------------------------------------------------------------------
_ANIME_LABEL	anm_common_turn_u

	_ANIME_DATA AC_STAY_WALK_U_8F,1
	_ANIME_DATA	ACMD_END,0

//--------------------------------------------------------------------
// バッドライダー	子分の移動                       
//--------------------------------------------------------------------
_ANIME_LABEL	anm_badrider_move_down

	_ANIME_DATA AC_WALK_D_4F,1
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL	anm_badrider_move_up

	_ANIME_DATA AC_WALK_U_4F,1
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u7

	_ANIME_DATA AC_WALK_L_4F,8
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL	anm_badrider_move_u8

	_ANIME_DATA AC_WALK_L_4F,7
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u9

	_ANIME_DATA AC_WALK_L_4F,6
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u10

	_ANIME_DATA AC_WALK_L_4F,5
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL	anm_badrider_move_u11

	_ANIME_DATA AC_WALK_L_4F,4
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u12

	_ANIME_DATA AC_WALK_L_4F,3
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u13

	_ANIME_DATA AC_WALK_L_4F,2
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u14

	_ANIME_DATA AC_WALK_L_4F,1
	_ANIME_DATA	ACMD_END,0

_ANIME_LABEL	anm_badrider_move_u16

	_ANIME_DATA AC_WALK_R_4F,1
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u17

	_ANIME_DATA AC_WALK_R_4F,2
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u18

	_ANIME_DATA AC_WALK_R_4F,3
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u19

	_ANIME_DATA AC_WALK_R_4F,4
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u20

	_ANIME_DATA AC_WALK_R_4F,5
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u21

	_ANIME_DATA AC_WALK_R_4F,6
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u22

	_ANIME_DATA AC_WALK_R_4F,7
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u23

	_ANIME_DATA AC_WALK_R_4F,8
	_ANIME_DATA	ACMD_END,0
	
_ANIME_LABEL	anm_badrider_move_u24

	_ANIME_DATA AC_WALK_R_4F,9
	_ANIME_DATA	ACMD_END,0
	
/**************************************************************/
/*    MIDDLEWOMAN1の話しかけイベント           */                                                           
/**************************************************************/ 
EVENT_START    ev_h03_middlewoman1_01
	
	_TALK_OBJ_START()
	_BALLOONWIN_OBJMSG_POS(msg_h03_middlewoman_01, H03_MIDDLEWOMAN1_01, POS_UP )
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
	
EVENT_END

/**************************************************************/
/*    BADRIDER_1（子分１）の話しかけイベント           */                                                           
/**************************************************************/
EVENT_START    ev_h03_badrider1_01
	
	//タグにリーダーに勝った際、使用していたポケモンか、エンペルトの種族名をセット
	_MONS_NAME( 0, WK_OTHER_EMPEROR_MONSNUM )
	
	_TALK_OBJ_START()
  	_TRAINER_FLAG_CHECK( TRID_BADRIDER_05, SCWK_ANSWER )
  	
  	IF$SCWK_ANSWER == TRUE THEN
		//対戦後メッセージ
		_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_04,H03_BADRIDER1_01,POS_UP)
	ELSE
		_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_01,H03_BADRIDER1_01,POS_UP)
		_YES_NO_WIN(SCWK_ANSWER)
		_MSGWIN_CLOSE()
		
		IF$SCWK_ANSWER == SCR_YES THEN
			_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_03,H03_BADRIDER1_01,POS_UP)
			
		ELSE
			_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_02,H03_BADRIDER1_01,POS_UP)
			_MSGWIN_CLOSE()
			
			_TRAINER_BTL_SET( TRID_BADRIDER_05, 0 )
			
			//敗戦チェック
			_TRAINER_LOSE_CHECK( SCWK_ANSWER )
			IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
				_TRAINER_WIN()			//勝ち(1)ならトレーナー勝利処理へ
				_TRAINER_FLAG_SET( TRID_BADRIDER_05 )
				_FLAG_SET(TMFLG_H03_EMPEROR_BTL)
				
			ELSE
				_TRAINER_LOSE()			//負け(0)ならトレーナー敗北処理へ(ここでスクリプト終了します）
			ENDIF
					
			//対戦後メッセージ
			_BALLOONWIN_OBJMSG_POS(msg_h03_badrider1_04,H03_BADRIDER1_01,POS_UP)	
			    	
		ENDIF
	ENDIF
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
	
EVENT_END
/**************************************************************/
/*    BADRIDER_2（リーダー）の話しかけイベント           */                                                           
/**************************************************************/ 
EVENT_START    ev_h03_badrider1_02

	DEFINE_LOCAL	LWK_POKE_POS
				
	//タグにリーダーに勝った際、使用していたポケモンか、エンペルトの種族名をセット
	_MONS_NAME( 0, WK_OTHER_EMPEROR_MONSNUM )
	
	_TALK_OBJ_START()
  	_TRAINER_FLAG_CHECK( TRID_BADRIDER_06, SCWK_ANSWER )
  	
  	IF$SCWK_ANSWER == TRUE THEN
		//対戦後メッセージ
		_BALLOONWIN_OBJMSG_POS(msg_h03_badrider2_04,H03_BADRIDER1_02,POS_UP)
	ELSE
		_BALLOONWIN_OBJMSG_POS(msg_h03_badrider2_01,H03_BADRIDER1_02,POS_UP)
		_YES_NO_WIN(SCWK_ANSWER)
		_MSGWIN_CLOSE()
		
		IF$SCWK_ANSWER == SCR_NO THEN
			_BALLOONWIN_OBJMSG_POS(msg_h03_badrider2_03,H03_BADRIDER1_02,POS_UP)
			
		ELSE
			_BALLOONWIN_OBJMSG_POS(msg_h03_badrider2_02,H03_BADRIDER1_02,POS_UP)
			_MSGWIN_CLOSE()
			
			_TRAINER_BTL_SET( TRID_BADRIDER_06, 0 )
			
			//敗戦チェック
			_TRAINER_LOSE_CHECK( SCWK_ANSWER )
			IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
				_TRAINER_WIN()			//勝ち(1)ならトレーナー勝利処理へ
				_TRAINER_FLAG_SET( TRID_BADRIDER_06 )
				
				//タイムフラグを操作する
				_FLAG_SET(TMFLG_H03_EMPEROR_BTL)
				
				//手持ちポケモンの種族名を取得する処理				
				_GET_PARTY_FRONT_POKEMON( LWK_POKE_POS, POKECOUNT_MODE_BATTLE_ENABLE )
				_GET_PARTY_POKE_MONSNO( WK_OTHER_EMPEROR_MONSNUM, LWK_POKE_POS )
				
			ELSE
				_TRAINER_LOSE()			//負け(0)ならトレーナー敗北処理へ(ここでスクリプト終了します）
			ENDIF

			//タグにリーダーに勝った際、使用していたポケモンか、エンペルトの種族名をセット
			_MONS_NAME( 0, WK_OTHER_EMPEROR_MONSNUM )
			//対戦後メッセージ
			_BALLOONWIN_OBJMSG_POS(msg_h03_badrider2_04,H03_BADRIDER1_02,POS_UP)		
			    	
		ENDIF
	ENDIF
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
	
EVENT_END
/**************************************************************/
/*    BADRIDER_3(子分２）の話しかけイベント           */                                                           
/**************************************************************/ 
EVENT_START    ev_h03_badrider1_03

	//タグにリーダーに勝った際、使用していたポケモンか、エンペルトの種族名をセット
	_MONS_NAME( 0, WK_OTHER_EMPEROR_MONSNUM )
	
	_TALK_OBJ_START()
	_BALLOONWIN_OBJMSG_POS(msg_h03_badrider3_01,H03_BADRIDER1_03,POS_UP)
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
	
EVENT_END
/**************************************************************/
/*    BADRIDER_4(子分３）の話しかけイベント           */                                                           
/**************************************************************/ 
EVENT_START    ev_h03_badrider1_04

	//タグにリーダーに勝った際、使用していたポケモンか、エンペルトの種族名をセット
	_MONS_NAME( 0, WK_OTHER_EMPEROR_MONSNUM )

	_TALK_OBJ_START()
	_BALLOONWIN_OBJMSG_POS(msg_h03_badrider4_01,H03_BADRIDER1_04,POS_UP)
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
	
EVENT_END
/**************************************************************/
/*    BADRIDER_4(子分４）の話しかけイベント           */                                                           
/**************************************************************/ 
EVENT_START    ev_h03_badrider1_05

	//タグにリーダーに勝った際、使用していたポケモンか、エンペルトの種族名をセット
	_MONS_NAME( 0, WK_OTHER_EMPEROR_MONSNUM )

	_TALK_OBJ_START()
	_BALLOONWIN_OBJMSG_POS(msg_h03_badrider5_01,H03_BADRIDER1_05,POS_UP)
	_LAST_KEYWAIT()
	_MSGWIN_CLOSE()
	
EVENT_END
