#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sp4.y".
#

require 'racc/parser'


#
#	ポケモン用スクリプトコンパイラ
#


module PmScript

  class Parser < Racc::Parser

module_eval <<'..end sp4.y modeval..id37729f8ad1', 'sp4.y', 524

def initialize
end

#予約語定義
RESERVED = {
	'IF'	=> :IF,
	'THEN'	=> :THEN,
	'ELSE'	=> :ELSE,
	'ELSIF'	=> :ELSIF,
	'ENDIF'	=> :ENDIF,
	'DEFVAR'	=> :DEFVAR,
	'DEFFUNC'	=> :DEFFUNC,
	'FLAG_ON'	=> :FLAG_ON,
	'FLAG_OFF'	=> :FLAG_OFF,
  'EVENT_START' => :EVENT_START,
  'EVENT_END' => :EVENT_END,
  'SWITCH' => :SWITCH,
  'CASE' => :CASE,
  'ENDSWITCH' => :ENDSWITCH,
  'WHILE' => :WHILE,
  'ENDWHILE' => :ENDWHILE
};

#予約型定義
RESERVED_TYPE = {
	'LWORK'	=> :LWORK,
	'LABEL' => :LABEL_TYPE,
};

def parse( f )
	@q = []
	@nowlineno = 1
	@incomment = false
	f.each do |line_org|
		line = line_org.strip
		until line.empty? do
			if @incomment == true then
				if line =~ /.*\*\// then
					@incomment = false
					pushq [ :COMMENT, $&]
					line = $'
				else
					pushq [ :COMMENT, line]
					line = ""
				end
			else
				case line
				when /\A\s+/
					;
				when /\A\/\/.*$/
          #Ｃ＋＋形式コメント定義
					pushq [ :COMMENT, $& ]

				when /^\s*$/, /\A\#.*/
          #アセンブラコメント定義
					pushq [ :COMMENT, $&]

				when /\A\/\*.*\*\//
          #Ｃ形式コメント定義
					pushq [ :COMMENT, $&]

				when /\A\.[a-zA-Z_]+.*$/
          #アセンブラマクロ定義
					pushq [ :MACRO, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*:/
          #アセンブララベル定義
					pushq [ :LABEL, $& ]

				when /\A_[A-Z0-9][a-zA-Z0-9_]*/
          #スクリプトコマンド定義（＿で開始する）
					pushq [ :COMMAND, $& ]

				when /\A0x[0-9a-fA-F]+/, /\A\d+/
          #数値定義（0xで始まる１６進数、あるいは１０進数）
					pushq [ :NUMBER, $& ]

				when /\A\$[a-zA-Z][a-zA-Z0-9_]*/
          #変数定義（＄で始まる）
					pushq [ :VARREF, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*/
          #識別子定義あるいは型定義
					if RESERVED.has_key? $& then
						pushq [ RESERVED[$&], $&.intern ]
					elsif RESERVED_TYPE.has_key? $& then
						pushq [ :TYPE, $&.intern ]
					else
						pushq [ :IDENT, $& ]
					end

				when /\A\\[a-zA-Z_][a-zA-Z0-9_]*/
          # \から始まる識別子はアセンブラマクロパラメータ
					pushq [ :MACPARAM, $& ]

				when /\A==/,/\A!=/,/\A\<=/,/\A\>=/,/\A>/,/\A</
          # 比較演算子
					pushq [ $&, $& ]

				when /\A\/\*.*/
          #C形式コメント開始
					pushq [ :COMMENT, $& ]
					@incomment = true

				when /\A[\+\-\*\/=(){},]/
          #演算子、カッコなどの記号
					pushq [ $&, $& ]
				else
					raise RuntimeError, "#{@fname}:#{@nowlineno}: fatal error! \{#{line_org}\}"
				end
				line = $'
				printf( "\#NOW LINE(%4d) #{line}\n", @nowlineno)
			end
		end
		pushq [ :EOL, nil ]
		@nowlineno += 1
	end
	pushq [ false, nil ]
	
	@yydebug = true
	do_parse
end

def next_token
	value = @q.shift
	@lineno = value.last
	value.delete_at(2)
	value
end

def pushq value
	value << @nowlineno
	@q.push value
end


def on_error( t, v, values )
    if v then
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@fname}:#{@lineno}: syntax error on #{v.inspect}"
  end


..end sp4.y modeval..id37729f8ad1

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 48, :_reduce_1,
 0, 49, :_reduce_2,
 3, 49, :_reduce_3,
 2, 49, :_reduce_4,
 2, 49, :_reduce_none,
 4, 49, :_reduce_6,
 3, 49, :_reduce_7,
 4, 49, :_reduce_8,
 0, 53, :_reduce_9,
 2, 53, :_reduce_none,
 3, 53, :_reduce_11,
 3, 54, :_reduce_12,
 8, 55, :_reduce_13,
 7, 55, :_reduce_14,
 1, 56, :_reduce_15,
 3, 56, :_reduce_16,
 4, 51, :_reduce_17,
 1, 51, :_reduce_none,
 2, 57, :_reduce_none,
 3, 57, :_reduce_none,
 2, 58, :_reduce_none,
 3, 58, :_reduce_none,
 1, 50, :_reduce_23,
 1, 50, :_reduce_24,
 1, 50, :_reduce_25,
 1, 50, :_reduce_26,
 1, 50, :_reduce_none,
 1, 50, :_reduce_none,
 1, 50, :_reduce_none,
 1, 50, :_reduce_none,
 1, 50, :_reduce_none,
 3, 62, :_reduce_32,
 4, 62, :_reduce_33,
 6, 62, :_reduce_34,
 5, 62, :_reduce_35,
 1, 52, :_reduce_36,
 2, 52, :_reduce_37,
 6, 60, :_reduce_38,
 0, 67, :_reduce_39,
 2, 67, :_reduce_40,
 5, 67, :_reduce_41,
 3, 66, :_reduce_42,
 3, 66, :_reduce_43,
 4, 66, :_reduce_44,
 4, 66, :_reduce_45,
 3, 66, :_reduce_46,
 3, 66, :_reduce_47,
 1, 68, :_reduce_48,
 1, 68, :_reduce_49,
 1, 68, :_reduce_50,
 1, 68, :_reduce_51,
 1, 68, :_reduce_52,
 1, 68, :_reduce_53,
 1, 68, :_reduce_54,
 1, 68, :_reduce_55,
 5, 64, :_reduce_56,
 5, 63, :_reduce_57,
 0, 70, :_reduce_58,
 1, 70, :_reduce_59,
 2, 70, :_reduce_60,
 4, 71, :_reduce_61,
 3, 61, :_reduce_62,
 3, 61, :_reduce_63,
 3, 61, :_reduce_64,
 2, 59, :_reduce_65,
 4, 59, :_reduce_66,
 3, 59, :_reduce_67,
 2, 59, :_reduce_68,
 1, 59, :_reduce_69,
 1, 69, :_reduce_none,
 3, 69, :_reduce_71,
 3, 69, :_reduce_72,
 3, 69, :_reduce_73,
 3, 69, :_reduce_74,
 3, 69, :_reduce_75,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 65, :_reduce_81,
 3, 65, :_reduce_82 ]

racc_reduce_n = 83

racc_shift_n = 157

racc_action_table = [
     9,    86,   124,    16,    21,    49,    90,    28,   127,     6,
   141,     8,    12,    14,   128,    19,    23,    19,   104,   135,
   136,    55,    56,    10,     9,    15,   123,    16,    21,    27,
     4,    28,   148,     6,    86,     8,    12,    14,   103,    19,
    23,    42,   119,    83,    86,    46,   122,    10,     9,    15,
    58,    16,    21,    27,     4,    28,   143,     6,   142,     8,
    12,    14,    21,    19,    23,    55,   114,     6,    86,    39,
    40,    10,     9,    15,    52,    16,    21,    27,     4,    28,
   120,     6,    98,     8,    12,    14,    48,    19,    23,    42,
   100,    83,    74,    46,    97,    10,     9,    15,    63,    16,
    21,    27,     4,    28,   118,     6,   144,     8,    12,    14,
    75,    19,    23,    55,   147,   140,    57,    39,    40,    10,
     9,    15,   150,    16,    21,    27,     4,    28,   151,     6,
    55,     8,    12,    14,    91,    19,    23,    42,    50,    83,
    84,    46,    19,    10,   126,    15,    87,    30,     9,    27,
     4,    16,    21,    19,    42,    28,    45,     6,    46,     8,
    12,    14,    19,    19,    23,    39,    40,   135,   136,    29,
    54,    10,    42,    15,    83,   138,    46,    27,     4,    42,
    86,    83,    39,    40,    42,    55,    83,    88,    46,    42,
    21,    83,    59,    60,    94,     6,     3,    42,    96,    83,
    39,    40,    42,   nil,    83,   130,   118,    39,    40,    42,
   nil,    83,    39,    40,    78,    79,   nil,    39,    40,    95,
    78,    79,    39,    40,   nil,    39,    40,   133,   134,   nil,
    39,    40,    42,   nil,    83,   nil,   107,    39,    40,    69,
    70,    71,    72,    73,    64,    65,    66,    69,    70,    71,
    72,    73,    64,    65,    66,    78,    79,    80,    81,   nil,
    39,    40,   nil,   nil,   153,    78,    79,    80,    81,    37,
   nil,    38,    92,   112,    37,   nil,    38,    37,   nil,    38,
    37,   nil,    38,   112,   nil,    35,    36,    37,   nil,    38,
    35,    36,   nil,    35,    36,   nil,    35,    36,    78,    79,
    80,    81,   nil,    35,    36,    69,    70,    71,    72,    73,
    64,    65,    66,    78,    79,    80,    81,   nil,   nil,   105,
    69,    70,    71,    72,    73,    64,    65,    66,    68,    69,
    70,    71,    72,    73,    64,    65,    66,    69,    70,    71,
    72,    73,    64,    65,    66 ]

racc_action_check = [
   155,   131,    98,   155,   155,    16,    51,   155,   103,   155,
   131,   155,   155,   155,   104,   155,   155,    98,    75,   155,
   155,    51,    27,   155,     2,   155,    97,     2,     2,   155,
   155,     2,   139,     2,   139,     2,     2,     2,    74,     2,
     2,    86,    89,    86,    89,    86,    94,     2,   149,     2,
    31,   149,   149,     2,     2,   149,   132,   149,   132,   149,
   149,   149,   151,   149,   149,    31,    85,   151,    85,    86,
    86,   149,    61,   149,    21,    61,    61,   149,   149,    61,
    91,    61,    61,    61,    61,    61,    15,    61,    61,   118,
    62,   118,    35,   118,    60,    61,   145,    61,    33,   145,
   145,    61,    61,   145,    87,   145,   133,   145,   145,   145,
    36,   145,   145,    33,   137,   125,    28,   118,   118,   145,
   102,   145,   142,   102,   102,   145,   145,   102,   143,   102,
   125,   102,   102,   102,    52,   102,   102,    45,    18,    45,
    45,    45,     9,   102,   102,   102,    48,     6,   121,   102,
   102,   121,   121,    18,    12,   121,    12,   121,    12,   121,
   121,   121,     6,   121,   121,    45,    45,   121,   121,     3,
    25,   121,   122,   121,   122,   122,   122,   121,   121,    83,
    47,    83,    12,    12,    49,    25,    49,    49,    49,    81,
   144,    81,    32,    32,    57,   144,     1,    79,    57,    79,
   122,   122,    78,   nil,    78,   116,   116,    83,    83,    80,
   nil,    80,    49,    49,   111,   111,   nil,    81,    81,    57,
   110,   110,    57,    57,   nil,    79,    79,   120,   120,   nil,
    78,    78,    77,   nil,    77,   nil,    77,    80,    80,   146,
   146,   146,   146,   146,   146,   146,   146,    53,    53,    53,
    53,    53,    53,    53,    53,    82,    82,    82,    82,   nil,
    77,    77,   nil,   nil,   146,   113,   113,   113,   113,    10,
   nil,    10,    53,    82,    23,   nil,    23,    67,   nil,    67,
   136,   nil,   136,   113,   nil,    10,    10,    37,   nil,    37,
    23,    23,   nil,    67,    67,   nil,   136,   136,    41,    41,
    41,    41,   nil,    37,    37,    76,    76,    76,    76,    76,
    76,    76,    76,   106,   106,   106,   106,   nil,   nil,    76,
    34,    34,    34,    34,    34,    34,    34,    34,    34,    38,
    38,    38,    38,    38,    38,    38,    38,   101,   101,   101,
   101,   101,   101,   101,   101 ]

racc_action_pointer = [
   nil,   196,    10,   169,   nil,   nil,   133,   nil,   nil,   113,
   250,   nil,   137,   nil,   nil,    65,   -14,   nil,   124,   nil,
   nil,    58,   nil,   255,   nil,   156,   nil,     5,    88,   nil,
   nil,    36,   178,    84,   314,    73,    91,   268,   323,   nil,
   nil,   296,   nil,   nil,   nil,   120,   nil,   158,   132,   167,
   nil,    -8,   117,   241,   nil,   nil,   nil,   177,   nil,   nil,
    78,    58,    76,   nil,   nil,   nil,   nil,   258,   nil,   nil,
   nil,   nil,   nil,   nil,    21,     1,   299,   215,   185,   180,
   192,   172,   253,   162,   nil,    46,    24,    63,   nil,    22,
   nil,    61,   nil,   nil,    27,   nil,   nil,     9,   -12,   nil,
   nil,   331,   106,   -12,    -6,   nil,   311,   nil,   nil,   nil,
   218,   212,   nil,   263,   nil,   nil,   165,   nil,    72,   nil,
   207,   134,   155,   nil,   nil,   101,   nil,   nil,   nil,   nil,
   nil,   -21,    36,    92,   nil,   nil,   261,    82,   nil,    12,
   nil,   nil,   101,   114,   172,    82,   233,   nil,   nil,    34,
   nil,    44,   nil,   nil,   nil,   -14,   nil ]

racc_action_default = [
    -2,   -83,    -1,   -83,   -69,   -18,   -83,    -9,   -23,    -5,
   -83,   -25,   -24,   -27,   -26,   -83,   -83,   -28,   -83,   -36,
   -29,   -83,    -4,   -83,   -30,   -83,   -31,   -83,   -83,   157,
   -19,   -83,    -2,   -83,   -83,   -83,   -83,   -83,   -83,   -76,
   -78,   -79,   -77,   -70,   -81,   -83,   -80,   -65,   -83,   -83,
    -3,   -83,   -83,   -83,    -7,   -37,   -68,   -83,   -20,   -10,
   -83,   -83,   -83,    -8,   -52,   -54,   -55,   -83,    -2,   -48,
   -49,   -51,   -50,   -53,   -83,   -83,   -83,   -83,   -83,   -83,
   -83,   -83,   -79,   -83,   -67,   -83,   -83,   -58,   -32,   -83,
    -6,   -83,    -2,   -63,   -77,   -64,   -62,   -83,   -83,   -17,
   -11,   -47,   -83,   -83,   -83,   -46,   -42,   -43,   -73,   -74,
   -72,   -71,   -75,   -83,   -66,   -82,   -83,   -59,   -83,   -33,
   -83,   -39,   -83,   -12,   -21,   -83,   -56,   -44,   -45,   -60,
   -57,   -83,   -83,   -83,   -15,    -2,   -83,   -83,   -35,   -83,
   -22,    -2,   -83,   -83,   -83,   -40,   -83,   -38,   -34,   -61,
   -16,   -83,   -14,    -2,   -13,   -39,   -41 ]

racc_goto_table = [
     2,    34,    47,    31,   137,   117,    33,     1,    82,   152,
    99,   132,    77,    62,    53,    51,   154,   116,    32,    93,
   115,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    76,   nil,
   nil,   nil,    61,   nil,   129,    85,   nil,   nil,   156,    89,
   106,   108,   109,   110,   111,   nil,   113,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   101,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   102,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   121,   nil,   nil,   125,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   131,   nil,
   nil,   nil,   139,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   146,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   145,   nil,   nil,   nil,   nil,
   nil,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   155 ]

racc_goto_check = [
     2,    19,    18,     5,    20,    24,     5,     1,    22,     4,
    11,     9,    21,     7,    19,     5,     4,    23,     6,    25,
    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,     2,   nil,    24,    18,   nil,   nil,    20,    18,
    22,    22,    22,    22,    22,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     7,     0,   nil,  -135,    -3,    11,   -19,   nil,  -109,
   nil,   -51,   nil,   nil,   nil,   nil,   nil,   nil,   -10,    -9,
  -117,   -26,   -37,   -70,   -82,   -38,   -66 ]

racc_goto_default = [
   nil,   nil,   nil,    18,    22,    25,   nil,   nil,     5,   nil,
     7,   nil,    11,    13,    17,    20,    24,    26,   nil,   nil,
   nil,    67,    41,   nil,   nil,    43,    44 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 "/" => 2,
 "*" => 3,
 "-" => 4,
 "+" => 5,
 "==" => 6,
 "!=" => 7,
 "<" => 8,
 ">" => 9,
 "<=" => 10,
 ">=" => 11,
 "&&" => 12,
 "||" => 13,
 :EOL => 14,
 :DEFVAR => 15,
 :TYPE => 16,
 :IDENT => 17,
 :DEFFUNC => 18,
 "(" => 19,
 ")" => 20,
 :VARREF => 21,
 "," => 22,
 "{" => 23,
 "}" => 24,
 :LABEL => 25,
 :COMMAND => 26,
 :MACRO => 27,
 "=" => 28,
 :COMMENT => 29,
 :IF => 30,
 :THEN => 31,
 :ENDIF => 32,
 :ELSE => 33,
 :ELSIF => 34,
 :FLAG_ON => 35,
 :FLAG_OFF => 36,
 :WHILE => 37,
 :ENDWHILE => 38,
 :SWITCH => 39,
 :ENDSWITCH => 40,
 :CASE => 41,
 :funcall => 42,
 :EVENT_START => 43,
 :EVENT_END => 44,
 :NUMBER => 45,
 :MACPARAM => 46 }

racc_use_result_var = true

racc_nt_base = 47

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'"/"',
'"*"',
'"-"',
'"+"',
'"=="',
'"!="',
'"<"',
'">"',
'"<="',
'">="',
'"&&"',
'"||"',
'EOL',
'DEFVAR',
'TYPE',
'IDENT',
'DEFFUNC',
'"("',
'")"',
'VARREF',
'","',
'"{"',
'"}"',
'LABEL',
'COMMAND',
'MACRO',
'"="',
'COMMENT',
'IF',
'THEN',
'ENDIF',
'ELSE',
'ELSIF',
'FLAG_ON',
'FLAG_OFF',
'WHILE',
'ENDWHILE',
'SWITCH',
'ENDSWITCH',
'CASE',
'funcall',
'EVENT_START',
'EVENT_END',
'NUMBER',
'MACPARAM',
'$start',
'program',
'stmt_list',
'stmt',
'stmt_block',
'comments',
'defvar_list',
'def_var',
'def_func',
'param',
'block_start',
'block_end',
'cmd',
'if_stmt',
'assign',
'callfunc',
'switch_stmt',
'while_stmt',
'args',
'cmp_expr',
'else_stmt',
'cmp_ident',
'expr',
'case_stmt_list',
'case_stmt',
'primary',
'arg']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'sp4.y', 45
  def _reduce_1( val, _values, result )
						result = RootNode.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 60
  def _reduce_2( val, _values, result )
						result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 64
  def _reduce_3( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 68
  def _reduce_4( val, _values, result )
						result.push val[1]
   result
  end
.,.,

 # reduce 5 omitted

module_eval <<'.,.,', 'sp4.y', 74
  def _reduce_6( val, _values, result )
						result.push val[1]
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 78
  def _reduce_7( val, _values, result )
						result.push RawNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 82
  def _reduce_8( val, _values, result )
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 94
  def _reduce_9( val, _values, result )
						result = []
   result
  end
.,.,

 # reduce 10 omitted

module_eval <<'.,.,', 'sp4.y', 99
  def _reduce_11( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 108
  def _reduce_12( val, _values, result )
						result = DefVarNode.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 118
  def _reduce_13( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], val[4], val[7] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 122
  def _reduce_14( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], nil, val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 132
  def _reduce_15( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 136
  def _reduce_16( val, _values, result )
						result.push val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 145
  def _reduce_17( val, _values, result )
						result = BlockNode.new(val[1], val[2])
   result
  end
.,.,

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'sp4.y', 177
  def _reduce_23( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 181
  def _reduce_24( val, _values, result )
						result = CmdNode.new( val, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 185
  def _reduce_25( val, _values, result )
						result = CmdNode.new( val[0].shift, val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 189
  def _reduce_26( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

module_eval <<'.,.,', 'sp4.y', 210
  def _reduce_32( val, _values, result )
						result = CallFuncNode.new( nil, val[0], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 214
  def _reduce_33( val, _values, result )
						result = CallFuncNode.new( nil, val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 218
  def _reduce_34( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], val[4] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 222
  def _reduce_35( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 232
  def _reduce_36( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 236
  def _reduce_37( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 245
  def _reduce_38( val, _values, result )
						result = IfNode.new(val[1],val[3],val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 257
  def _reduce_39( val, _values, result )
						result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 261
  def _reduce_40( val, _values, result )
						result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 265
  def _reduce_41( val, _values, result )
						result = [IfNode.new(val[1], val[3], val[4])]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 281
  def _reduce_42( val, _values, result )
            left = "_PUSH_WORK #{val[0].sub(/\A\$/,"")}"
            right = "_PUSH_VALUE #{val[2]}"
            result = CompareNode.new(val[1], left, right)
						#result = ["_CMPVAL #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						#result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 289
  def _reduce_43( val, _values, result )
            left = "_PUSH_WORK #{val[0].sub(/\A\$/,"")}"
            right = "_PUSH_WORK #{val[2].sub(/\A\$/,"")}"
            result = CompareNode.new(val[1], left, right)
						#result = ["_CMPWK #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						#result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 296
  def _reduce_44( val, _values, result )
            act = "_FLAG_PUSH #{val[2]}"
            result = BoolNode.new( 'CMPID_TRUE', act )
						#result = ["_FLAG_CHECK #{val[2]}"]
						#result.push "FLGOFF"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 303
  def _reduce_45( val, _values, result )
            act = "_FLAG_PUSH #{val[2]}"
            result = BoolNode.new( 'CMPID_FALSE', act )
						#result = ["_FLAG_CHECK #{val[2]}"]
						#result.push "FLGON"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 307
  def _reduce_46( val, _values, result )
            result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 311
  def _reduce_47( val, _values, result )
            result = CompareNode.new(val[1], val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 320
  def _reduce_48( val, _values, result )
						result = 'CMPID_EQ'	#result = 'EQ'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 324
  def _reduce_49( val, _values, result )
						result = 'CMPID_NE'	#result = 'NE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 328
  def _reduce_50( val, _values, result )
						result = 'CMPID_GT'	#result = 'GT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 332
  def _reduce_51( val, _values, result )
						result = 'CMPID_LT'	#result = 'LT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 336
  def _reduce_52( val, _values, result )
						result = 'CMPID_GT_EQ'	#result = 'GE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 340
  def _reduce_53( val, _values, result )
						result = 'CMPID_LT_EQ'	#result = 'LE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 344
  def _reduce_54( val, _values, result )
            result = 'CMPID_AND'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 348
  def _reduce_55( val, _values, result )
            result = 'CMPID_OR'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 358
  def _reduce_56( val, _values, result )
            result = WhileNode.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 367
  def _reduce_57( val, _values, result )
            result = SwitchNode.new(val[1].sub(/\A\$/,""), val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 378
  def _reduce_58( val, _values, result )
            result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 382
  def _reduce_59( val, _values, result )
            result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 386
  def _reduce_60( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 395
  def _reduce_61( val, _values, result )
            result = CaseNode.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 407
  def _reduce_62( val, _values, result )
						result = AssignNode.new(val[0], val[2], :VARREF)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 411
  def _reduce_63( val, _values, result )
						result = AssignNode.new(val[0], val[2], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 415
  def _reduce_64( val, _values, result )
						result = AssignNode.new(val[0], val[2], funcall)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 424
  def _reduce_65( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 428
  def _reduce_66( val, _values, result )
						result = [val[0], ['('] + val[2] + [')'] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 432
  def _reduce_67( val, _values, result )
            result = [ val[0], "()" ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 436
  def _reduce_68( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 440
  def _reduce_69( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

 # reduce 70 omitted

module_eval <<'.,.,', 'sp4.y', 454
  def _reduce_71( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 458
  def _reduce_72( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 462
  def _reduce_73( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 466
  def _reduce_74( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 470
  def _reduce_75( val, _values, result )
						result = val
   result
  end
.,.,

 # reduce 76 omitted

 # reduce 77 omitted

 # reduce 78 omitted

 # reduce 79 omitted

 # reduce 80 omitted

module_eval <<'.,.,', 'sp4.y', 499
  def _reduce_81( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 504
  def _reduce_82( val, _values, result )
						result.push val[1]
						result.push val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module PmScript
