#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sp4.y".
#

require 'racc/parser'


#
#	ポケモン用スクリプトコンパイラ
#


module PmScript

  class Parser < Racc::Parser

module_eval <<'..end sp4.y modeval..id82664ac061', 'sp4.y', 561

def initialize
end

#予約語定義
RESERVED = {
	'IF'	=> :IF,
	'THEN'	=> :THEN,
	'ELSE'	=> :ELSE,
	'ELSIF'	=> :ELSIF,
	'ENDIF'	=> :ENDIF,
	'DEFFUNC'	=> :DEFFUNC,
	'FLAG_ON'	=> :FLAG_ON,
	'FLAG_OFF'	=> :FLAG_OFF,
  'EVENT_START' => :EVENT_START,
  'EVENT_END' => :EVENT_END,
  'INIT_EVENT_START' => :INIT_EVENT_START,
  'INIT_EVENT_END' => :INIT_EVENT_END,
  'SWITCH' => :SWITCH,
  'CASE' => :CASE,
  'ENDSWITCH' => :ENDSWITCH,
  'WHILE' => :WHILE,
  'ENDWHILE' => :ENDWHILE,
  'DEFINE_LOCAL' => :DEFINE_LOCAL,
};

#予約型定義
RESERVED_TYPE = {
	'LWORK'	=> :LWORK,
	'LABEL' => :LABEL_TYPE,
};

def parse( f )
	@q = []
	@nowlineno = 1
	@incomment = false
	f.each do |line_org|
		line = line_org.strip
		until line.empty? do
			if @incomment == true then
				if line =~ /.*\*\// then
					@incomment = false
					pushq [ :COMMENT, $&]
					line = $'
				else
					pushq [ :COMMENT, line]
					line = ""
				end
			else
				case line
				when /\A\s+/
					;
				when /\A\/\/.*$/
          #Ｃ＋＋形式コメント定義
					pushq [ :COMMENT, $& ]

				when /^\s*$/, /\A\#.*/
          #アセンブラコメント定義
					pushq [ :COMMENT, $&]

				when /\A\/\*.*\*\//
          #Ｃ形式コメント定義
					pushq [ :COMMENT, $&]

				when /\A\.[a-zA-Z_]+.*$/
          #アセンブラマクロ定義
					pushq [ :MACRO, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*:/
          #アセンブララベル定義
					pushq [ :LABEL, $& ]

				when /\A_[A-Z0-9][a-zA-Z0-9_]*/
          #スクリプトコマンド定義（＿で開始する）
					pushq [ :COMMAND, $& ]

				when /\A0x[0-9a-fA-F]+/, /\A\d+/
          #数値定義（0xで始まる１６進数、あるいは１０進数）
					pushq [ :NUMBER, $& ]

				when /\A\$[a-zA-Z][a-zA-Z0-9_]*/
          #変数定義（＄で始まる）
					pushq [ :VARREF, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*/
          #識別子定義あるいは型定義
					if RESERVED.has_key? $& then
						pushq [ RESERVED[$&], $&.intern ]
					elsif RESERVED_TYPE.has_key? $& then
						pushq [ :TYPE, $&.intern ]
					else
						pushq [ :IDENT, $& ]
					end

				when /\A\\[a-zA-Z_][a-zA-Z0-9_]*/
          # \から始まる識別子はアセンブラマクロパラメータ
					pushq [ :MACPARAM, $& ]

				when /\A==/,/\A!=/,/\A\<=/,/\A\>=/,/\A>/,/\A</,/\A\&\&/,/\A\|\|/
          # 比較演算子
					pushq [ $&, $& ]

        when /\A\+=/, /\A\-=/
          # 複合代入演算子
          pushq [ :OP_COMP_ASSIGN, $& ]

				when /\A\/\*.*/
          #C形式コメント開始
					pushq [ :COMMENT, $& ]
					@incomment = true

				when /\A[\+\-\*\/=(){},]/
          #演算子、カッコなどの記号
					pushq [ $&, $& ]
				else
					raise RuntimeError, "#{@fname}:#{@nowlineno}: fatal error! \{#{line_org}\}"
				end
				line = $'
				printf( "\#NOW LINE(%4d) #{line}\n", @nowlineno)
			end
		end
		pushq [ :EOL, nil ]
		@nowlineno += 1
	end
	pushq [ false, nil ]
	
	@yydebug = true
	do_parse
end

def next_token
	value = @q.shift
	@lineno = value.last
	value.delete_at(2)
	value
end

def pushq value
	value << @nowlineno
	@q.push value
end


def on_error( t, v, values )
    if v then
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@fname}:#{@lineno}: syntax error on #{v.inspect}"
  end


..end sp4.y modeval..id82664ac061

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 51, :_reduce_1,
 0, 52, :_reduce_2,
 3, 52, :_reduce_3,
 2, 52, :_reduce_4,
 2, 52, :_reduce_none,
 4, 52, :_reduce_6,
 3, 52, :_reduce_7,
 4, 52, :_reduce_8,
 0, 56, :_reduce_9,
 2, 56, :_reduce_none,
 3, 56, :_reduce_none,
 3, 56, :_reduce_12,
 4, 56, :_reduce_13,
 8, 58, :_reduce_14,
 7, 58, :_reduce_15,
 1, 59, :_reduce_16,
 3, 59, :_reduce_17,
 4, 54, :_reduce_18,
 1, 54, :_reduce_none,
 2, 60, :_reduce_none,
 3, 60, :_reduce_none,
 2, 61, :_reduce_none,
 3, 61, :_reduce_none,
 1, 53, :_reduce_24,
 1, 53, :_reduce_25,
 1, 53, :_reduce_26,
 1, 53, :_reduce_27,
 1, 53, :_reduce_none,
 1, 53, :_reduce_none,
 1, 53, :_reduce_none,
 1, 53, :_reduce_none,
 1, 53, :_reduce_none,
 1, 53, :_reduce_none,
 1, 53, :_reduce_none,
 3, 66, :_reduce_35,
 4, 66, :_reduce_36,
 6, 66, :_reduce_37,
 5, 66, :_reduce_38,
 1, 55, :_reduce_39,
 2, 55, :_reduce_40,
 6, 63, :_reduce_41,
 0, 71, :_reduce_42,
 2, 71, :_reduce_43,
 5, 71, :_reduce_44,
 3, 70, :_reduce_45,
 3, 70, :_reduce_46,
 4, 70, :_reduce_47,
 4, 70, :_reduce_48,
 4, 70, :_reduce_49,
 4, 70, :_reduce_50,
 3, 70, :_reduce_51,
 3, 70, :_reduce_52,
 1, 72, :_reduce_53,
 1, 72, :_reduce_54,
 1, 72, :_reduce_55,
 1, 72, :_reduce_56,
 1, 72, :_reduce_57,
 1, 72, :_reduce_58,
 1, 72, :_reduce_59,
 1, 72, :_reduce_60,
 5, 68, :_reduce_61,
 5, 67, :_reduce_62,
 0, 74, :_reduce_63,
 1, 74, :_reduce_64,
 2, 74, :_reduce_65,
 4, 75, :_reduce_66,
 3, 64, :_reduce_67,
 3, 64, :_reduce_68,
 3, 64, :_reduce_69,
 3, 65, :_reduce_70,
 3, 65, :_reduce_71,
 2, 62, :_reduce_72,
 4, 62, :_reduce_73,
 3, 62, :_reduce_74,
 2, 62, :_reduce_75,
 1, 62, :_reduce_76,
 2, 62, :_reduce_77,
 1, 62, :_reduce_78,
 2, 57, :_reduce_79,
 1, 73, :_reduce_none,
 3, 73, :_reduce_81,
 3, 73, :_reduce_82,
 3, 73, :_reduce_83,
 3, 73, :_reduce_84,
 3, 73, :_reduce_85,
 1, 76, :_reduce_none,
 1, 76, :_reduce_none,
 1, 76, :_reduce_none,
 1, 77, :_reduce_none,
 1, 77, :_reduce_none,
 1, 69, :_reduce_91,
 3, 69, :_reduce_92 ]

racc_reduce_n = 93

racc_shift_n = 172

racc_action_table = [
    18,    20,    61,    24,    81,   133,    28,    81,     6,    20,
    13,    16,    19,   158,    23,    25,     6,    62,   152,   150,
    50,    52,    15,    53,    21,    90,   155,    95,   156,    31,
     4,     8,    10,    14,    18,    20,    36,    24,    59,    38,
    28,    23,     6,   139,    13,    16,    19,   106,    23,    25,
    23,    48,    49,    57,    50,    87,    15,    53,    21,   149,
    14,    38,   138,    31,     4,     8,    10,    14,    18,    20,
   147,    24,    56,    23,    28,   130,     6,   137,    13,    16,
    19,   128,    23,    25,    38,    48,    49,    50,    87,    23,
    15,   100,    21,    37,   102,    38,   136,    31,     4,     8,
    10,    14,    18,    20,    44,    24,    45,    38,    28,   121,
     6,    81,    13,    16,    19,   101,    23,    25,    48,    49,
    41,    42,    48,    49,    15,    50,    21,    64,   104,    66,
   135,    31,     4,     8,    10,    14,    18,    20,   159,    24,
    23,    23,    28,    38,     6,    40,    13,    16,    19,   125,
    23,    25,    38,   157,   152,   150,    48,    49,    15,   124,
    21,    82,    83,    84,    85,    31,     4,     8,    10,    14,
    18,    20,    44,    24,    45,   163,    28,    81,     6,   131,
    13,    16,    19,    20,    23,    25,   142,   143,    41,    42,
     6,    65,    15,    39,    21,    82,    83,    84,    85,    31,
     4,     8,    10,    14,    18,    20,   107,    24,   109,   108,
    28,   110,     6,   161,    13,    16,    19,    67,    23,    25,
    50,    87,    98,    53,    50,    87,    15,   140,    21,    50,
    87,   154,    53,    31,     4,     8,    10,    14,    50,    87,
    89,    53,    50,    87,   164,   115,    50,    87,    50,    87,
   165,    48,    49,    50,    87,    48,    49,    82,    83,    68,
    48,    49,    50,    87,    81,    53,    44,    92,    45,    48,
    49,   145,   125,    48,    49,    82,    83,    48,    49,    48,
    49,    91,    41,    42,    48,    49,    34,     3,   nil,   nil,
   nil,   nil,   nil,    48,    49,    73,    75,    76,    77,    78,
    69,    70,    71,    73,    75,    76,    77,    78,    69,    70,
    71,   nil,    44,   nil,    45,    44,   nil,    45,   nil,   168,
    82,    83,    84,    85,   nil,   nil,   nil,    99,    41,    42,
   nil,    41,    42,    82,    83,    84,    85,   123,    73,    75,
    76,    77,    78,    69,    70,    71,   nil,   nil,   nil,   nil,
   123,   113,    73,    75,    76,    77,    78,    69,    70,    71,
    72,    73,    75,    76,    77,    78,    69,    70,    71,    73,
    75,    76,    77,    78,    69,    70,    71 ]

racc_action_check = [
   170,   170,    28,   170,   144,    97,   170,    97,   170,   157,
   170,   170,   170,   144,   170,   170,   157,    28,   170,   170,
    16,    16,   170,    16,   170,    55,   141,    58,   141,   170,
   170,   170,   170,   170,     2,     2,     6,     2,    24,    55,
     2,    58,     2,   110,     2,     2,     2,    63,     2,     2,
     6,    16,    16,    21,   125,   125,     2,   125,     2,   131,
    58,    63,   109,     2,     2,     2,     2,     2,   167,   167,
   129,   167,    20,   131,   167,    94,   167,   108,   167,   167,
   167,    93,   167,   167,   129,   125,   125,    87,    87,    94,
   167,    61,   167,     7,    61,    93,   107,   167,   167,   167,
   167,   167,   162,   162,    25,   162,    25,     7,   162,    86,
   162,    86,   162,   162,   162,    61,   162,   162,    87,    87,
    25,    25,    61,    61,   162,    62,   162,    30,    62,    35,
   100,   162,   162,   162,   162,   162,   134,   134,   148,   134,
    18,    30,   134,    35,   134,    14,   134,   134,   134,    92,
   134,   134,   148,   142,   134,   134,    62,    62,   134,    91,
   134,   114,   114,   114,   114,   134,   134,   134,   134,   134,
    96,    96,   150,    96,   150,   153,    96,   153,    96,    96,
    96,    96,    96,   164,    96,    96,   124,   124,   150,   150,
   164,    31,    96,     8,    96,    51,    51,    51,    51,    96,
    96,    96,    96,    96,   111,   111,    67,   111,    68,    67,
   111,    68,   111,   151,   111,   111,   111,    41,   111,   111,
    59,    59,    59,    59,    85,    85,   111,   111,   111,   135,
   135,   135,   135,   111,   111,   111,   111,   111,    52,    52,
    52,    52,    80,    80,   155,    80,    84,    84,    82,    82,
   156,    59,    59,    83,    83,    85,    85,   119,   119,    42,
   135,   135,    81,    81,    47,    81,    74,    57,    74,    52,
    52,   126,   126,    80,    80,   120,   120,    84,    84,    82,
    82,    56,    74,    74,    83,    83,     3,     1,   nil,   nil,
   nil,   nil,   nil,    81,    81,   160,   160,   160,   160,   160,
   160,   160,   160,    60,    60,    60,    60,    60,    60,    60,
    60,   nil,    15,   nil,    15,    44,   nil,    44,   nil,   160,
    88,    88,    88,    88,   nil,   nil,   nil,    60,    15,    15,
   nil,    44,    44,   122,   122,   122,   122,    88,    79,    79,
    79,    79,    79,    79,    79,    79,   nil,   nil,   nil,   nil,
   122,    79,    43,    43,    43,    43,    43,    43,    43,    43,
    43,   112,   112,   112,   112,   112,   112,   112,   112,    45,
    45,    45,    45,    45,    45,    45,    45 ]

racc_action_pointer = [
   nil,   287,    20,   286,   nil,   nil,    22,    79,   176,   nil,
   nil,   nil,   nil,   nil,   128,   294,     3,   nil,   112,   nil,
    56,    33,   nil,   nil,    20,    86,   nil,   nil,   -25,   nil,
   113,   174,   nil,   nil,   nil,   115,   nil,   nil,   nil,   nil,
   nil,   199,   241,   346,   297,   363,   nil,   243,   nil,   nil,
   nil,   193,   221,   nil,   nil,    11,   264,   253,    13,   203,
   297,    74,   108,    33,   nil,   nil,   nil,   189,   191,   nil,
   nil,   nil,   nil,   nil,   248,   nil,   nil,   nil,   nil,   332,
   225,   245,   231,   236,   229,   207,    90,    70,   318,   nil,
   nil,   141,   109,    67,    61,   nil,   156,   -14,   nil,   nil,
   112,   nil,   nil,   nil,   nil,   nil,   nil,    77,    58,    43,
    24,   190,   355,   nil,   159,   nil,   nil,   nil,   nil,   255,
   273,   nil,   331,   nil,   167,    37,   232,   nil,   nil,    56,
   nil,    45,   nil,   nil,   122,   212,   nil,   nil,   nil,   nil,
   nil,     7,   139,   nil,   -17,   nil,   nil,   nil,   124,   nil,
   154,   182,   nil,   156,   nil,   230,   230,    -6,   nil,   nil,
   289,   nil,    88,   nil,   168,   nil,   nil,    54,   nil,   nil,
   -14,   nil ]

racc_action_default = [
    -2,   -93,    -1,   -93,   -76,   -31,   -93,   -93,   -93,   -32,
   -78,   -34,   -33,   -24,   -93,   -93,   -25,   -19,    -5,   -27,
   -93,   -93,    -9,   -39,   -93,   -93,   -26,   -28,   -93,   -29,
   -93,   -93,   -30,    -4,   172,   -93,   -20,    -7,   -40,   -77,
   -79,   -93,   -93,   -93,   -93,   -93,   -91,   -72,   -86,   -88,
   -87,   -89,   -93,   -90,   -80,   -93,   -93,   -93,    -2,   -93,
   -93,   -93,   -93,   -93,    -3,   -75,   -21,   -93,   -93,   -57,
   -59,   -60,    -2,   -53,   -93,   -54,   -56,   -55,   -58,   -93,
   -93,   -93,   -93,   -93,   -93,   -93,   -93,   -93,   -89,   -74,
    -8,   -93,   -63,   -93,   -93,   -10,   -93,   -93,   -35,    -2,
   -87,   -69,   -67,   -68,   -70,   -71,    -6,   -93,   -93,   -93,
   -93,   -93,   -52,   -51,   -45,   -46,   -92,   -83,   -84,   -82,
   -81,   -73,   -93,   -85,   -93,   -93,   -93,   -64,   -11,   -93,
   -12,   -93,   -18,   -36,   -42,   -93,   -47,   -48,   -49,   -50,
   -61,   -93,   -93,   -16,   -93,   -62,   -65,   -13,   -93,   -22,
   -93,   -93,    -2,   -93,   -38,   -93,   -93,   -93,    -2,   -23,
   -93,   -41,   -43,   -37,   -93,   -17,   -15,   -66,    -2,   -14,
   -42,   -44 ]

racc_goto_table = [
     2,    43,    35,    47,   151,   166,     1,   127,   103,   105,
   132,    60,   169,    80,    55,   141,   126,    88,    94,    58,
   116,   nil,   nil,   nil,   nil,   nil,    63,   nil,   nil,   nil,
    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    86,
   171,   146,   nil,   nil,   nil,   114,    97,   117,   118,   119,
   120,   nil,   122,   nil,    93,   nil,   nil,   nil,    96,   nil,
   112,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   111,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   129,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   134,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   144,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   153,   nil,   nil,   nil,   nil,   148,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   160,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   162,   nil,   nil,   nil,   nil,   nil,   167,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   170 ]

racc_goto_check = [
     2,    20,     5,    19,    21,     4,     1,    25,    26,    26,
    11,    20,     4,    22,     5,     9,    24,    23,     7,     6,
    27,   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
    21,    25,   nil,   nil,   nil,    23,    19,    23,    23,    23,
    23,   nil,    23,   nil,     5,   nil,   nil,   nil,     2,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,     5,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    20,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     6,     0,   nil,  -152,    -4,    -3,   -40,   nil,  -109,
   nil,   -86,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -13,
   -14,  -130,   -32,   -35,   -76,   -85,   -53,   -61 ]

racc_goto_default = [
   nil,   nil,   nil,    30,    33,     7,   nil,    11,    17,   nil,
    22,   nil,    26,    27,    29,    32,     5,     9,    12,   nil,
   nil,   nil,    74,    51,   nil,   nil,    54,    46 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 "/" => 2,
 "*" => 3,
 "-" => 4,
 "+" => 5,
 "==" => 6,
 "!=" => 7,
 "<" => 8,
 ">" => 9,
 "<=" => 10,
 ">=" => 11,
 "&&" => 12,
 "||" => 13,
 :EOL => 14,
 :DEFFUNC => 15,
 :TYPE => 16,
 :IDENT => 17,
 "(" => 18,
 ")" => 19,
 :VARREF => 20,
 "," => 21,
 "{" => 22,
 "}" => 23,
 :LABEL => 24,
 :COMMAND => 25,
 :MACRO => 26,
 "=" => 27,
 :COMMENT => 28,
 :IF => 29,
 :THEN => 30,
 :ENDIF => 31,
 :ELSE => 32,
 :ELSIF => 33,
 :FLAG_ON => 34,
 :FLAG_OFF => 35,
 :WHILE => 36,
 :ENDWHILE => 37,
 :SWITCH => 38,
 :ENDSWITCH => 39,
 :CASE => 40,
 :funcall => 41,
 :OP_COMP_ASSIGN => 42,
 :EVENT_START => 43,
 :EVENT_END => 44,
 :INIT_EVENT_START => 45,
 :INIT_EVENT_END => 46,
 :DEFINE_LOCAL => 47,
 :NUMBER => 48,
 :MACPARAM => 49 }

racc_use_result_var = true

racc_nt_base = 50

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'"/"',
'"*"',
'"-"',
'"+"',
'"=="',
'"!="',
'"<"',
'">"',
'"<="',
'">="',
'"&&"',
'"||"',
'EOL',
'DEFFUNC',
'TYPE',
'IDENT',
'"("',
'")"',
'VARREF',
'","',
'"{"',
'"}"',
'LABEL',
'COMMAND',
'MACRO',
'"="',
'COMMENT',
'IF',
'THEN',
'ENDIF',
'ELSE',
'ELSIF',
'FLAG_ON',
'FLAG_OFF',
'WHILE',
'ENDWHILE',
'SWITCH',
'ENDSWITCH',
'CASE',
'funcall',
'OP_COMP_ASSIGN',
'EVENT_START',
'EVENT_END',
'INIT_EVENT_START',
'INIT_EVENT_END',
'DEFINE_LOCAL',
'NUMBER',
'MACPARAM',
'$start',
'program',
'stmt_list',
'stmt',
'stmt_block',
'comments',
'def_local_list',
'def_local',
'def_func',
'param',
'block_start',
'block_end',
'cmd',
'if_stmt',
'assign',
'compound_assign',
'callfunc',
'switch_stmt',
'while_stmt',
'args',
'cmp_expr',
'else_stmt',
'cmp_ident',
'expr',
'case_stmt_list',
'case_stmt',
'primary',
'arg']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'sp4.y', 45
  def _reduce_1( val, _values, result )
						result = RootNode.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 60
  def _reduce_2( val, _values, result )
						result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 64
  def _reduce_3( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 68
  def _reduce_4( val, _values, result )
						result.push val[1]
   result
  end
.,.,

 # reduce 5 omitted

module_eval <<'.,.,', 'sp4.y', 74
  def _reduce_6( val, _values, result )
						result.push val[1]
						#result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 78
  def _reduce_7( val, _values, result )
						#result.push RawNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 82
  def _reduce_8( val, _values, result )
						#result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 94
  def _reduce_9( val, _values, result )
            result = []
   result
  end
.,.,

 # reduce 10 omitted

 # reduce 11 omitted

module_eval <<'.,.,', 'sp4.y', 100
  def _reduce_12( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 104
  def _reduce_13( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 113
  def _reduce_14( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], val[4], val[7] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 117
  def _reduce_15( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], nil, val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 127
  def _reduce_16( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 131
  def _reduce_17( val, _values, result )
						result.push val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 140
  def _reduce_18( val, _values, result )
						result = BlockNode.new(val[1], val[2])
   result
  end
.,.,

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'sp4.y', 172
  def _reduce_24( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 176
  def _reduce_25( val, _values, result )
						result = CmdNode.new( val, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 180
  def _reduce_26( val, _values, result )
						result = CmdNode.new( val[0].shift, val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 184
  def _reduce_27( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

 # reduce 33 omitted

 # reduce 34 omitted

module_eval <<'.,.,', 'sp4.y', 207
  def _reduce_35( val, _values, result )
						result = CallFuncNode.new( nil, val[0], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 211
  def _reduce_36( val, _values, result )
						result = CallFuncNode.new( nil, val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 215
  def _reduce_37( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], val[4] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 219
  def _reduce_38( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 229
  def _reduce_39( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 233
  def _reduce_40( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 242
  def _reduce_41( val, _values, result )
						result = IfNode.new(val[1],val[3],val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 254
  def _reduce_42( val, _values, result )
						result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 258
  def _reduce_43( val, _values, result )
						result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 262
  def _reduce_44( val, _values, result )
						result = [IfNode.new(val[1], val[3], val[4])]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 279
  def _reduce_45( val, _values, result )
            left = "_PUSH_WORK #{val[0].sub(/\A\$/,"")}"
            right = "_PUSH_VALUE #{val[2]}"
            result = CompareNode.new(val[1], left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 285
  def _reduce_46( val, _values, result )
            left = "_PUSH_WORK #{val[0].sub(/\A\$/,"")}"
            right = "_PUSH_WORK #{val[2].sub(/\A\$/,"")}"
            result = CompareNode.new(val[1], left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 291
  def _reduce_47( val, _values, result )
            left = "_PUSH_FLAG #{val[2]}"
            right = "_PUSH_VALUE TRUE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 297
  def _reduce_48( val, _values, result )
            left = "_PUSH_FLAG #{val[2].sub(/\A\$/,"")}"
            right = "_PUSH_VALUE TRUE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 303
  def _reduce_49( val, _values, result )
            left = "_PUSH_FLAG #{val[2]}"
            right = "_PUSH_VALUE FALSE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 309
  def _reduce_50( val, _values, result )
            left = "_PUSH_FLAG #{val[2].sub(/\A\$/,"")}"
            right = "_PUSH_VALUE FALSE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 313
  def _reduce_51( val, _values, result )
            result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 317
  def _reduce_52( val, _values, result )
            result = LogicalCompareNode.new(val[1], val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 326
  def _reduce_53( val, _values, result )
						result = 'CMPID_EQ'	#result = 'EQ'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 330
  def _reduce_54( val, _values, result )
						result = 'CMPID_NE'	#result = 'NE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 334
  def _reduce_55( val, _values, result )
						result = 'CMPID_GT'	#result = 'GT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 338
  def _reduce_56( val, _values, result )
						result = 'CMPID_LT'	#result = 'LT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 342
  def _reduce_57( val, _values, result )
						result = 'CMPID_GT_EQ'	#result = 'GE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 346
  def _reduce_58( val, _values, result )
						result = 'CMPID_LT_EQ'	#result = 'LE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 350
  def _reduce_59( val, _values, result )
            result = 'CMPID_AND'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 354
  def _reduce_60( val, _values, result )
            result = 'CMPID_OR'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 364
  def _reduce_61( val, _values, result )
            result = WhileNode.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 373
  def _reduce_62( val, _values, result )
            result = SwitchNode.new(val[1].sub(/\A\$/,""), val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 384
  def _reduce_63( val, _values, result )
            result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 388
  def _reduce_64( val, _values, result )
            result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 392
  def _reduce_65( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 401
  def _reduce_66( val, _values, result )
            result = CaseNode.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 413
  def _reduce_67( val, _values, result )
						result = AssignNode.new(val[0], val[2], :VARREF)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 417
  def _reduce_68( val, _values, result )
						result = AssignNode.new(val[0], val[2], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 421
  def _reduce_69( val, _values, result )
						result = AssignNode.new(val[0], val[2], funcall)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 431
  def _reduce_70( val, _values, result )
              result = CompoundAssignNode.new(val[0], val[2], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 435
  def _reduce_71( val, _values, result )
              result = CompoundAssignNode.new(val[0], val[2], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 444
  def _reduce_72( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 448
  def _reduce_73( val, _values, result )
						result = [val[0], ['('] + val[2] + [')'] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 452
  def _reduce_74( val, _values, result )
            result = [ val[0], "()" ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 456
  def _reduce_75( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 460
  def _reduce_76( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 464
  def _reduce_77( val, _values, result )
            result = [ val[0], val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 468
  def _reduce_78( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 477
  def _reduce_79( val, _values, result )
            result = DefLocalVarNode.new( val[1] )
   result
  end
.,.,

 # reduce 80 omitted

module_eval <<'.,.,', 'sp4.y', 491
  def _reduce_81( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 495
  def _reduce_82( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 499
  def _reduce_83( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 503
  def _reduce_84( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 507
  def _reduce_85( val, _values, result )
						result = val
   result
  end
.,.,

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

module_eval <<'.,.,', 'sp4.y', 536
  def _reduce_91( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 541
  def _reduce_92( val, _values, result )
						result.push val[1]
						result.push val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module PmScript
