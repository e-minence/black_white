#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sp4.y".
#

require 'racc/parser'


#
#	ポケモン用スクリプトコンパイラ
#


module PmScript

  class Parser < Racc::Parser

module_eval <<'..end sp4.y modeval..id612306f327', 'sp4.y', 444

def initialize
end

#予約語定義
RESERVED = {
	'IF'	=> :IF,
	'THEN'	=> :THEN,
	'ELSE'	=> :ELSE,
	'ELSIF'	=> :ELSIF,
	'ENDIF'	=> :ENDIF,
	'DEFVAR'	=> :DEFVAR,
	'DEFFUNC'	=> :DEFFUNC,
	'FLAG_ON'	=> :FLAG_ON,
	'FLAG_OFF'	=> :FLAG_OFF,
  'EVENT_START' => :EVENT_START,
  'EVENT_END' => :EVENT_END
};

#予約型定義
RESERVED_TYPE = {
	'LWORK'	=> :LWORK,
	'LABEL' => :LABEL_TYPE,
};

def parse( f )
	@q = []
	@nowlineno = 1
	@incomment = false
	f.each do |line_org|
		line = line_org.strip
		until line.empty? do
			if @incomment == true then
				if line =~ /.*\*\// then
					@incomment = false
					pushq [ :COMMENT, $&]
					line = $'
				else
					pushq [ :COMMENT, line]
					line = ""
				end
			else
				case line
				when /\A\s+/
					;
				when /\A\/\/.*$/
          #Ｃ＋＋形式コメント定義
					pushq [ :COMMENT, $& ]

				when /^\s*$/, /\A\#.*/
          #アセンブラコメント定義
					pushq [ :COMMENT, $&]

				when /\A\/\*.*\*\//
          #Ｃ形式コメント定義
					pushq [ :COMMENT, $&]

				when /\A\.[a-zA-Z_]+.*$/
          #アセンブラマクロ定義
					pushq [ :MACRO, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*:/
          #アセンブララベル定義
					pushq [ :LABEL, $& ]

				when /\A_[A-Z0-9][a-zA-Z0-9_]*/
          #スクリプトコマンド定義（＿で開始する）
					pushq [ :COMMAND, $& ]

				when /\A0x[0-9a-fA-F]+/, /\A\d+/
          #数値定義（0xで始まる１６進数、あるいは１０進数）
					pushq [ :NUMBER, $& ]

				when /\A\$[a-zA-Z][a-zA-Z0-9_]*/
          #変数定義（＄で始まる）
					pushq [ :VARREF, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*/
          #識別子定義あるいは型定義
					if RESERVED.has_key? $& then
						pushq [ RESERVED[$&], $&.intern ]
					elsif RESERVED_TYPE.has_key? $& then
						pushq [ :TYPE, $&.intern ]
					else
						pushq [ :IDENT, $& ]
					end

				when /\A\\[a-zA-Z_][a-zA-Z0-9_]*/
          # \から始まる識別子はアセンブラマクロパラメータ
					pushq [ :MACPARAM, $& ]

				when /\A==/,/\A!=/,/\A\<=/,/\A\>=/,/\A>/,/\A</
          # 比較演算子
					pushq [ $&, $& ]

				when /\A\/\*.*/
          #C形式コメント開始
					pushq [ :COMMENT, $& ]
					@incomment = true

				when /\A[\+\-\*\/=(){},]/
          #演算子、カッコなどの記号
					pushq [ $&, $& ]
				else
					raise RuntimeError, "#{@fname}:#{@nowlineno}: fatal error! \{#{line_org}\}"
				end
				line = $'
				printf( "\#NOW LINE(%4d) #{line}\n", @nowlineno)
			end
		end
		pushq [ :EOL, nil ]
		@nowlineno += 1
	end
	pushq [ false, nil ]
	
	@yydebug = true
	do_parse
end

def next_token
	value = @q.shift
	@lineno = value.last
	value.delete_at(2)
	value
end

def pushq value
	value << @nowlineno
	@q.push value
end


def on_error( t, v, values )
    if v then
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@fname}:#{@lineno}: syntax error on #{v.inspect}"
  end


..end sp4.y modeval..id612306f327

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 41, :_reduce_1,
 0, 42, :_reduce_2,
 3, 42, :_reduce_3,
 2, 42, :_reduce_4,
 2, 42, :_reduce_none,
 4, 42, :_reduce_6,
 3, 42, :_reduce_7,
 4, 42, :_reduce_8,
 0, 46, :_reduce_9,
 2, 46, :_reduce_none,
 3, 46, :_reduce_11,
 3, 47, :_reduce_12,
 8, 48, :_reduce_13,
 7, 48, :_reduce_14,
 1, 49, :_reduce_15,
 3, 49, :_reduce_16,
 4, 44, :_reduce_17,
 1, 44, :_reduce_none,
 2, 50, :_reduce_none,
 3, 50, :_reduce_none,
 2, 51, :_reduce_none,
 3, 51, :_reduce_none,
 1, 43, :_reduce_23,
 1, 43, :_reduce_24,
 1, 43, :_reduce_25,
 1, 43, :_reduce_26,
 1, 43, :_reduce_none,
 1, 43, :_reduce_none,
 1, 43, :_reduce_none,
 3, 55, :_reduce_30,
 4, 55, :_reduce_31,
 6, 55, :_reduce_32,
 5, 55, :_reduce_33,
 1, 45, :_reduce_34,
 2, 45, :_reduce_35,
 7, 53, :_reduce_36,
 0, 58, :_reduce_37,
 2, 58, :_reduce_38,
 6, 58, :_reduce_39,
 3, 57, :_reduce_40,
 3, 57, :_reduce_41,
 4, 57, :_reduce_42,
 4, 57, :_reduce_43,
 1, 59, :_reduce_44,
 1, 59, :_reduce_45,
 1, 59, :_reduce_46,
 1, 59, :_reduce_47,
 1, 59, :_reduce_48,
 1, 59, :_reduce_49,
 3, 54, :_reduce_50,
 3, 54, :_reduce_51,
 3, 54, :_reduce_52,
 2, 52, :_reduce_53,
 4, 52, :_reduce_54,
 3, 52, :_reduce_55,
 2, 52, :_reduce_56,
 1, 52, :_reduce_57,
 1, 60, :_reduce_none,
 3, 60, :_reduce_59,
 3, 60, :_reduce_60,
 3, 60, :_reduce_61,
 3, 60, :_reduce_62,
 3, 60, :_reduce_63,
 1, 61, :_reduce_none,
 1, 61, :_reduce_none,
 1, 61, :_reduce_none,
 1, 62, :_reduce_none,
 1, 62, :_reduce_none,
 1, 56, :_reduce_69,
 3, 56, :_reduce_70 ]

racc_reduce_n = 71

racc_shift_n = 134

racc_action_table = [
    15,    60,    50,    19,    23,    23,    65,     8,    35,    11,
    11,    13,    16,    17,    32,    21,     4,    21,    70,   115,
   117,    31,    46,    21,    71,    15,    76,    77,    19,    23,
     9,    10,     8,    31,    11,   103,    13,    16,    17,    33,
    21,     4,    46,   111,    71,   119,   118,    46,    75,    71,
    15,    41,    43,    19,    23,     9,    10,     8,    21,    11,
    31,    13,    16,    17,   105,    21,     4,    46,    83,    71,
    30,    41,    43,   112,   113,    15,    41,    43,    19,    23,
     9,    10,     8,    31,    11,    31,    13,    16,    17,   106,
    21,     4,    21,    23,   115,   117,    41,    43,    11,    46,
    15,    71,   109,    19,    23,     9,    10,     8,    47,    11,
    92,    13,    16,    17,    48,    21,     4,    46,    91,    38,
    46,    40,    71,    46,    40,    71,   107,    40,    41,    43,
     9,    10,    46,    90,    71,    46,    84,    71,    81,    40,
    46,    89,    71,    72,    40,    26,    41,    43,    88,    41,
    43,    64,    41,    43,   102,    62,    75,    26,    87,    28,
    29,    41,    43,    86,    41,    43,    95,   120,    75,    41,
    43,    28,    29,    76,    77,    78,    79,    61,    67,    68,
    41,    43,    82,    96,    76,    77,    78,    79,    54,    55,
    56,    57,    51,    52,    96,    76,    77,    78,    79,    76,
    77,    78,    79,   121,   124,   122,    76,    77,    58,    75,
   127,   128,    25,   129,    59,   131,     3 ]

racc_action_check = [
   132,    29,    24,   132,   132,   120,    34,   132,    11,   132,
   120,   132,   132,   132,     8,   132,   132,    24,    37,   132,
   132,    34,    76,    11,    76,     2,   100,   100,     2,     2,
   132,   132,     2,    37,     2,    82,     2,     2,     2,     9,
     2,     2,    78,    92,    78,   110,   108,    77,   108,    77,
   123,    76,    76,   123,   123,     2,     2,   123,    92,   123,
   110,   123,   123,   123,    87,   123,   123,    79,    49,    79,
     7,    78,    78,   103,   103,   104,    77,    77,   104,   104,
   123,   123,   104,    49,   104,     7,   104,   104,   104,    88,
   104,   104,    15,   127,   104,   104,    79,    79,   127,    71,
    69,    71,    91,    69,    69,   104,   104,    69,    19,    69,
    69,    69,    69,    69,    23,    69,    69,    16,    68,    16,
    75,    16,    75,    89,    75,    89,    89,    89,    71,    71,
    69,    69,    53,    66,    53,    47,    53,    47,    47,    47,
    38,    64,    38,    38,    38,     4,    16,    16,    60,    75,
    75,    32,    89,    89,    80,    32,    80,   117,    59,     4,
     4,    53,    53,    58,    47,    47,    73,   112,    73,    38,
    38,   117,   117,    74,    74,    74,    74,    32,    36,    36,
    32,    32,    48,    74,    94,    94,    94,    94,    26,    26,
    26,    26,    26,    26,    94,    42,    42,    42,    42,    85,
    85,    85,    85,   114,   116,   114,   101,   101,    27,    39,
   121,   122,     3,   125,    28,   129,     1 ]

racc_action_pointer = [
   nil,   216,    19,   212,   132,   nil,   nil,    64,    -6,    30,
   nil,     2,   nil,   nil,   nil,    71,   108,   nil,   nil,    97,
   nil,   nil,   nil,   106,    -4,   nil,   159,   185,   203,   -10,
   nil,   nil,   142,   nil,     0,   nil,   172,    12,   131,   195,
   nil,   nil,   193,   nil,   nil,   nil,   nil,   126,   173,    62,
   nil,   nil,   nil,   123,   nil,   nil,   nil,   nil,   157,   149,
   139,   nil,   nil,   nil,   130,   nil,   127,   nil,   110,    94,
   nil,    90,   nil,   154,   171,   111,    13,    38,    33,    58,
   142,   nil,    24,   nil,   nil,   197,   nil,    52,    77,   114,
   nil,    93,    37,   nil,   182,   nil,   nil,   nil,   nil,   nil,
    24,   204,   nil,    61,    69,   nil,   nil,   nil,    34,   nil,
    39,   nil,   161,   nil,   191,   nil,   180,   144,   nil,   nil,
    -5,   204,   198,    44,   nil,   190,   nil,    83,   nil,   209,
   nil,   nil,    -6,   nil ]

racc_action_default = [
    -2,   -71,    -1,   -71,   -71,   -29,    -4,   -71,   -71,   -71,
   -57,   -71,   -18,   -23,    -9,    -5,   -24,   -26,   -25,   -71,
   -27,   -34,   -28,   -71,   -71,   134,   -71,   -71,   -71,   -71,
    -7,   -35,   -71,   -56,   -71,   -19,    -2,   -71,   -71,   -53,
   -68,   -64,   -67,   -66,   -58,   -69,   -65,   -71,   -71,   -71,
    -3,   -48,   -49,   -71,   -44,   -45,   -46,   -47,   -71,   -71,
   -71,   -52,   -50,   -51,   -65,   -20,   -71,   -10,   -71,   -71,
    -8,   -71,   -55,   -71,   -67,   -71,   -71,   -71,   -71,   -71,
   -71,   -30,   -71,    -6,   -41,   -40,    -2,   -71,   -71,   -71,
   -11,   -71,   -71,   -17,   -71,   -54,   -63,   -70,   -61,   -62,
   -60,   -59,   -31,   -71,   -37,   -42,   -43,   -33,   -71,   -12,
   -71,   -21,   -71,   -15,   -71,    -2,   -71,   -71,   -32,   -22,
   -71,   -71,   -71,   -38,   -36,   -71,   -14,   -71,   -16,   -71,
   -13,    -2,   -37,   -39 ]

racc_goto_table = [
     2,    27,    34,    39,    74,   116,    37,   126,    93,   114,
    66,    36,    53,     1,   130,    49,    63,    97,   nil,    85,
   nil,   nil,   nil,   nil,   nil,    73,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   133,    80,   nil,    69,    94,   nil,   nil,
   nil,   nil,    98,    99,   100,   101,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   108,   nil,   nil,   nil,
   nil,   nil,   nil,   110,   nil,   nil,   104,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   125,   123,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   132 ]

racc_goto_check = [
     2,    17,     5,    16,    20,    18,     5,     4,    11,     9,
     7,     6,    19,     1,     4,     5,    21,    22,   nil,    20,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    18,    16,   nil,     2,    20,   nil,   nil,
   nil,   nil,    20,    20,    20,    20,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,     5,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2 ]

racc_goto_pointer = [
   nil,    13,     0,   nil,  -113,    -9,    -3,   -26,   nil,   -94,
   nil,   -61,   nil,   nil,   nil,   nil,   -13,    -3,   -99,   -14,
   -34,   -16,   -58 ]

racc_goto_default = [
   nil,   nil,   nil,    24,     6,     7,   nil,   nil,    12,   nil,
    14,   nil,    18,    20,    22,     5,   nil,   nil,   nil,   nil,
    42,    44,    45 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 "/" => 2,
 "*" => 3,
 "-" => 4,
 "+" => 5,
 :EOL => 6,
 :DEFVAR => 7,
 :TYPE => 8,
 :IDENT => 9,
 :DEFFUNC => 10,
 "(" => 11,
 ")" => 12,
 :VARREF => 13,
 "," => 14,
 "{" => 15,
 "}" => 16,
 :LABEL => 17,
 :COMMAND => 18,
 :MACRO => 19,
 "=" => 20,
 :COMMENT => 21,
 :IF => 22,
 :THEN => 23,
 :ENDIF => 24,
 :ELSE => 25,
 :ELSIF => 26,
 :FLAG_ON => 27,
 :FLAG_OFF => 28,
 "==" => 29,
 "!=" => 30,
 ">" => 31,
 "<" => 32,
 ">=" => 33,
 "<=" => 34,
 :funcall => 35,
 :EVENT_START => 36,
 :EVENT_END => 37,
 :NUMBER => 38,
 :MACPARAM => 39 }

racc_use_result_var = true

racc_nt_base = 40

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'"/"',
'"*"',
'"-"',
'"+"',
'EOL',
'DEFVAR',
'TYPE',
'IDENT',
'DEFFUNC',
'"("',
'")"',
'VARREF',
'","',
'"{"',
'"}"',
'LABEL',
'COMMAND',
'MACRO',
'"="',
'COMMENT',
'IF',
'THEN',
'ENDIF',
'ELSE',
'ELSIF',
'FLAG_ON',
'FLAG_OFF',
'"=="',
'"!="',
'">"',
'"<"',
'">="',
'"<="',
'funcall',
'EVENT_START',
'EVENT_END',
'NUMBER',
'MACPARAM',
'$start',
'program',
'stmt_list',
'stmt',
'stmt_block',
'comments',
'defvar_list',
'def_var',
'def_func',
'param',
'block_start',
'block_end',
'cmd',
'if_stmt',
'assign',
'callfunc',
'args',
'cmp_expr',
'else_stmt',
'cmp_ident',
'expr',
'primary',
'arg']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'sp4.y', 42
  def _reduce_1( val, _values, result )
						result = RootNode.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 57
  def _reduce_2( val, _values, result )
						result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 61
  def _reduce_3( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 65
  def _reduce_4( val, _values, result )
						result.push val[1]
   result
  end
.,.,

 # reduce 5 omitted

module_eval <<'.,.,', 'sp4.y', 71
  def _reduce_6( val, _values, result )
						result.push val[1]
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 75
  def _reduce_7( val, _values, result )
						result.push RawNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 79
  def _reduce_8( val, _values, result )
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 91
  def _reduce_9( val, _values, result )
						result = []
   result
  end
.,.,

 # reduce 10 omitted

module_eval <<'.,.,', 'sp4.y', 96
  def _reduce_11( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 105
  def _reduce_12( val, _values, result )
						result = DefVarNode.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 115
  def _reduce_13( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], val[4], val[7] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 119
  def _reduce_14( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], nil, val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 129
  def _reduce_15( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 133
  def _reduce_16( val, _values, result )
						result.push val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 142
  def _reduce_17( val, _values, result )
						result = BlockNode.new(val[1], val[2])
   result
  end
.,.,

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'sp4.y', 174
  def _reduce_23( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 178
  def _reduce_24( val, _values, result )
						result = CmdNode.new( val, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 182
  def _reduce_25( val, _values, result )
						result = CmdNode.new( val[0].shift, val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 186
  def _reduce_26( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

module_eval <<'.,.,', 'sp4.y', 205
  def _reduce_30( val, _values, result )
						result = CallFuncNode.new( nil, val[0], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 209
  def _reduce_31( val, _values, result )
						result = CallFuncNode.new( nil, val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 213
  def _reduce_32( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], val[4] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 217
  def _reduce_33( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 227
  def _reduce_34( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 231
  def _reduce_35( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 240
  def _reduce_36( val, _values, result )
						result = IfNode.new(val[1],val[4],val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 252
  def _reduce_37( val, _values, result )
						result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 256
  def _reduce_38( val, _values, result )
						result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 260
  def _reduce_39( val, _values, result )
						result = [IfNode.new(val[1], val[4], val[5])]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 273
  def _reduce_40( val, _values, result )
						result = ["_CMPVAL #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 278
  def _reduce_41( val, _values, result )
						result = ["_CMPWK #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 283
  def _reduce_42( val, _values, result )
						result = ["_FLAG_CHECK #{val[2]}"]
						result.push "FLGOFF"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 288
  def _reduce_43( val, _values, result )
						result = ["_FLAG_CHECK #{val[2]}"]
						result.push "FLGON"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 296
  def _reduce_44( val, _values, result )
						result = 'NE'	#result = 'EQ'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 300
  def _reduce_45( val, _values, result )
						result = 'EQ'	#result = 'NE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 304
  def _reduce_46( val, _values, result )
						result = 'LE'	#result = 'GT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 308
  def _reduce_47( val, _values, result )
						result = 'GE'	#result = 'LT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 312
  def _reduce_48( val, _values, result )
						result = 'LT'	#result = 'GE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 316
  def _reduce_49( val, _values, result )
						result = 'GT'	#result = 'LE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 327
  def _reduce_50( val, _values, result )
						result = AssignNode.new(val[0], val[2], :VARREF)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 331
  def _reduce_51( val, _values, result )
						result = AssignNode.new(val[0], val[2], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 335
  def _reduce_52( val, _values, result )
						result = AssignNode.new(val[0], val[2], funcall)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 344
  def _reduce_53( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 348
  def _reduce_54( val, _values, result )
						result = [val[0], ['('] + val[2] + [')'] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 352
  def _reduce_55( val, _values, result )
            result = [ val[0], "()" ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 356
  def _reduce_56( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 360
  def _reduce_57( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'sp4.y', 374
  def _reduce_59( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 378
  def _reduce_60( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 382
  def _reduce_61( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 386
  def _reduce_62( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 390
  def _reduce_63( val, _values, result )
						result = val
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

module_eval <<'.,.,', 'sp4.y', 419
  def _reduce_69( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 424
  def _reduce_70( val, _values, result )
						result.push val[1]
						result.push val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module PmScript
