#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sp4.y".
#

require 'racc/parser'


#
#	ポケモン用スクリプトコンパイラ
#


module PmScript

  class Parser < Racc::Parser

module_eval <<'..end sp4.y modeval..idad4b3d03dc', 'sp4.y', 436

def initialize
end

#予約語定義
RESERVED = {
	'IF'	=> :IF,
	'THEN'	=> :THEN,
	'ELSE'	=> :ELSE,
	'ELSIF'	=> :ELSIF,
	'ENDIF'	=> :ENDIF,
	'DEFVAR'	=> :DEFVAR,
	'DEFFUNC'	=> :DEFFUNC,
	'FLAG_ON'	=> :FLAG_ON,
	'FLAG_OFF'	=> :FLAG_OFF
};

#予約型定義
RESERVED_TYPE = {
	'LWORK'	=> :LWORK,
	'LABEL' => :LABEL_TYPE,
};

def parse( f )
	@q = []
	@nowlineno = 1
	@incomment = false
	f.each do |line_org|
		line = line_org.strip
		until line.empty? do
			if @incomment == true then
				if line =~ /.*\*\// then
					@incomment = false
					pushq [ :COMMENT, $&]
					line = $'
				else
					pushq [ :COMMENT, line]
					line = ""
				end
			else
				case line
				when /\A\s+/
					;
				when /\A\/\/.*$/
          #Ｃ＋＋形式コメント定義
					pushq [ :COMMENT, $& ]

				when /^\s*$/, /\A\#.*/
          #アセンブラコメント定義
					pushq [ :COMMENT, $&]

				when /\A\/\*.*\*\//
          #Ｃ形式コメント定義
					pushq [ :COMMENT, $&]

				when /\A\.[a-zA-Z_]+.*$/
          #アセンブラマクロ定義
					pushq [ :MACRO, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*:/
          #アセンブララベル定義
					pushq [ :LABEL, $& ]

				when /\A_[A-Z0-9][a-zA-Z0-9_]*/
          #スクリプトコマンド定義（＿で開始する）
					pushq [ :COMMAND, $& ]

				when /\A0x[0-9a-fA-F]+/, /\A\d+/
          #数値定義（0xで始まる１６進数、あるいは１０進数）
					pushq [ :NUMBER, $& ]

				when /\A\$[a-zA-Z][a-zA-Z0-9_]*/
          #変数定義（＄で始まる）
					pushq [ :VARREF, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*/
          #識別子定義あるいは型定義
					if RESERVED.has_key? $& then
						pushq [ RESERVED[$&], $&.intern ]
					elsif RESERVED_TYPE.has_key? $& then
						pushq [ :TYPE, $&.intern ]
					else
						pushq [ :IDENT, $& ]
					end
				when /\A\\[a-zA-Z_][a-zA-Z0-9_]*/
					pushq [ :MACPARAM, $& ]
				when /\A==/,/\A!=/,/\A\<=/,/\A\>=/,/\A>/,/\A</
					pushq [ $&, $& ]
				when /\A\/\*.*/
          #C形式コメント開始
					pushq [ :COMMENT, $& ]
					@incomment = true
				when /\A[\+\-\*\/=(){},]/
					pushq [ $&, $& ]
				else
					raise RuntimeError, "#{@fname}:#{@nowlineno}: fatal error! \{#{line_org}\}"
				end
				line = $'
				printf( "\#NOW LINE(%4d) #{line}\n", @nowlineno)
			end
		end
		pushq [ :EOL, nil ]
		@nowlineno += 1
	end
	pushq [ false, nil ]
	
	@yydebug = true
	do_parse
end

def next_token
	value = @q.shift
	@lineno = value.last
	value.delete_at(2)
	value
end

def pushq value
	value << @nowlineno
	@q.push value
end


def on_error( t, v, values )
    if v then
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@fname}:#{@lineno}: syntax error on #{v.inspect}"
  end


..end sp4.y modeval..idad4b3d03dc

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 39, :_reduce_1,
 0, 40, :_reduce_2,
 3, 40, :_reduce_3,
 2, 40, :_reduce_4,
 2, 40, :_reduce_none,
 4, 40, :_reduce_6,
 3, 40, :_reduce_7,
 4, 40, :_reduce_8,
 0, 44, :_reduce_9,
 2, 44, :_reduce_none,
 3, 44, :_reduce_11,
 3, 45, :_reduce_12,
 8, 46, :_reduce_13,
 7, 46, :_reduce_14,
 1, 47, :_reduce_15,
 3, 47, :_reduce_16,
 4, 42, :_reduce_17,
 1, 42, :_reduce_none,
 2, 48, :_reduce_none,
 3, 48, :_reduce_none,
 2, 49, :_reduce_none,
 3, 49, :_reduce_none,
 1, 41, :_reduce_23,
 1, 41, :_reduce_24,
 1, 41, :_reduce_25,
 1, 41, :_reduce_26,
 1, 41, :_reduce_none,
 1, 41, :_reduce_none,
 1, 41, :_reduce_none,
 3, 53, :_reduce_30,
 4, 53, :_reduce_31,
 6, 53, :_reduce_32,
 5, 53, :_reduce_33,
 1, 43, :_reduce_34,
 2, 43, :_reduce_35,
 7, 51, :_reduce_36,
 0, 56, :_reduce_37,
 2, 56, :_reduce_38,
 6, 56, :_reduce_39,
 3, 55, :_reduce_40,
 3, 55, :_reduce_41,
 4, 55, :_reduce_42,
 4, 55, :_reduce_43,
 1, 57, :_reduce_44,
 1, 57, :_reduce_45,
 1, 57, :_reduce_46,
 1, 57, :_reduce_47,
 1, 57, :_reduce_48,
 1, 57, :_reduce_49,
 3, 52, :_reduce_50,
 3, 52, :_reduce_51,
 3, 52, :_reduce_52,
 2, 50, :_reduce_53,
 4, 50, :_reduce_54,
 3, 50, :_reduce_55,
 1, 58, :_reduce_none,
 3, 58, :_reduce_57,
 3, 58, :_reduce_58,
 3, 58, :_reduce_59,
 3, 58, :_reduce_60,
 3, 58, :_reduce_61,
 1, 59, :_reduce_none,
 1, 59, :_reduce_none,
 1, 59, :_reduce_none,
 1, 60, :_reduce_none,
 1, 60, :_reduce_none,
 1, 54, :_reduce_67,
 3, 54, :_reduce_68 ]

racc_reduce_n = 69

racc_shift_n = 131

racc_action_table = [
    40,   106,    68,    40,    34,    68,    78,    34,    40,   100,
    68,    40,    57,    68,    40,    21,    68,    69,    34,    40,
     7,    68,    40,   102,    68,    67,    82,    35,    37,    29,
    35,    37,   115,    61,    76,    35,    37,    59,    35,    37,
    47,    35,    37,    40,    20,    68,    35,    37,   116,    35,
    37,    40,    42,    33,    40,    34,    68,   103,    25,    58,
    35,    37,    40,    47,    68,   104,    34,    20,    77,    21,
    35,    37,    26,    27,     7,   109,   110,   107,    35,    37,
    48,    35,    37,    47,    11,    64,    65,    17,    21,    35,
    37,     5,    20,     7,    56,    10,    13,    15,    11,    20,
     4,    17,    21,   113,   114,     5,    99,     7,    76,    10,
    13,    15,    11,    20,     4,    17,    21,   113,   114,     5,
    45,     7,    89,    10,    13,    15,    11,    20,     4,    17,
    21,    25,    93,     5,    76,     7,    81,    10,    13,    15,
    11,    20,     4,    17,    21,    26,    27,     5,    46,     7,
    62,    10,    13,    15,    76,    20,     4,    72,    73,    74,
    75,    80,   118,    47,   119,    47,    88,    92,    72,    73,
    74,    75,    52,    53,    54,    55,    49,    50,    92,    72,
    73,    74,    75,    72,    73,    74,    75,    72,    73,    72,
    73,    44,    87,    20,   117,    86,   120,    28,    85,   124,
   125,    23,   126,    84,   128,     3 ]

racc_action_check = [
    76,    88,    76,    44,    76,    44,    44,    44,    68,    80,
    68,    72,    27,    72,    33,   124,    33,    33,    33,    73,
   124,    73,    51,    84,    51,    32,    51,    76,    76,     7,
    44,    44,   105,    28,   105,    68,    68,    28,    72,    72,
    32,    33,    33,    74,     7,    74,    73,    73,   108,    51,
    51,    13,    16,    13,    75,    13,    75,    85,   114,    28,
    28,    28,    86,   108,    86,    86,    86,    16,    43,   117,
    74,    74,   114,   114,   117,   100,   100,    89,    13,    13,
    24,    75,    75,    43,   129,    31,    31,   129,   129,    86,
    86,   129,    89,   129,    26,   129,   129,   129,   101,   129,
   129,   101,   101,   129,   129,   101,    79,   101,    79,   101,
   101,   101,    66,   101,   101,    66,    66,   101,   101,    66,
    21,    66,    66,    66,    66,    66,     2,    66,    66,     2,
     2,     4,    71,     2,    71,     2,    48,     2,     2,     2,
   121,     2,     2,   121,   121,     4,     4,   121,    22,   121,
    30,   121,   121,   121,    41,   121,   121,    70,    70,    70,
    70,    45,   111,    22,   111,    30,    65,    70,    91,    91,
    91,    91,    25,    25,    25,    25,    25,    25,    91,    36,
    36,    36,    36,    83,    83,    83,    83,    97,    97,    96,
    96,    17,    63,    11,   109,    61,   112,     5,    57,   118,
   119,     3,   122,    56,   126,     1 ]

racc_action_pointer = [
   nil,   205,   120,   201,   118,   177,   nil,    23,   nil,   nil,
   nil,   172,   nil,    42,   nil,   nil,    46,   180,   nil,   nil,
   nil,   112,   142,   nil,    57,   143,    83,     1,    24,   nil,
   144,    79,    19,     5,   nil,   nil,   177,   nil,   nil,   nil,
   nil,   140,   nil,    62,    -6,   152,   nil,   nil,   130,   nil,
   nil,    13,   nil,   nil,   nil,   nil,   194,   189,   nil,   nil,
   nil,   184,   nil,   186,   nil,   158,   106,   nil,    -1,   nil,
   155,   120,     2,    10,    34,    45,    -9,   nil,   nil,    94,
    -2,   nil,   nil,   181,    11,    45,    53,   nil,    -8,    71,
   nil,   166,   nil,   nil,   nil,   nil,   187,   185,   nil,   nil,
    63,    92,   nil,   nil,   nil,    20,   nil,   nil,    42,   188,
   nil,   150,   172,   nil,    45,   nil,   nil,    59,   193,   187,
   nil,   134,   179,   nil,     5,   nil,   198,   nil,   nil,    78,
   nil ]

racc_action_default = [
    -2,   -69,    -1,   -69,   -69,   -69,   -18,   -69,    -9,   -25,
   -23,    -5,   -27,   -24,   -28,   -26,   -69,   -69,   -29,    -4,
   -34,   -69,   -69,   131,   -69,   -69,   -69,   -69,   -69,   -19,
   -69,    -2,   -69,   -69,   -66,   -62,   -65,   -64,   -56,   -67,
   -63,   -53,    -3,   -69,   -69,   -69,    -7,   -35,   -69,   -48,
   -49,   -69,   -44,   -45,   -46,   -47,   -69,   -69,   -52,   -50,
   -51,   -63,   -20,   -69,   -10,   -69,   -69,    -8,   -69,   -55,
   -65,   -69,   -69,   -69,   -69,   -69,   -69,    -6,   -30,   -69,
   -69,    -2,   -41,   -40,   -69,   -69,   -69,   -11,   -69,   -69,
   -17,   -69,   -61,   -54,   -59,   -60,   -58,   -57,   -68,   -31,
   -69,   -37,   -42,   -43,   -33,   -69,   -12,   -21,   -69,   -69,
   -15,   -69,   -69,    -2,   -69,   -32,   -22,   -69,   -69,   -69,
   -36,   -38,   -69,   -14,   -69,   -16,   -69,   -13,    -2,   -37,
   -39 ]

racc_goto_table = [
     2,    24,    30,    41,    70,   112,    32,   123,    90,   111,
    63,    43,    31,    51,   127,     1,    60,    98,   nil,   nil,
   nil,   nil,    83,    71,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    66,   nil,   130,    79,   nil,   nil,   nil,   nil,    91,
   nil,   nil,   nil,    94,    95,    96,    97,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   105,   nil,   nil,   nil,
   nil,   101,   nil,   nil,   108,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   122,   nil,   121,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   129 ]

racc_goto_check = [
     2,    17,     5,    16,    20,    18,     5,     4,    11,     9,
     7,     5,     6,    19,     4,     1,    21,    22,   nil,   nil,
   nil,   nil,    20,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,   nil,    18,    16,   nil,   nil,   nil,   nil,    20,
   nil,   nil,   nil,    20,    20,    20,    20,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,     2,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    17,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    15,     0,   nil,  -110,    -5,     4,   -21,   nil,   -91,
   nil,   -58,   nil,   nil,   nil,   nil,   -10,    -3,   -96,   -12,
   -29,   -12,   -59 ]

racc_goto_default = [
   nil,   nil,   nil,    16,    19,    22,   nil,   nil,     6,   nil,
     8,   nil,     9,    12,    14,    18,   nil,   nil,   nil,   nil,
    36,    38,    39 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 "/" => 2,
 "*" => 3,
 "-" => 4,
 "+" => 5,
 :EOL => 6,
 :DEFVAR => 7,
 :TYPE => 8,
 :IDENT => 9,
 :DEFFUNC => 10,
 "(" => 11,
 ")" => 12,
 :VARREF => 13,
 "," => 14,
 "{" => 15,
 "}" => 16,
 :LABEL => 17,
 :COMMAND => 18,
 :MACRO => 19,
 "=" => 20,
 :COMMENT => 21,
 :IF => 22,
 :THEN => 23,
 :ENDIF => 24,
 :ELSE => 25,
 :ELSIF => 26,
 :FLAG_ON => 27,
 :FLAG_OFF => 28,
 "==" => 29,
 "!=" => 30,
 ">" => 31,
 "<" => 32,
 ">=" => 33,
 "<=" => 34,
 :funcall => 35,
 :NUMBER => 36,
 :MACPARAM => 37 }

racc_use_result_var = true

racc_nt_base = 38

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'"/"',
'"*"',
'"-"',
'"+"',
'EOL',
'DEFVAR',
'TYPE',
'IDENT',
'DEFFUNC',
'"("',
'")"',
'VARREF',
'","',
'"{"',
'"}"',
'LABEL',
'COMMAND',
'MACRO',
'"="',
'COMMENT',
'IF',
'THEN',
'ENDIF',
'ELSE',
'ELSIF',
'FLAG_ON',
'FLAG_OFF',
'"=="',
'"!="',
'">"',
'"<"',
'">="',
'"<="',
'funcall',
'NUMBER',
'MACPARAM',
'$start',
'program',
'stmt_list',
'stmt',
'stmt_block',
'comments',
'defvar_list',
'def_var',
'def_func',
'param',
'block_start',
'block_end',
'cmd',
'if_stmt',
'assign',
'callfunc',
'args',
'cmp_expr',
'else_stmt',
'cmp_ident',
'expr',
'primary',
'arg']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'sp4.y', 42
  def _reduce_1( val, _values, result )
						result = RootNode.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 57
  def _reduce_2( val, _values, result )
						result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 61
  def _reduce_3( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 65
  def _reduce_4( val, _values, result )
						result.push val[1]
   result
  end
.,.,

 # reduce 5 omitted

module_eval <<'.,.,', 'sp4.y', 71
  def _reduce_6( val, _values, result )
						result.push val[1]
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 75
  def _reduce_7( val, _values, result )
						result.push RawNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 79
  def _reduce_8( val, _values, result )
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 91
  def _reduce_9( val, _values, result )
						result = []
   result
  end
.,.,

 # reduce 10 omitted

module_eval <<'.,.,', 'sp4.y', 96
  def _reduce_11( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 105
  def _reduce_12( val, _values, result )
						result = DefVarNode.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 115
  def _reduce_13( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], val[4], val[7] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 119
  def _reduce_14( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], nil, val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 129
  def _reduce_15( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 133
  def _reduce_16( val, _values, result )
						result.push val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 142
  def _reduce_17( val, _values, result )
						result = BlockNode.new(val[1], val[2])
   result
  end
.,.,

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'sp4.y', 174
  def _reduce_23( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 178
  def _reduce_24( val, _values, result )
						result = CmdNode.new( val, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 182
  def _reduce_25( val, _values, result )
						result = CmdNode.new( val[0].shift, val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 186
  def _reduce_26( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

module_eval <<'.,.,', 'sp4.y', 205
  def _reduce_30( val, _values, result )
						result = CallFuncNode.new( nil, val[0], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 209
  def _reduce_31( val, _values, result )
						result = CallFuncNode.new( nil, val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 213
  def _reduce_32( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], val[4] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 217
  def _reduce_33( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 227
  def _reduce_34( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 231
  def _reduce_35( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 240
  def _reduce_36( val, _values, result )
						result = IfNode.new(val[1],val[4],val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 252
  def _reduce_37( val, _values, result )
						result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 256
  def _reduce_38( val, _values, result )
						result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 260
  def _reduce_39( val, _values, result )
						result = [IfNode.new(val[1], val[4], val[5])]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 273
  def _reduce_40( val, _values, result )
						result = ["_CMPVAL #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 278
  def _reduce_41( val, _values, result )
						result = ["_CMPWK #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 283
  def _reduce_42( val, _values, result )
						result = ["_FLAG_CHECK #{val[2]}"]
						result.push "FLGOFF"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 288
  def _reduce_43( val, _values, result )
						result = ["_FLAG_CHECK #{val[2]}"]
						result.push "FLGON"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 296
  def _reduce_44( val, _values, result )
						result = 'NE'	#result = 'EQ'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 300
  def _reduce_45( val, _values, result )
						result = 'EQ'	#result = 'NE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 304
  def _reduce_46( val, _values, result )
						result = 'LE'	#result = 'GT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 308
  def _reduce_47( val, _values, result )
						result = 'GE'	#result = 'LT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 312
  def _reduce_48( val, _values, result )
						result = 'LT'	#result = 'GE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 316
  def _reduce_49( val, _values, result )
						result = 'GT'	#result = 'LE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 327
  def _reduce_50( val, _values, result )
						result = AssignNode.new(val[0], val[2], :VARREF)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 331
  def _reduce_51( val, _values, result )
						result = AssignNode.new(val[0], val[2], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 335
  def _reduce_52( val, _values, result )
						result = AssignNode.new(val[0], val[2], funcall)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 344
  def _reduce_53( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 348
  def _reduce_54( val, _values, result )
						result = [val[0],val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 352
  def _reduce_55( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'sp4.y', 366
  def _reduce_57( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 370
  def _reduce_58( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 374
  def _reduce_59( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 378
  def _reduce_60( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 382
  def _reduce_61( val, _values, result )
						result = val
   result
  end
.,.,

 # reduce 62 omitted

 # reduce 63 omitted

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

module_eval <<'.,.,', 'sp4.y', 411
  def _reduce_67( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 416
  def _reduce_68( val, _values, result )
						result.push val[1]
						result.push val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module PmScript
