#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sp4.y".
#

require 'racc/parser'


#
#	ポケモン用スクリプトコンパイラ
#


module PmScript

  class Parser < Racc::Parser

module_eval <<'..end sp4.y modeval..ide4e208a6a5', 'sp4.y', 546

def initialize
end

#予約語定義
RESERVED = {
	'IF'	=> :IF,
	'THEN'	=> :THEN,
	'ELSE'	=> :ELSE,
	'ELSIF'	=> :ELSIF,
	'ENDIF'	=> :ENDIF,
	'DEFFUNC'	=> :DEFFUNC,
	'FLAG_ON'	=> :FLAG_ON,
	'FLAG_OFF'	=> :FLAG_OFF,
  'EVENT_START' => :EVENT_START,
  'EVENT_END' => :EVENT_END,
  'SP_EVENT_START' => :SP_EVENT_START,
  'SP_EVENT_END' => :SP_EVENT_END,
  'SWITCH' => :SWITCH,
  'CASE' => :CASE,
  'ENDSWITCH' => :ENDSWITCH,
  'WHILE' => :WHILE,
  'ENDWHILE' => :ENDWHILE,
  'DEFINE_LOCAL' => :DEFINE_LOCAL,
};

#予約型定義
RESERVED_TYPE = {
	'LWORK'	=> :LWORK,
	'LABEL' => :LABEL_TYPE,
};

def parse( f )
	@q = []
	@nowlineno = 1
	@incomment = false
	f.each do |line_org|
		line = line_org.strip
		until line.empty? do
			if @incomment == true then
				if line =~ /.*\*\// then
					@incomment = false
					pushq [ :COMMENT, $&]
					line = $'
				else
					pushq [ :COMMENT, line]
					line = ""
				end
			else
				case line
				when /\A\s+/
					;
				when /\A\/\/.*$/
          #Ｃ＋＋形式コメント定義
					pushq [ :COMMENT, $& ]

				when /^\s*$/, /\A\#.*/
          #アセンブラコメント定義
					pushq [ :COMMENT, $&]

				when /\A\/\*.*\*\//
          #Ｃ形式コメント定義
					pushq [ :COMMENT, $&]

				when /\A\.[a-zA-Z_]+.*$/
          #アセンブラマクロ定義
					pushq [ :MACRO, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*:/
          #アセンブララベル定義
					pushq [ :LABEL, $& ]

				when /\A_[A-Z0-9][a-zA-Z0-9_]*/
          #スクリプトコマンド定義（＿で開始する）
					pushq [ :COMMAND, $& ]

				when /\A0x[0-9a-fA-F]+/, /\A\d+/
          #数値定義（0xで始まる１６進数、あるいは１０進数）
					pushq [ :NUMBER, $& ]

				when /\A\$[a-zA-Z][a-zA-Z0-9_]*/
          #変数定義（＄で始まる）
					pushq [ :VARREF, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*/
          #識別子定義あるいは型定義
					if RESERVED.has_key? $& then
						pushq [ RESERVED[$&], $&.intern ]
					elsif RESERVED_TYPE.has_key? $& then
						pushq [ :TYPE, $&.intern ]
					else
						pushq [ :IDENT, $& ]
					end

				when /\A\\[a-zA-Z_][a-zA-Z0-9_]*/
          # \から始まる識別子はアセンブラマクロパラメータ
					pushq [ :MACPARAM, $& ]

				when /\A==/,/\A!=/,/\A\<=/,/\A\>=/,/\A>/,/\A</,/\A\&\&/,/\A\|\|/
          # 比較演算子
					pushq [ $&, $& ]

				when /\A\/\*.*/
          #C形式コメント開始
					pushq [ :COMMENT, $& ]
					@incomment = true

				when /\A[\+\-\*\/=(){},]/
          #演算子、カッコなどの記号
					pushq [ $&, $& ]
				else
					raise RuntimeError, "#{@fname}:#{@nowlineno}: fatal error! \{#{line_org}\}"
				end
				line = $'
				printf( "\#NOW LINE(%4d) #{line}\n", @nowlineno)
			end
		end
		pushq [ :EOL, nil ]
		@nowlineno += 1
	end
	pushq [ false, nil ]
	
	@yydebug = true
	do_parse
end

def next_token
	value = @q.shift
	@lineno = value.last
	value.delete_at(2)
	value
end

def pushq value
	value << @nowlineno
	@q.push value
end


def on_error( t, v, values )
    if v then
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@fname}:#{@lineno}: syntax error on #{v.inspect}"
  end


..end sp4.y modeval..ide4e208a6a5

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 50, :_reduce_1,
 0, 51, :_reduce_2,
 3, 51, :_reduce_3,
 2, 51, :_reduce_4,
 2, 51, :_reduce_none,
 4, 51, :_reduce_6,
 3, 51, :_reduce_7,
 4, 51, :_reduce_8,
 0, 55, :_reduce_9,
 2, 55, :_reduce_none,
 3, 55, :_reduce_none,
 3, 55, :_reduce_12,
 4, 55, :_reduce_13,
 8, 57, :_reduce_14,
 7, 57, :_reduce_15,
 1, 58, :_reduce_16,
 3, 58, :_reduce_17,
 4, 53, :_reduce_18,
 1, 53, :_reduce_none,
 2, 59, :_reduce_none,
 3, 59, :_reduce_none,
 2, 60, :_reduce_none,
 3, 60, :_reduce_none,
 1, 52, :_reduce_24,
 1, 52, :_reduce_25,
 1, 52, :_reduce_26,
 1, 52, :_reduce_27,
 1, 52, :_reduce_none,
 1, 52, :_reduce_none,
 1, 52, :_reduce_none,
 1, 52, :_reduce_none,
 1, 52, :_reduce_none,
 1, 52, :_reduce_none,
 3, 64, :_reduce_34,
 4, 64, :_reduce_35,
 6, 64, :_reduce_36,
 5, 64, :_reduce_37,
 1, 54, :_reduce_38,
 2, 54, :_reduce_39,
 6, 62, :_reduce_40,
 0, 69, :_reduce_41,
 2, 69, :_reduce_42,
 5, 69, :_reduce_43,
 3, 68, :_reduce_44,
 3, 68, :_reduce_45,
 4, 68, :_reduce_46,
 4, 68, :_reduce_47,
 4, 68, :_reduce_48,
 4, 68, :_reduce_49,
 3, 68, :_reduce_50,
 3, 68, :_reduce_51,
 1, 70, :_reduce_52,
 1, 70, :_reduce_53,
 1, 70, :_reduce_54,
 1, 70, :_reduce_55,
 1, 70, :_reduce_56,
 1, 70, :_reduce_57,
 1, 70, :_reduce_58,
 1, 70, :_reduce_59,
 5, 66, :_reduce_60,
 5, 65, :_reduce_61,
 0, 72, :_reduce_62,
 1, 72, :_reduce_63,
 2, 72, :_reduce_64,
 4, 73, :_reduce_65,
 3, 63, :_reduce_66,
 3, 63, :_reduce_67,
 3, 63, :_reduce_68,
 2, 61, :_reduce_69,
 4, 61, :_reduce_70,
 3, 61, :_reduce_71,
 2, 61, :_reduce_72,
 1, 61, :_reduce_73,
 2, 61, :_reduce_74,
 1, 61, :_reduce_75,
 2, 56, :_reduce_76,
 1, 71, :_reduce_none,
 3, 71, :_reduce_78,
 3, 71, :_reduce_79,
 3, 71, :_reduce_80,
 3, 71, :_reduce_81,
 3, 71, :_reduce_82,
 1, 74, :_reduce_none,
 1, 74, :_reduce_none,
 1, 74, :_reduce_none,
 1, 75, :_reduce_none,
 1, 75, :_reduce_none,
 1, 67, :_reduce_88,
 3, 67, :_reduce_89 ]

racc_reduce_n = 90

racc_shift_n = 168

racc_action_table = [
    14,    17,    98,    20,   103,   135,    27,   104,     6,    58,
    10,    13,    15,    35,    19,    22,    63,   107,   148,   146,
   108,    90,    12,    19,    18,   136,    88,    19,    26,    30,
     4,     7,     9,    14,    17,    19,    20,   137,   138,    27,
    63,     6,   133,    10,    13,    15,   124,    19,    22,    79,
    56,    63,    19,     9,    41,    12,    42,    18,   155,   151,
    63,    26,    30,     4,     7,     9,    14,    17,   120,    20,
    38,    40,    27,    63,     6,   132,    10,    13,    15,    64,
    19,    22,    19,   129,    17,    79,    47,    48,    12,    51,
    18,     6,    62,    63,    26,    30,     4,     7,     9,    14,
    17,    17,    20,    80,    81,    27,    63,     6,     6,    10,
    13,    15,   131,    19,    22,   127,    44,    45,    47,    86,
    41,    12,    42,    18,   159,   125,    79,    26,    30,     4,
     7,     9,    14,    17,    55,    20,    38,    40,    27,   152,
     6,   153,    10,    13,    15,    54,    19,    22,    44,    45,
   148,   146,    47,    86,    12,    51,    18,   117,    19,    79,
    26,    30,     4,     7,     9,    14,    17,    60,    20,   141,
   142,    27,    61,     6,   154,    10,    13,    15,    65,    19,
    22,    37,    44,    45,    80,    81,   157,    12,   134,    18,
   143,   127,    76,    26,    30,     4,     7,     9,    14,    17,
   160,    20,   161,    79,    27,    94,     6,   122,    10,    13,
    15,    34,    19,    22,    47,    86,   150,    51,    99,    93,
    12,   102,    18,    33,    47,    86,    26,    30,     4,     7,
     9,    47,    86,    87,    51,    47,    86,     3,   111,   nil,
    47,    86,   100,    51,    44,    45,    47,    86,    44,    45,
    47,    86,    96,    51,    44,    45,    47,    86,    47,    86,
   nil,    44,    45,   nil,   nil,    44,    45,    41,   nil,    42,
    44,    45,    80,    81,    82,    83,    44,    45,   nil,   nil,
    44,    45,   nil,    38,    40,   nil,    44,    45,    44,    45,
    71,    72,    73,    74,    75,    66,    67,    68,    71,    72,
    73,    74,    75,    66,    67,    68,    80,    81,    82,    83,
    41,   nil,    42,   nil,    97,    80,    81,    82,    83,    41,
   nil,    42,   164,   118,   nil,   nil,    38,    40,    80,    81,
    82,    83,   118,   nil,   nil,    38,    40,    71,    72,    73,
    74,    75,    66,    67,    68,   nil,   nil,   nil,   nil,   nil,
   109,    71,    72,    73,    74,    75,    66,    67,    68,    69,
    71,    72,    73,    74,    75,    66,    67,    68,    71,    72,
    73,    74,    75,    66,    67,    68 ]

racc_action_check = [
   166,   166,    59,   166,    65,   107,   166,    65,   166,    25,
   166,   166,   166,     6,   166,   166,    59,    76,   166,   166,
    76,    53,   166,    25,   166,   108,    52,     6,   166,   166,
   166,   166,   166,     2,     2,    53,     2,   121,   122,     2,
    52,     2,   104,     2,     2,     2,    92,     2,     2,   145,
    20,   121,   122,    53,    22,     2,    22,     2,   145,   139,
    92,     2,     2,     2,     2,     2,   163,   163,    89,   163,
    22,    22,   163,   139,   163,   103,   163,   163,   163,    36,
   163,   163,    89,    95,   160,    95,    13,    13,   163,    13,
   163,   160,    32,    36,   163,   163,   163,   163,   163,   158,
   158,   154,   158,   116,   116,   158,    32,   158,   154,   158,
   158,   158,    99,   158,   158,    94,    13,    13,    86,    86,
    70,   158,    70,   158,   149,    93,   149,   158,   158,   158,
   158,   158,   130,   130,    18,   130,    70,    70,   130,   140,
   130,   140,   130,   130,   130,    17,   130,   130,    86,    86,
   130,   130,   127,   127,   130,   127,   130,    84,    14,    84,
   130,   130,   130,   130,   130,   105,   105,    26,   105,   125,
   125,   105,    27,   105,   141,   105,   105,   105,    38,   105,
   105,     9,   127,   127,   115,   115,   147,   105,   105,   105,
   126,   126,    40,   105,   105,   105,   105,   105,    91,    91,
   152,    91,   153,    43,    91,    55,    91,    91,    91,    91,
    91,     4,    91,    91,   131,   131,   131,   131,    61,    54,
    91,    61,    91,     3,    83,    83,    91,    91,    91,    91,
    91,    48,    48,    48,    48,    78,    78,     1,    78,   nil,
    79,    79,    61,    79,   131,   131,    80,    80,    61,    61,
    56,    56,    56,    56,    83,    83,    81,    81,    82,    82,
   nil,    48,    48,   nil,   nil,    78,    78,    12,   nil,    12,
    79,    79,    46,    46,    46,    46,    80,    80,   nil,   nil,
    56,    56,   nil,    12,    12,   nil,    81,    81,    82,    82,
    57,    57,    57,    57,    57,    57,    57,    57,   156,   156,
   156,   156,   156,   156,   156,   156,   119,   119,   119,   119,
   146,   nil,   146,   nil,    57,    85,    85,    85,    85,    41,
   nil,    41,   156,   119,   nil,   nil,   146,   146,   110,   110,
   110,   110,    85,   nil,   nil,    41,    41,    77,    77,    77,
    77,    77,    77,    77,    77,   nil,   nil,   nil,   nil,   nil,
    77,    39,    39,    39,    39,    39,    39,    39,    39,    39,
    42,    42,    42,    42,    42,    42,    42,    42,   106,   106,
   106,   106,   106,   106,   106,   106 ]

racc_action_pointer = [
   nil,   237,    19,   223,   194,   nil,    -1,   nil,   nil,   164,
   nil,   nil,   249,    69,   130,   nil,   nil,   129,   114,   nil,
    32,   nil,    36,   nil,   nil,    -5,   150,   145,   nil,   nil,
   nil,   nil,    78,   nil,   nil,   nil,    65,   nil,   160,   345,
   174,   301,   354,   182,   nil,   nil,   270,   nil,   214,   nil,
   nil,   nil,    12,     7,   202,   191,   233,   284,   nil,   -12,
   nil,   201,   nil,   nil,   nil,   -13,   nil,   nil,   nil,   nil,
   102,   nil,   nil,   nil,   nil,   nil,     0,   331,   218,   223,
   229,   239,   241,   207,   138,   313,   101,   nil,   nil,    54,
   nil,   184,    32,   107,    75,    64,   nil,   nil,   nil,    94,
   nil,   nil,   nil,    56,    23,   151,   362,   -14,     6,   nil,
   326,   nil,   nil,   nil,   nil,   182,   101,   nil,   nil,   304,
   nil,    23,    24,   nil,   nil,   150,   151,   135,   nil,   nil,
   118,   197,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
   120,   160,   nil,   nil,   nil,    28,   292,   155,   nil,   105,
   nil,   nil,   186,   182,    86,   nil,   292,   nil,    85,   nil,
    69,   nil,   nil,    52,   nil,   nil,   -14,   nil ]

racc_action_default = [
    -2,   -90,    -1,   -90,   -90,   -32,   -90,   -75,   -33,   -90,
   -24,   -19,   -90,   -25,    -5,   -27,    -9,   -90,   -90,   -38,
   -90,   -26,   -90,   -28,   -29,   -90,   -90,   -90,   -30,    -4,
   -73,   -31,   -90,   168,   -74,   -20,   -90,   -76,   -90,   -90,
   -90,   -90,   -90,   -69,   -83,   -85,   -86,   -84,   -90,   -77,
   -88,   -87,   -90,    -2,   -90,   -90,   -90,   -90,    -3,   -90,
   -72,   -90,    -7,   -39,   -21,   -90,   -56,   -58,   -59,    -2,
   -90,   -52,   -53,   -55,   -54,   -57,   -90,   -90,   -90,   -90,
   -90,   -90,   -90,   -90,   -90,   -86,   -90,   -71,    -8,   -90,
   -10,   -90,   -90,   -90,   -62,   -90,   -34,    -2,    -6,   -84,
   -68,   -67,   -66,   -90,   -90,   -90,   -51,   -90,   -90,   -50,
   -44,   -45,   -89,   -80,   -81,   -79,   -78,   -70,   -82,   -90,
   -12,   -90,   -90,   -18,   -11,   -90,   -90,   -90,   -63,   -35,
   -41,   -90,   -46,   -47,   -60,   -48,   -49,   -13,   -22,   -90,
   -90,   -90,   -16,   -61,   -64,   -90,   -90,   -90,    -2,   -90,
   -37,   -23,   -90,   -90,   -90,    -2,   -90,   -40,   -42,   -36,
   -90,   -17,   -15,   -65,    -2,   -14,   -41,   -43 ]

racc_goto_table = [
     2,    39,    43,   128,   162,    36,    85,   147,     1,   123,
   165,    57,   140,    52,    78,    89,   126,    53,   101,   112,
   nil,   nil,   nil,   nil,    59,   nil,   nil,   nil,   nil,   nil,
    77,   nil,   nil,   nil,   nil,   144,   110,    84,   113,   114,
   115,   116,   nil,   167,   119,    95,   nil,   nil,   nil,   nil,
   nil,   nil,    92,    91,   nil,   nil,   nil,   nil,   nil,   106,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   105,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   130,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   145,   nil,   nil,   nil,
   149,   139,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   156,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   158,   nil,
   nil,   nil,   nil,   nil,   nil,   163,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   166 ]

racc_goto_check = [
     2,    19,    18,    24,     4,     5,    22,    20,     1,    11,
     4,    19,     9,     5,    21,     7,    23,     6,    25,    26,
   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,    24,    22,    18,    22,    22,
    22,    22,   nil,    20,    22,    18,   nil,   nil,   nil,   nil,
   nil,   nil,     5,     2,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
    18,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     8,     0,   nil,  -150,    -1,     1,   -38,   nil,  -113,
   nil,   -82,   nil,   nil,   nil,   nil,   nil,   nil,   -11,   -11,
  -123,   -28,   -42,   -78,   -91,   -43,   -60 ]

racc_goto_default = [
   nil,   nil,   nil,    25,    29,    32,   nil,     8,    11,   nil,
    16,   nil,    21,    23,    24,    28,    31,     5,   nil,   nil,
   nil,    70,    46,   nil,   nil,    49,    50 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 "/" => 2,
 "*" => 3,
 "-" => 4,
 "+" => 5,
 "==" => 6,
 "!=" => 7,
 "<" => 8,
 ">" => 9,
 "<=" => 10,
 ">=" => 11,
 "&&" => 12,
 "||" => 13,
 :EOL => 14,
 :DEFFUNC => 15,
 :TYPE => 16,
 :IDENT => 17,
 "(" => 18,
 ")" => 19,
 :VARREF => 20,
 "," => 21,
 "{" => 22,
 "}" => 23,
 :LABEL => 24,
 :COMMAND => 25,
 :MACRO => 26,
 "=" => 27,
 :COMMENT => 28,
 :IF => 29,
 :THEN => 30,
 :ENDIF => 31,
 :ELSE => 32,
 :ELSIF => 33,
 :FLAG_ON => 34,
 :FLAG_OFF => 35,
 :WHILE => 36,
 :ENDWHILE => 37,
 :SWITCH => 38,
 :ENDSWITCH => 39,
 :CASE => 40,
 :funcall => 41,
 :EVENT_START => 42,
 :EVENT_END => 43,
 :SP_EVENT_START => 44,
 :SP_EVENT_END => 45,
 :DEFINE_LOCAL => 46,
 :NUMBER => 47,
 :MACPARAM => 48 }

racc_use_result_var = true

racc_nt_base = 49

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'"/"',
'"*"',
'"-"',
'"+"',
'"=="',
'"!="',
'"<"',
'">"',
'"<="',
'">="',
'"&&"',
'"||"',
'EOL',
'DEFFUNC',
'TYPE',
'IDENT',
'"("',
'")"',
'VARREF',
'","',
'"{"',
'"}"',
'LABEL',
'COMMAND',
'MACRO',
'"="',
'COMMENT',
'IF',
'THEN',
'ENDIF',
'ELSE',
'ELSIF',
'FLAG_ON',
'FLAG_OFF',
'WHILE',
'ENDWHILE',
'SWITCH',
'ENDSWITCH',
'CASE',
'funcall',
'EVENT_START',
'EVENT_END',
'SP_EVENT_START',
'SP_EVENT_END',
'DEFINE_LOCAL',
'NUMBER',
'MACPARAM',
'$start',
'program',
'stmt_list',
'stmt',
'stmt_block',
'comments',
'def_local_list',
'def_local',
'def_func',
'param',
'block_start',
'block_end',
'cmd',
'if_stmt',
'assign',
'callfunc',
'switch_stmt',
'while_stmt',
'args',
'cmp_expr',
'else_stmt',
'cmp_ident',
'expr',
'case_stmt_list',
'case_stmt',
'primary',
'arg']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'sp4.y', 45
  def _reduce_1( val, _values, result )
						result = RootNode.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 60
  def _reduce_2( val, _values, result )
						result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 64
  def _reduce_3( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 68
  def _reduce_4( val, _values, result )
						result.push val[1]
   result
  end
.,.,

 # reduce 5 omitted

module_eval <<'.,.,', 'sp4.y', 74
  def _reduce_6( val, _values, result )
						result.push val[1]
						#result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 78
  def _reduce_7( val, _values, result )
						#result.push RawNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 82
  def _reduce_8( val, _values, result )
						#result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 94
  def _reduce_9( val, _values, result )
            result = []
   result
  end
.,.,

 # reduce 10 omitted

 # reduce 11 omitted

module_eval <<'.,.,', 'sp4.y', 100
  def _reduce_12( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 104
  def _reduce_13( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 113
  def _reduce_14( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], val[4], val[7] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 117
  def _reduce_15( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], nil, val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 127
  def _reduce_16( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 131
  def _reduce_17( val, _values, result )
						result.push val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 140
  def _reduce_18( val, _values, result )
						result = BlockNode.new(val[1], val[2])
   result
  end
.,.,

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'sp4.y', 172
  def _reduce_24( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 176
  def _reduce_25( val, _values, result )
						result = CmdNode.new( val, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 180
  def _reduce_26( val, _values, result )
						result = CmdNode.new( val[0].shift, val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 184
  def _reduce_27( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

 # reduce 33 omitted

module_eval <<'.,.,', 'sp4.y', 206
  def _reduce_34( val, _values, result )
						result = CallFuncNode.new( nil, val[0], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 210
  def _reduce_35( val, _values, result )
						result = CallFuncNode.new( nil, val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 214
  def _reduce_36( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], val[4] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 218
  def _reduce_37( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 228
  def _reduce_38( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 232
  def _reduce_39( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 241
  def _reduce_40( val, _values, result )
						result = IfNode.new(val[1],val[3],val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 253
  def _reduce_41( val, _values, result )
						result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 257
  def _reduce_42( val, _values, result )
						result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 261
  def _reduce_43( val, _values, result )
						result = [IfNode.new(val[1], val[3], val[4])]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 278
  def _reduce_44( val, _values, result )
            left = "_PUSH_WORK #{val[0].sub(/\A\$/,"")}"
            right = "_PUSH_VALUE #{val[2]}"
            result = CompareNode.new(val[1], left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 284
  def _reduce_45( val, _values, result )
            left = "_PUSH_WORK #{val[0].sub(/\A\$/,"")}"
            right = "_PUSH_WORK #{val[2].sub(/\A\$/,"")}"
            result = CompareNode.new(val[1], left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 290
  def _reduce_46( val, _values, result )
            left = "_PUSH_FLAG #{val[2]}"
            right = "_PUSH_VALUE TRUE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 296
  def _reduce_47( val, _values, result )
            left = "_PUSH_FLAG #{val[2].sub(/\A\$/,"")}"
            right = "_PUSH_VALUE TRUE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 302
  def _reduce_48( val, _values, result )
            left = "_PUSH_FLAG #{val[2]}"
            right = "_PUSH_VALUE FALSE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 308
  def _reduce_49( val, _values, result )
            left = "_PUSH_FLAG #{val[2].sub(/\A\$/,"")}"
            right = "_PUSH_VALUE FALSE"
            result = CompareNode.new('CMPID_EQ', left, right)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 312
  def _reduce_50( val, _values, result )
            result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 316
  def _reduce_51( val, _values, result )
            result = LogicalCompareNode.new(val[1], val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 325
  def _reduce_52( val, _values, result )
						result = 'CMPID_EQ'	#result = 'EQ'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 329
  def _reduce_53( val, _values, result )
						result = 'CMPID_NE'	#result = 'NE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 333
  def _reduce_54( val, _values, result )
						result = 'CMPID_GT'	#result = 'GT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 337
  def _reduce_55( val, _values, result )
						result = 'CMPID_LT'	#result = 'LT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 341
  def _reduce_56( val, _values, result )
						result = 'CMPID_GT_EQ'	#result = 'GE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 345
  def _reduce_57( val, _values, result )
						result = 'CMPID_LT_EQ'	#result = 'LE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 349
  def _reduce_58( val, _values, result )
            result = 'CMPID_AND'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 353
  def _reduce_59( val, _values, result )
            result = 'CMPID_OR'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 363
  def _reduce_60( val, _values, result )
            result = WhileNode.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 372
  def _reduce_61( val, _values, result )
            result = SwitchNode.new(val[1].sub(/\A\$/,""), val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 383
  def _reduce_62( val, _values, result )
            result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 387
  def _reduce_63( val, _values, result )
            result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 391
  def _reduce_64( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 400
  def _reduce_65( val, _values, result )
            result = CaseNode.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 412
  def _reduce_66( val, _values, result )
						result = AssignNode.new(val[0], val[2], :VARREF)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 416
  def _reduce_67( val, _values, result )
						result = AssignNode.new(val[0], val[2], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 420
  def _reduce_68( val, _values, result )
						result = AssignNode.new(val[0], val[2], funcall)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 429
  def _reduce_69( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 433
  def _reduce_70( val, _values, result )
						result = [val[0], ['('] + val[2] + [')'] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 437
  def _reduce_71( val, _values, result )
            result = [ val[0], "()" ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 441
  def _reduce_72( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 445
  def _reduce_73( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 449
  def _reduce_74( val, _values, result )
            result = [ val[0], val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 453
  def _reduce_75( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 462
  def _reduce_76( val, _values, result )
            result = DefLocalVarNode.new( val[1] )
   result
  end
.,.,

 # reduce 77 omitted

module_eval <<'.,.,', 'sp4.y', 476
  def _reduce_78( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 480
  def _reduce_79( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 484
  def _reduce_80( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 488
  def _reduce_81( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 492
  def _reduce_82( val, _values, result )
						result = val
   result
  end
.,.,

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

module_eval <<'.,.,', 'sp4.y', 521
  def _reduce_88( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 526
  def _reduce_89( val, _values, result )
						result.push val[1]
						result.push val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module PmScript
