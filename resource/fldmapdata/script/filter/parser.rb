#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sp4.y".
#

require 'racc/parser'


#
#	ポケモン用スクリプトコンパイラ
#


module PmScript

  class Parser < Racc::Parser

module_eval <<'..end sp4.y modeval..id92508a3e4b', 'sp4.y', 484

def initialize
end

#予約語定義
RESERVED = {
	'IF'	=> :IF,
	'THEN'	=> :THEN,
	'ELSE'	=> :ELSE,
	'ELSIF'	=> :ELSIF,
	'ENDIF'	=> :ENDIF,
	'DEFVAR'	=> :DEFVAR,
	'DEFFUNC'	=> :DEFFUNC,
	'FLAG_ON'	=> :FLAG_ON,
	'FLAG_OFF'	=> :FLAG_OFF,
  'EVENT_START' => :EVENT_START,
  'EVENT_END' => :EVENT_END,
  'SWITCH' => :SWITCH,
  'CASE' => :CASE,
  'ENDSWITCH' => :ENDSWITCH
};

#予約型定義
RESERVED_TYPE = {
	'LWORK'	=> :LWORK,
	'LABEL' => :LABEL_TYPE,
};

def parse( f )
	@q = []
	@nowlineno = 1
	@incomment = false
	f.each do |line_org|
		line = line_org.strip
		until line.empty? do
			if @incomment == true then
				if line =~ /.*\*\// then
					@incomment = false
					pushq [ :COMMENT, $&]
					line = $'
				else
					pushq [ :COMMENT, line]
					line = ""
				end
			else
				case line
				when /\A\s+/
					;
				when /\A\/\/.*$/
          #Ｃ＋＋形式コメント定義
					pushq [ :COMMENT, $& ]

				when /^\s*$/, /\A\#.*/
          #アセンブラコメント定義
					pushq [ :COMMENT, $&]

				when /\A\/\*.*\*\//
          #Ｃ形式コメント定義
					pushq [ :COMMENT, $&]

				when /\A\.[a-zA-Z_]+.*$/
          #アセンブラマクロ定義
					pushq [ :MACRO, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*:/
          #アセンブララベル定義
					pushq [ :LABEL, $& ]

				when /\A_[A-Z0-9][a-zA-Z0-9_]*/
          #スクリプトコマンド定義（＿で開始する）
					pushq [ :COMMAND, $& ]

				when /\A0x[0-9a-fA-F]+/, /\A\d+/
          #数値定義（0xで始まる１６進数、あるいは１０進数）
					pushq [ :NUMBER, $& ]

				when /\A\$[a-zA-Z][a-zA-Z0-9_]*/
          #変数定義（＄で始まる）
					pushq [ :VARREF, $& ]

				when /\A[a-zA-Z_][a-zA-Z0-9_]*/
          #識別子定義あるいは型定義
					if RESERVED.has_key? $& then
						pushq [ RESERVED[$&], $&.intern ]
					elsif RESERVED_TYPE.has_key? $& then
						pushq [ :TYPE, $&.intern ]
					else
						pushq [ :IDENT, $& ]
					end

				when /\A\\[a-zA-Z_][a-zA-Z0-9_]*/
          # \から始まる識別子はアセンブラマクロパラメータ
					pushq [ :MACPARAM, $& ]

				when /\A==/,/\A!=/,/\A\<=/,/\A\>=/,/\A>/,/\A</
          # 比較演算子
					pushq [ $&, $& ]

				when /\A\/\*.*/
          #C形式コメント開始
					pushq [ :COMMENT, $& ]
					@incomment = true

				when /\A[\+\-\*\/=(){},]/
          #演算子、カッコなどの記号
					pushq [ $&, $& ]
				else
					raise RuntimeError, "#{@fname}:#{@nowlineno}: fatal error! \{#{line_org}\}"
				end
				line = $'
				printf( "\#NOW LINE(%4d) #{line}\n", @nowlineno)
			end
		end
		pushq [ :EOL, nil ]
		@nowlineno += 1
	end
	pushq [ false, nil ]
	
	@yydebug = true
	do_parse
end

def next_token
	value = @q.shift
	@lineno = value.last
	value.delete_at(2)
	value
end

def pushq value
	value << @nowlineno
	@q.push value
end


def on_error( t, v, values )
    if v then
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@fname}:#{@lineno}: syntax error on #{v.inspect}"
  end


..end sp4.y modeval..id92508a3e4b

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 44, :_reduce_1,
 0, 45, :_reduce_2,
 3, 45, :_reduce_3,
 2, 45, :_reduce_4,
 2, 45, :_reduce_none,
 4, 45, :_reduce_6,
 3, 45, :_reduce_7,
 4, 45, :_reduce_8,
 0, 49, :_reduce_9,
 2, 49, :_reduce_none,
 3, 49, :_reduce_11,
 3, 50, :_reduce_12,
 8, 51, :_reduce_13,
 7, 51, :_reduce_14,
 1, 52, :_reduce_15,
 3, 52, :_reduce_16,
 4, 47, :_reduce_17,
 1, 47, :_reduce_none,
 2, 53, :_reduce_none,
 3, 53, :_reduce_none,
 2, 54, :_reduce_none,
 3, 54, :_reduce_none,
 1, 46, :_reduce_23,
 1, 46, :_reduce_24,
 1, 46, :_reduce_25,
 1, 46, :_reduce_26,
 1, 46, :_reduce_none,
 1, 46, :_reduce_none,
 1, 46, :_reduce_none,
 1, 46, :_reduce_none,
 3, 58, :_reduce_31,
 4, 58, :_reduce_32,
 6, 58, :_reduce_33,
 5, 58, :_reduce_34,
 1, 48, :_reduce_35,
 2, 48, :_reduce_36,
 6, 56, :_reduce_37,
 0, 62, :_reduce_38,
 2, 62, :_reduce_39,
 5, 62, :_reduce_40,
 3, 61, :_reduce_41,
 3, 61, :_reduce_42,
 4, 61, :_reduce_43,
 4, 61, :_reduce_44,
 1, 63, :_reduce_45,
 1, 63, :_reduce_46,
 1, 63, :_reduce_47,
 1, 63, :_reduce_48,
 1, 63, :_reduce_49,
 1, 63, :_reduce_50,
 5, 59, :_reduce_51,
 0, 65, :_reduce_52,
 1, 65, :_reduce_53,
 2, 65, :_reduce_54,
 4, 66, :_reduce_55,
 3, 57, :_reduce_56,
 3, 57, :_reduce_57,
 3, 57, :_reduce_58,
 2, 55, :_reduce_59,
 4, 55, :_reduce_60,
 3, 55, :_reduce_61,
 2, 55, :_reduce_62,
 1, 55, :_reduce_63,
 1, 64, :_reduce_none,
 3, 64, :_reduce_65,
 3, 64, :_reduce_66,
 3, 64, :_reduce_67,
 3, 64, :_reduce_68,
 3, 64, :_reduce_69,
 1, 67, :_reduce_none,
 1, 67, :_reduce_none,
 1, 67, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 60, :_reduce_75,
 3, 60, :_reduce_76 ]

racc_reduce_n = 77

racc_shift_n = 144

racc_action_table = [
    18,    76,   122,    23,    26,   110,    98,     8,    76,    14,
   130,    17,    20,    22,   109,    25,     4,    25,   111,   113,
   114,    49,   112,    72,   119,    45,   108,    69,    18,     7,
    96,    23,    26,    16,    19,     8,    70,    14,    94,    17,
    20,    22,    39,    25,     4,    49,    91,    72,    81,    45,
    49,    39,    72,    47,    48,   132,    18,     7,    38,    23,
    26,    16,    19,     8,    37,    14,   106,    17,    20,    22,
    39,    25,     4,    39,    49,    26,    72,    47,    48,    25,
    14,    26,    47,    48,    18,     7,    14,    23,    26,    16,
    19,     8,    90,    14,    28,    17,    20,    22,    87,    25,
     4,    49,   105,    72,    76,    88,    47,    48,    29,    30,
    76,    35,    18,     7,    71,    23,    26,    16,    19,     8,
   131,    14,    76,    17,    20,    22,    25,    25,     4,    39,
   134,    64,   135,    47,    48,    49,   123,    42,    63,    45,
    18,     7,    62,    23,    26,    16,    19,     8,    49,    14,
    72,    17,    20,    22,   129,    25,     4,    61,    68,   113,
   114,    49,    66,    72,    49,    45,    72,    47,    48,     7,
    49,    53,    72,    16,    19,    49,    51,    72,   133,    45,
    47,    48,    49,    25,    72,    73,    45,    67,   118,    94,
    47,    48,    40,    47,    48,    28,    47,    48,    77,    78,
    79,    80,    47,    48,    77,    78,   136,    47,    48,    29,
    30,    85,    86,    33,    47,    48,    77,    78,    79,    80,
    77,    78,    79,    80,   124,   125,    99,    77,    78,   139,
    99,    56,    57,    59,    60,    54,    55,    77,    78,    79,
    80,   140,    32,    27,     3 ]

racc_action_check = [
   141,   116,   106,   141,   141,    87,    74,   141,    74,   141,
   116,   141,   141,   141,    86,   141,   141,   106,    90,   141,
   141,    96,    91,    96,    96,    96,    84,    34,     2,   141,
    68,     2,     2,   141,   141,     2,    36,     2,    64,     2,
     2,     2,    34,     2,     2,    51,    62,    51,    51,    51,
    80,    36,    80,    96,    96,   121,    83,     2,    15,    83,
    83,     2,     2,    83,    14,    83,    83,    83,    83,    83,
   121,    83,    83,    15,    79,   139,    79,    51,    51,    14,
   139,   133,    80,    80,   127,    83,   133,   127,   127,    83,
    83,   127,    61,   127,     4,   127,   127,   127,    53,   127,
   127,    58,    82,    58,    82,    58,    79,    79,     4,     4,
    46,    10,   137,   127,    41,   137,   137,   127,   127,   137,
   120,   137,   120,   137,   137,   137,    10,   137,   137,    41,
   126,    32,   126,    58,    58,    20,   109,    20,    31,    20,
    92,   137,    30,    92,    92,   137,   137,    92,    78,    92,
    78,    92,    92,    92,   115,    92,    92,    29,    33,    92,
    92,    94,    33,    94,    77,    94,    77,    20,    20,    92,
    72,    26,    72,    92,    92,    76,    23,    76,   124,    76,
    78,    78,    42,    18,    42,    42,    42,    33,    95,    95,
    33,    33,    16,    94,    94,   114,    77,    77,    89,    89,
    89,    89,    72,    72,   104,   104,   128,    76,    76,   114,
   114,    52,    52,     8,    42,    42,    75,    75,    75,    75,
    97,    97,    97,    97,   110,   110,    75,   103,   103,   134,
    97,    28,    28,    28,    28,    28,    28,    50,    50,    50,
    50,   135,     7,     3,     1 ]

racc_action_pointer = [
   nil,   244,    22,   243,    81,   nil,   nil,   229,   193,   nil,
   105,   nil,   nil,   nil,    58,    52,   183,   nil,   162,   nil,
   126,   nil,   nil,   165,   nil,   nil,   163,   nil,   202,   146,
   131,   115,   125,   149,    21,   nil,    30,   nil,   nil,   nil,
   nil,   108,   173,   nil,   nil,   nil,    96,   nil,   nil,   nil,
   235,    36,   205,    89,   nil,   nil,   nil,   nil,    92,   nil,
   nil,    83,    37,   nil,     1,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   161,   nil,    -6,   214,   166,   155,   139,    65,
    41,   nil,    90,    50,    20,   nil,     6,    -6,   nil,   196,
     6,    10,   134,   nil,   152,   152,    12,   218,   nil,   nil,
   nil,   nil,   nil,   225,   202,   nil,    -4,   nil,   nil,   127,
   212,   nil,   nil,   nil,   182,   130,   -13,   nil,   nil,   nil,
   108,    49,   nil,   nil,   172,   nil,   118,    78,   183,   nil,
   nil,   nil,   nil,    71,   223,   228,   nil,   106,   nil,    65,
   nil,    -6,   nil,   nil ]

racc_action_default = [
    -2,   -77,    -1,   -77,   -77,   -25,   -27,   -77,   -77,   -28,
   -77,   -29,    -4,   -30,   -77,   -77,   -77,   -23,    -5,   -63,
   -24,   -18,   -26,   -77,    -9,   -35,   -77,   144,   -77,   -77,
   -77,   -77,   -77,   -77,   -77,    -3,   -77,   -19,    -7,   -36,
   -62,   -77,   -77,   -64,   -75,   -74,   -59,   -70,   -72,   -71,
   -73,   -77,    -2,   -77,   -49,   -50,   -45,   -46,   -77,   -47,
   -48,   -77,   -77,    -2,   -52,   -57,   -56,   -58,   -71,    -6,
   -20,    -8,   -77,   -61,   -77,   -73,   -77,   -77,   -77,   -77,
   -77,   -31,   -77,   -77,   -77,   -10,   -77,   -77,   -42,   -41,
   -77,   -77,   -38,   -53,   -77,   -77,   -77,   -77,   -60,   -69,
   -76,   -67,   -68,   -66,   -65,   -32,   -77,   -17,   -11,   -77,
   -77,   -43,   -44,    -2,   -77,   -77,   -77,   -54,   -51,   -34,
   -77,   -77,   -21,   -12,   -77,   -15,   -77,   -39,   -77,   -37,
    -2,   -33,   -22,   -77,   -77,   -77,    -2,   -55,   -14,   -77,
   -16,   -38,   -13,   -40 ]

racc_goto_table = [
     2,    31,    34,    46,   115,    75,    36,    93,   138,     1,
    41,   107,   126,    58,   142,    84,    95,    52,    65,   100,
   nil,    89,   nil,   nil,   nil,    74,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    82,    97,   nil,   nil,   117,   nil,
   101,   102,   103,   104,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    83,   143,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    92,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   116,   nil,   120,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   128,   nil,   127,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   137,   nil,   nil,   nil,   nil,   nil,   141 ]

racc_goto_check = [
     2,    18,     5,    17,    19,    21,     5,    23,     4,     1,
     5,    11,     9,    20,     4,     7,    22,     6,    24,    25,
   nil,    21,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,    21,   nil,   nil,    23,   nil,
    21,    21,    21,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,    17,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    18,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     9,     0,   nil,  -125,    -8,    -7,   -37,   nil,   -98,
   nil,   -72,   nil,   nil,   nil,   nil,   nil,   -17,    -3,   -88,
   -15,   -37,   -48,   -57,   -15,   -57 ]

racc_goto_default = [
   nil,   nil,   nil,    10,    12,    15,   nil,   nil,    21,   nil,
    24,   nil,     5,     6,     9,    11,    13,   nil,   nil,   nil,
   nil,    50,   nil,   nil,    43,    44 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 "/" => 2,
 "*" => 3,
 "-" => 4,
 "+" => 5,
 :EOL => 6,
 :DEFVAR => 7,
 :TYPE => 8,
 :IDENT => 9,
 :DEFFUNC => 10,
 "(" => 11,
 ")" => 12,
 :VARREF => 13,
 "," => 14,
 "{" => 15,
 "}" => 16,
 :LABEL => 17,
 :COMMAND => 18,
 :MACRO => 19,
 "=" => 20,
 :COMMENT => 21,
 :IF => 22,
 :THEN => 23,
 :ENDIF => 24,
 :ELSE => 25,
 :ELSIF => 26,
 :FLAG_ON => 27,
 :FLAG_OFF => 28,
 "==" => 29,
 "!=" => 30,
 ">" => 31,
 "<" => 32,
 ">=" => 33,
 "<=" => 34,
 :SWITCH => 35,
 :ENDSWITCH => 36,
 :CASE => 37,
 :funcall => 38,
 :EVENT_START => 39,
 :EVENT_END => 40,
 :NUMBER => 41,
 :MACPARAM => 42 }

racc_use_result_var = true

racc_nt_base = 43

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'"/"',
'"*"',
'"-"',
'"+"',
'EOL',
'DEFVAR',
'TYPE',
'IDENT',
'DEFFUNC',
'"("',
'")"',
'VARREF',
'","',
'"{"',
'"}"',
'LABEL',
'COMMAND',
'MACRO',
'"="',
'COMMENT',
'IF',
'THEN',
'ENDIF',
'ELSE',
'ELSIF',
'FLAG_ON',
'FLAG_OFF',
'"=="',
'"!="',
'">"',
'"<"',
'">="',
'"<="',
'SWITCH',
'ENDSWITCH',
'CASE',
'funcall',
'EVENT_START',
'EVENT_END',
'NUMBER',
'MACPARAM',
'$start',
'program',
'stmt_list',
'stmt',
'stmt_block',
'comments',
'defvar_list',
'def_var',
'def_func',
'param',
'block_start',
'block_end',
'cmd',
'if_stmt',
'assign',
'callfunc',
'switch_stmt',
'args',
'cmp_expr',
'else_stmt',
'cmp_ident',
'expr',
'case_stmt_list',
'case_stmt',
'primary',
'arg']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'sp4.y', 42
  def _reduce_1( val, _values, result )
						result = RootNode.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 57
  def _reduce_2( val, _values, result )
						result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 61
  def _reduce_3( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 65
  def _reduce_4( val, _values, result )
						result.push val[1]
   result
  end
.,.,

 # reduce 5 omitted

module_eval <<'.,.,', 'sp4.y', 71
  def _reduce_6( val, _values, result )
						result.push val[1]
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 75
  def _reduce_7( val, _values, result )
						result.push RawNode.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 79
  def _reduce_8( val, _values, result )
						result.push RawNode.new(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 91
  def _reduce_9( val, _values, result )
						result = []
   result
  end
.,.,

 # reduce 10 omitted

module_eval <<'.,.,', 'sp4.y', 96
  def _reduce_11( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 105
  def _reduce_12( val, _values, result )
						result = DefVarNode.new(val[1], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 115
  def _reduce_13( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], val[4], val[7] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 119
  def _reduce_14( val, _values, result )
						result = DefFuncNode.new( val[1], val[2], nil, val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 129
  def _reduce_15( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 133
  def _reduce_16( val, _values, result )
						result.push val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 142
  def _reduce_17( val, _values, result )
						result = BlockNode.new(val[1], val[2])
   result
  end
.,.,

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'sp4.y', 174
  def _reduce_23( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 178
  def _reduce_24( val, _values, result )
						result = CmdNode.new( val, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 182
  def _reduce_25( val, _values, result )
						result = CmdNode.new( val[0].shift, val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 186
  def _reduce_26( val, _values, result )
						result = RawNode.new(val[0]);
   result
  end
.,.,

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'sp4.y', 206
  def _reduce_31( val, _values, result )
						result = CallFuncNode.new( nil, val[0], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 210
  def _reduce_32( val, _values, result )
						result = CallFuncNode.new( nil, val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 214
  def _reduce_33( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], val[4] )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 218
  def _reduce_34( val, _values, result )
						result = CallFuncNode.new( val[0], val[2], nil )
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 228
  def _reduce_35( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 232
  def _reduce_36( val, _values, result )
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 241
  def _reduce_37( val, _values, result )
						result = IfNode.new(val[1],val[3],val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 253
  def _reduce_38( val, _values, result )
						result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 257
  def _reduce_39( val, _values, result )
						result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 261
  def _reduce_40( val, _values, result )
						result = [IfNode.new(val[1], val[3], val[4])]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 274
  def _reduce_41( val, _values, result )
						result = ["_CMPVAL #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 279
  def _reduce_42( val, _values, result )
						result = ["_CMPWK #{val[0].sub(/\A\$/,"")}, #{val[2].sub(/\A\$/,"")}"]
						result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 284
  def _reduce_43( val, _values, result )
						result = ["_FLAG_CHECK #{val[2]}"]
						result.push "FLGOFF"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 289
  def _reduce_44( val, _values, result )
						result = ["_FLAG_CHECK #{val[2]}"]
						result.push "FLGON"
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 297
  def _reduce_45( val, _values, result )
						result = 'NE'	#result = 'EQ'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 301
  def _reduce_46( val, _values, result )
						result = 'EQ'	#result = 'NE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 305
  def _reduce_47( val, _values, result )
						result = 'LE'	#result = 'GT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 309
  def _reduce_48( val, _values, result )
						result = 'GE'	#result = 'LT'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 313
  def _reduce_49( val, _values, result )
						result = 'LT'	#result = 'GE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 317
  def _reduce_50( val, _values, result )
						result = 'GT'	#result = 'LE'
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 327
  def _reduce_51( val, _values, result )
            result = SwitchNode.new(val[1].sub(/\A\$/,""), val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 338
  def _reduce_52( val, _values, result )
            result = []
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 342
  def _reduce_53( val, _values, result )
            result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 346
  def _reduce_54( val, _values, result )
            result.push val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 355
  def _reduce_55( val, _values, result )
            result = CaseNode.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 367
  def _reduce_56( val, _values, result )
						result = AssignNode.new(val[0], val[2], :VARREF)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 371
  def _reduce_57( val, _values, result )
						result = AssignNode.new(val[0], val[2], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 375
  def _reduce_58( val, _values, result )
						result = AssignNode.new(val[0], val[2], funcall)
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 384
  def _reduce_59( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 388
  def _reduce_60( val, _values, result )
						result = [val[0], ['('] + val[2] + [')'] ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 392
  def _reduce_61( val, _values, result )
            result = [ val[0], "()" ]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 396
  def _reduce_62( val, _values, result )
						result = [val[0],val[1]]
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 400
  def _reduce_63( val, _values, result )
            result = [ val[0], nil ]
   result
  end
.,.,

 # reduce 64 omitted

module_eval <<'.,.,', 'sp4.y', 414
  def _reduce_65( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 418
  def _reduce_66( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 422
  def _reduce_67( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 426
  def _reduce_68( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 430
  def _reduce_69( val, _values, result )
						result = val
   result
  end
.,.,

 # reduce 70 omitted

 # reduce 71 omitted

 # reduce 72 omitted

 # reduce 73 omitted

 # reduce 74 omitted

module_eval <<'.,.,', 'sp4.y', 459
  def _reduce_75( val, _values, result )
						result = val
   result
  end
.,.,

module_eval <<'.,.,', 'sp4.y', 464
  def _reduce_76( val, _values, result )
						result.push val[1]
						result.push val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module PmScript
