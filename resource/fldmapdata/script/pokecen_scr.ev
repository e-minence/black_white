//======================================================================
//                pokecen_scr.ev
//    スクリプトファイル：pokecen_scr用
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "msg_pokecen_scr.h"
  //.include  "pokecen_scr.h"

  .include  "../../../prog/include/system/timezone.h" //時間帯定義

//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA    ev_heal_p01
_EVENT_DATA    ev_union
_EVENT_DATA    ev_zone_pokecen
_EVENT_DATA    ev_init_pokecen
_EVENT_DATA    ev_recover_pokecen
_EVENT_DATA    ev_pokecen_elevator_in
_EVENT_DATA    ev_pokecen_elevator_out
_EVENT_DATA    ev_pokecen_elevator_out_continue
_EVENT_DATA    ev_geonet
_EVENT_DATA_END

/**************************************************************/
/*            特殊スクリプト：ゾーン切り替えタイミング  　    */
/**************************************************************/
INIT_EVENT_START ev_zone_pokecen

INIT_EVENT_END


/**************************************************************/
/*            特殊スクリプト：マップ構築タイミング（初回）  　*/
/**************************************************************/
INIT_EVENT_START  ev_init_pokecen
INIT_EVENT_END


/**************************************************************/
/*            特殊スクリプト：マップ構築タイミング（毎回）  　*/
/**************************************************************/
INIT_EVENT_START  ev_recover_pokecen
INIT_EVENT_END


/**************************************************************/
/*                                                            */
/*                                                            */
/*        ポケモンセンター　ジョーイさん                      */
/*                                                            */
/*                                                            */
/**************************************************************/
{
DEFINE_LOCAL  LWK_POKERUS_STATUS
DEFINE_LOCAL  LWK_TRAINER_CARD_STATUS
DEFINE_LOCAL  LWK_RECOVER_YESNO

EVENT_START   ev_heal_p01
  _TALK_OBJ_START()

  _GET_TRAINER_CARD_RANK( LWK_TRAINER_CARD_STATUS )

  IF $LWK_TRAINER_CARD_STATUS < 4 THEN
  //普通のトレーナーカードの場合
    _CALL sub_heal_greeting   //時間帯で挨拶分岐

  ELSIF FLAG_OFF(FE_PC_GOLD) THEN
  //上位のトレーナーカードランクで、初来店の場合
    _CALL sub_heal_gyoe         //！表示、そ、そのカードは！〜

    _FLAG_SET( FE_PC_GOLD )
  ELSE
  //上位のトレーナーカードランクで、来店済みの場合
    _PLAYER_NAME( 0 )
    _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_09 ) //〜さん　おつかれさまです！

  ENDIF

  _YES_NO_WIN( LWK_RECOVER_YESNO )
  _BALLOONWIN_CLOSE()

  IF $LWK_RECOVER_YESNO == SCR_YES THEN
    //預ける場合
    
    //↓↓↓↓↓T02のポケセンでの案内イベント用特別処理↓↓↓↓↓  
    IF $WK_SCENE_T02PC0101 == 1 THEN
      $WK_SCENE_T02PC0101 = 2
    ENDIF
    //↑↑↑↑↑T02のポケセンでの案内イベント用特別処理↑↑↑↑↑ 

    _PLAYER_REQUEST( FIELD_PLAYER_REQBIT_PC_AZUKE )
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_hero_azuke )
    _OBJ_ANIME_WAIT()

    _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_04 ) //それでは　おあずかりします
    
    _CALL sub_heal_kaifuku_anime     //回復アニメ呼び出し
    _TEMOTI_POKEMON_KAIFUKU()        //手持ちポケモン回復処理
    _ADD_RECORD( RECID_RECOVERY_PC, 1 ) //レコード加算

    _BALLOONWIN_CLOSE()
    
    _OBJ_ANIME( MMDL_ID_PLAYER, anm_hero_uketori )
    _OBJ_ANIME_WAIT()
    _PLAYER_REQUEST( FIELD_PLAYER_REQBIT_MOVE_FORM_TO_DRAW_FORM )
    
    _CHECK_TEMOTI_POKERUS( LWK_POKERUS_STATUS )

    IF $LWK_POKERUS_STATUS == TRUE && FLAG_OFF( FE_PC_POKERUS )  THEN
    //ポケルス状態ポケモンがいて、その状態で初めての来店だったら
      _FLAG_SET( FE_PC_POKERUS )
      _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_10 )
      _LAST_KEYWAIT()
      _BALLOONWIN_CLOSE()
    ELSE
      _CALL sub_heal_goodbye    //またのご利用を
    ENDIF

  ELSE
    //預けるのを断った場合

    _CALL sub_heal_goodbye    //またのご利用を
  ENDIF

EVENT_END
}

/**************************************************************/
//サブルーチン：最初の挨拶
/**************************************************************/
sub_heal_greeting:
{
  DEFINE_LOCAL  LWK_TIMEZONE  //時間帯取得用

  _GET_TIMEZONE( LWK_TIMEZONE )
  SWITCH $LWK_TIMEZONE
  CASE  TIMEZONE_MORNING THEN
    _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_02 ) //おはようございます
  CASE  TIMEZONE_NOON THEN
    _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_03 ) //こんにちは
  CASE  TIMEZONE_EVENING, TIMEZONE_NIGHT, TIMEZONE_MIDNIGHT THEN
    _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_01 ) //おつかれさまです
  ENDSWITCH
}
_RET

/**************************************************************/
//サブルーチン：〆のメッセージ
/**************************************************************/
sub_heal_goodbye:
  _OBJ_ANIME( SCWK_TARGET_OBJID, anm_heal_p01_bow ) //お辞儀アニメ
  _OBJ_ANIME_WAIT()
  _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_06 ) //またのご利用を
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE()
_RET

//--------------------------------------------------------------------
//おじぎ
//--------------------------------------------------------------------
_ANIME_LABEL  anm_heal_p01_bow
  _ANIME_DATA  AC_PC_BOW,1
  _ANIME_DATA  AC_WAIT_4F,1
/*
  _ANIME_DATA  AC_DIR_L,1
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_DIR_U,1
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_DIR_R,1
  _ANIME_DATA  AC_WAIT_4F,1
  _ANIME_DATA  AC_DIR_D,1
  _ANIME_DATA  AC_WAIT_4F,1
*/
  _ANIME_DATA  ACMD_END,0

_ANIME_LABEL  anm_hero_azuke
  _ANIME_DATA AC_HERO_BANZAI,1
  _ANIME_DATA ACMD_END,0

_ANIME_LABEL  anm_hero_uketori
  _ANIME_DATA AC_HERO_BANZAI_UKE,1
  _ANIME_DATA ACMD_END,0
 
/**************************************************************/
//サブルーチン：トレーナーカードランク高い！
/**************************************************************/
sub_heal_gyoe:
  _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_07 ) //おつかれさまです
  _OBJ_ANIME( SCWK_TARGET_OBJID, anm_heal_p01_gyoe )  //！マーク表示
  _OBJ_ANIME_WAIT()
  _BALLOONWIN_CLOSE()

  _PLAYER_NAME( 0 )
  _BALLOONWIN_TALKOBJ_MSG( msg_pc_heal_08 ) //そ　そのカードは！？
_RET

//--------------------------------------------------------------------
//  びっくりマーク表示
//--------------------------------------------------------------------
_ANIME_LABEL  anm_heal_p01_gyoe
  _ANIME_DATA AC_MARK_GYOE,1
  _ANIME_DATA ACMD_END, 0

/**************************************************************/
//サブルーチン：回復アニメ
/**************************************************************/
sub_heal_kaifuku_anime:
{
  DEFINE_LOCAL  POKEMON_COUNT

  _OBJ_ANIME( SCWK_TARGET_OBJID, anm_heal_p01_turn_up )
  _OBJ_ANIME_WAIT()

  _GET_PARTY_POKE_COUNT( POKEMON_COUNT, POKECOUNT_MODE_TOTAL )
  _POKECEN_RECOVER_ANIME( POKEMON_COUNT )

  _OBJ_ANIME( SCWK_TARGET_OBJID, anm_heal_p01_turn_down )
  _OBJ_ANIME_WAIT()
_RET
}

//--------------------------------------------------------------------
//  左を向く
//--------------------------------------------------------------------
_ANIME_LABEL  anm_heal_p01_turn_up
  _ANIME_DATA  AC_DIR_U,1
  _ANIME_DATA  ACMD_END,0

//--------------------------------------------------------------------
//  下を向く
//--------------------------------------------------------------------
_ANIME_LABEL  anm_heal_p01_turn_down
  _ANIME_DATA  AC_DIR_D,1
  _ANIME_DATA  ACMD_END,0







/**************************************************************/
/*                                                            */
/*                                                            */
/*        ポケモンセンター　ユニオン受付                      */
/*                                                            */
/*                                                            */
/**************************************************************/
EVENT_START ev_union
{
  DEFINE_LOCAL have_cgear      // C-gearを持っているかどうか
  DEFINE_LOCAL room_in         // ユニオンルームに入るかどうか
  DEFINE_LOCAL explain         // 説明を受けるかどうか
  DEFINE_LOCAL dame_egg_count  // 駄目タマゴの数
  DEFINE_LOCAL ret

  // ローカル変数の初期化
  _FLAG_CHECK( FE_CGEAR_GET, have_cgear )
  $room_in    = FALSE
  $explain    = FALSE
  _GET_PARTY_POKE_COUNT( dame_egg_count, POKECOUNT_MODE_ONLY_DAME_EGG )

  _TALK_OBJ_START()

  // C-gear持ってない場合
  IF $have_cgear != TRUE THEN 
    //「まだ入れません」
    _BALLOONWIN_OBJMSG_POS( msg_pc_union_06, SCWK_TARGET_OBJID, POS_DOWN ) 
  ENDIF 

  // 駄目タマゴを持っている場合
  IF $dame_egg_count > 0 THEN
    //「つれていけない ポケモンがいます」
    _BALLOONWIN_OBJMSG_POS( msg_pc_union_07, SCWK_TARGET_OBJID, POS_DOWN ) 
  ENDIF

  // C-gear持っいて, 駄目タマゴを持っていない場合
  IF ($have_cgear == TRUE) && ($dame_egg_count == 0) THEN 
    //「ユニオンルームにようこそ」
    _BALLOONWIN_OBJMSG_POS( msg_pc_union_01, SCWK_TARGET_OBJID, POS_DOWN ) 
    // メニュー表示
    _BMPMENU_INIT_RIGHT( MENU_X1, MENU_Y1, 0, 1, ret )
    _BMPMENU_MAKE_LIST( msg_pc_union_menu_yes, msg_pc_union_menu_yes )
    _BMPMENU_MAKE_LIST( msg_pc_union_menu_explain, msg_pc_union_menu_explain )
    _BMPMENU_MAKE_LIST( msg_pc_union_menu_no, msg_pc_union_menu_no )
    _BMPMENU_START() 
    // 選択結果で分岐
    SWITCH $ret 
    CASE msg_pc_union_menu_yes THEN //『はい』
     $room_in = TRUE
     _BEACON_SET_REQ_UNION_COUNTER()
    CASE msg_pc_union_menu_no THEN //『いいえ』
      $room_in = FALSE
    CASE msg_pc_union_menu_explain THEN //『せつめいをきく』
      $explain = TRUE 
    ENDSWITCH
  ENDIF

  // 説明を聞く場合
  IF $explain == TRUE THEN
    //「へやにはいりますか？」
    _BALLOONWIN_OBJMSG_POS( msg_pc_union_02, SCWK_TARGET_OBJID, POS_DOWN )
    _YES_NO_WIN( ret )
    //『はい』
    IF $ret == SCR_YES THEN
      $room_in = TRUE
    ENDIF
  ENDIF

  // 無線通信 ON・OFF チェック
  IF $room_in == TRUE THEN
    _GET_AVAILABLE_WIRELESS( SCWK_ANSWER )
    IF $SCWK_ANSWER == FALSE THEN
      //_BALLOONWIN_CLOSE()
      _CHG_COMMON_SCR SCRID_WIRELESS_OFF_MESSAGE
      $room_in = FALSE
    ENDIF
  ENDIF

  // トレーナータイプ告知処理
  IF $room_in == TRUE THEN
    // トレーナータイプの変更をチェック
    _CHECK_PLAYER_VIEW_CHANGE( SCWK_TEMP0, SCWK_TEMP1 )
    // トレーナータイプを変更していない
    IF $SCWK_TEMP0 == FALSE THEN
      //「そうだ！…なんていかがでしょうか？」
      _TRAINER_TYPE_NAME( 0, SCWK_TEMP1 )
      _BALLOONWIN_OBJMSG_POS( msg_pc_union_08, SCWK_TARGET_OBJID, POS_DOWN )
    ENDIF
  ENDIF

  // ユニオンルームに入る場合
  IF $room_in == TRUE THEN
    //「ワイヤレスつうしんをかいしします」
    _BALLOONWIN_OBJMSG_POS( msg_pc_union_03, SCWK_TARGET_OBJID, POS_DOWN )
    _YES_NO_WIN( ret )
    //『いいえ』
    IF $ret == SCR_NO THEN
      $room_in = FALSE
    ENDIF
  ENDIF

  // レポート処理
  IF $room_in == TRUE THEN
    _BALLOONWIN_CLOSE()
    // レポートを書く
    _REPORT_EVENT_CALL( ret )
    // 書き込みに失敗
    IF $ret != SCR_REPORT_OK THEN
      $room_in = FALSE
    ENDIF
  ENDIF

  // フィールドマップ通信終了処理
  IF $room_in == TRUE THEN
    _FIELD_COMM_EXIT_EVENT_CALL( ret )

    IF $ret == SCR_FIELD_COMM_EXIT_CANCEL THEN
      $room_in = FALSE
    ELSIF $ret == SCR_FIELD_COMM_EXIT_ERROR THEN
      $room_in = FALSE
    ENDIF
  ENDIF

  // 入場
  IF $room_in == TRUE THEN
    //「おたのしみ ください」
    _BALLOONWIN_OBJMSG_POS( msg_pc_union_04, SCWK_TARGET_OBJID, POS_DOWN )
    _BALLOONWIN_CLOSE()
    _CALL sub_pokecen_elevator_in
    // 手持ちポケモン回復
    _TEMOTI_POKEMON_KAIFUKU()
    // 復帰時の出現先をここにする
    _SET_SP_LOCATION_HERE()
    // ↑で設定した特殊接続先からゲームを開始するリクエスト
    _FLAG_SET( SYS_FLAG_SPEXIT_REQUEST )
    // マップチェンジ
    _MAP_CHANGE_TO_UNION()
  ENDIF

  // キャンセルした場合
  IF $room_in != TRUE THEN
    //「また おこしください」
    _BALLOONWIN_OBJMSG_POS( msg_pc_union_05, SCWK_TARGET_OBJID, POS_DOWN )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
  ENDIF
}
EVENT_END

/**************************************************************/
/*  ポケセンエレベーターに乗り込む */
/**************************************************************/
ev_pokecen_elevator_in:
  _CALL sub_pokecen_elevator_in
  _CHG_LOCAL_SCR

sub_pokecen_elevator_in:
{
  DEFINE_LOCAL  BASEX
  DEFINE_LOCAL  BASEZ
  DEFINE_LOCAL  LWK_BM_DOOR_ID
  DEFINE_LOCAL  LWK_BM_FLOOR_ID

  $WK_SYS_SCENE_COMM = 1
  _PLAYER_POS_GET( BASEX, BASEZ )
  $BASEZ -= 3
  _BMODEL_ANIME_CREATE( LWK_BM_DOOR_ID, SCR_BMID_PCEV_DOOR, BASEX, BASEZ )

//受付お姉さん引っ込む
  _OBJ_ANIME( SCWK_TARGET_OBJID, anm_pc_woman_move_backword )
  _TIME_WAIT( 16 )
//プレイヤー、２歩進む
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_move_foward )
  _OBJ_ANIME_WAIT()
//エレベータードア開く
  _SE_PLAY( SEQ_SE_FLD_22 )
  _BMODEL_ANIME_SET( LWK_BM_DOOR_ID, SCR_BMANM_PCEV_OPEN )
  _BMODEL_ANIME_WAIT( LWK_BM_DOOR_ID )
  _SE_WAIT()

//プレイヤー、エレベーターに乗り込む
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_board_elevator )
  _OBJ_ANIME_WAIT()

//エレベータードア閉まる
  _SE_PLAY( SEQ_SE_FLD_22 )
  _BMODEL_ANIME_SET( LWK_BM_DOOR_ID, SCR_BMANM_PCEV_CLOSE )
  _BMODEL_ANIME_WAIT( LWK_BM_DOOR_ID )
  _SE_WAIT()

  _BMODEL_ANIME_DELETE( LWK_BM_DOOR_ID )

  _BMODEL_ANIME_CREATE( LWK_BM_FLOOR_ID, SCR_BMID_PCEV_FLOOR, BASEX, BASEZ )
//エレベーター下降アニメ
  _SE_PLAY( SEQ_SE_FLD_23 )
  _BMODEL_ANIME_SET( LWK_BM_FLOOR_ID, SCR_BMANM_PCEV_DOWN )
  _PLAYER_UPDOWN_EFFECT( 0, 40, 64, 0 )

  _BMODEL_ANIME_WAIT( LWK_BM_FLOOR_ID )

  _MAP_FADE_BLACK_OUT()
  _MAP_FADE_END_CHECK()
  _SE_STOP()

  _BMODEL_ANIME_DELETE( LWK_BM_FLOOR_ID )

  _RET
}

_ANIME_LABEL    anm_pc_woman_move_backword
  _ANIME_DATA   AC_WALK_U_16F, 1
  _ANIME_DATA   AC_WALK_L_16F, 1
  _ANIME_DATA   AC_DIR_R,1
  _ANIME_DATA   ACMD_END,0

_ANIME_LABEL    anm_player_move_foward
  _ANIME_DATA   AC_WALK_U_16F, 2
  _ANIME_DATA   ACMD_END,0

_ANIME_LABEL    anm_player_board_elevator
  _ANIME_DATA   AC_WALK_U_16F, 2
  _ANIME_DATA   AC_DIR_D, 1
  _ANIME_DATA   ACMD_END,0



/**************************************************************/
/*  ポケセンエレベーターから出てくる                          */
/**************************************************************/
DEFINE_LOCAL LWK_CONTINUE  // コンティニュー復帰かどうか

/*------------------------------------------------------------*
  通常の復帰用。
 *------------------------------------------------------------*/
ev_pokecen_elevator_out:
  $LWK_CONTINUE = FALSE
  _CALL sub_pokecen_elevator_out
  _CHG_LOCAL_SCR

/*------------------------------------------------------------*
  コンティニュー復帰用。
  画面フェードインの際にゲーム内の季節を表示する。
 *------------------------------------------------------------*/
ev_pokecen_elevator_out_continue:
  $LWK_CONTINUE = TRUE
  _CALL sub_pokecen_elevator_out
  _CHG_LOCAL_SCR


sub_pokecen_elevator_out:
{
  DEFINE_LOCAL  BASEX
  DEFINE_LOCAL  BASEZ
  DEFINE_LOCAL  LWK_WOMANID
  DEFINE_LOCAL  LWK_BM_FLOOR_ID
  DEFINE_LOCAL  LWK_BM_DOOR_ID

  $WK_SYS_SCENE_COMM = 0
  _FLAG_RESET( SYS_FLAG_SPEXIT_REQUEST )

  _PLAYER_POS_GET( BASEX, BASEZ )
  $BASEZ += 3  //受付のみなさんは基本位置がエレベーターの３歩下
  _GET_OBJID( LWK_WOMANID, SCWK_ANSWER, BASEX, 3, BASEZ )
  IF $SCWK_ANSWER == TRUE THEN
    $BASEX -= 1
    $BASEZ -= 1
    _OBJ_POS_CHANGE( LWK_WOMANID, BASEX, 3, BASEZ, DIR_RIGHT )
    $SCWK_TARGET_OBJID = $LWK_WOMANID
  ENDIF

//エレベーター上昇アニメ準備：自機を見えなくしておく
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_vanish )
  _OBJ_ANIME_WAIT()

//エレベーター上昇アニメ準備：適用した最初のフレームで停止しておく
  _PLAYER_POS_GET( BASEX, BASEZ )
  _BMODEL_ANIME_CREATE( LWK_BM_FLOOR_ID, SCR_BMID_PCEV_FLOOR, BASEX, BASEZ )
  _BMODEL_ANIME_SET( LWK_BM_FLOOR_ID, SCR_BMANM_PCEV_UP )
  _BMODEL_ANIME_STOP( LWK_BM_FLOOR_ID )

//マップフェードイン
  IF $LWK_CONTINUE == TRUE THEN
    _MAP_FADE_SEASON_IN_FORCE() 
  ELSE 
    _MAP_FADE_BLACK_IN_FORCE() 
  ENDIF
	_MAP_FADE_END_CHECK()

//エレベーター上昇アニメ
  _SE_PLAY( SEQ_SE_FLD_23 )
  _BMODEL_ANIME_SET( LWK_BM_FLOOR_ID, SCR_BMANM_PCEV_UP )
  //自機上昇演出開始
  _PLAYER_UPDOWN_EFFECT( 1, 40, 64, 0 )

  //自機を下向きにし、表示する
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_turn_down )
  _OBJ_ANIME_WAIT()

  _BMODEL_ANIME_WAIT( LWK_BM_FLOOR_ID )
  _SE_STOP()

  _BMODEL_ANIME_DELETE( LWK_BM_FLOOR_ID )

  _BMODEL_ANIME_CREATE( LWK_BM_DOOR_ID, SCR_BMID_PCEV_DOOR, BASEX, BASEZ )
//エレベータードア開く
  _SE_PLAY( SEQ_SE_FLD_22 )
  _BMODEL_ANIME_SET( LWK_BM_DOOR_ID, SCR_BMANM_PCEV_OPEN )
  _BMODEL_ANIME_WAIT( LWK_BM_DOOR_ID )
  _SE_WAIT()

//プレイヤー、3歩進む
  _OBJ_ANIME( MMDL_ID_PLAYER, anm_player_return_strait )
  _OBJ_ANIME_WAIT()

//受付お姉さんもとの位置に戻る
  _OBJ_ANIME( SCWK_TARGET_OBJID, anm_pc_woman_move_default_pos )
  _OBJ_ANIME_WAIT()

//エレベータードア閉まる
  _SE_PLAY( SEQ_SE_FLD_22 )
  _BMODEL_ANIME_SET( LWK_BM_DOOR_ID, SCR_BMANM_PCEV_CLOSE )
  _BMODEL_ANIME_WAIT( LWK_BM_DOOR_ID )
  _SE_WAIT()

  _BMODEL_ANIME_DELETE( LWK_BM_DOOR_ID )
  _RET
}

_ANIME_LABEL    anm_player_vanish
  _ANIME_DATA   AC_VANISH_ON, 1
  _ANIME_DATA   ACMD_END, 0

_ANIME_LABEL    anm_player_turn_down
  _ANIME_DATA   AC_VANISH_OFF, 1
  _ANIME_DATA   AC_DIR_D, 1
  _ANIME_DATA   ACMD_END,0

_ANIME_LABEL    anm_pc_woman_move_default_pos
  _ANIME_DATA   AC_WALK_R_16F, 1
  _ANIME_DATA   AC_WALK_D_16F, 1
  _ANIME_DATA   ACMD_END,0

_ANIME_LABEL    anm_player_return_strait
  _ANIME_DATA   AC_WALK_D_16F, 4
  _ANIME_DATA   ACMD_END,0

/**************************************************************/
/*    ジオネット呼び出し                                      */
/**************************************************************/
EVENT_START    ev_geonet
  _TALK_START_SE_PLAY()
  _CALL_GEONET_PROC()
EVENT_END

