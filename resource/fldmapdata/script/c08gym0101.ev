//======================================================================
//                c08gym0101.ev
//
//    スクリプトファイル：c08gym0101用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "../../message/dst/script/msg_c08gym0101.h"
  .include  "c08gym0101.h"

//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA		ev_c08gym0101_leader8_01
_EVENT_DATA		ev_zone_c08gym0101
_EVENT_DATA		ev_pos_c08gym0101_gimmick_00	//１階左の竜（左側）
_EVENT_DATA		ev_pos_c08gym0101_gimmick_01	//１階左の竜（右側）
_EVENT_DATA		ev_pos_c08gym0101_gimmick_02	//１階右の竜（左側）
_EVENT_DATA		ev_pos_c08gym0101_gimmick_03	//１階右の竜（右側）
_EVENT_DATA		ev_pos_c08gym0101_gimmick_04	//２階の竜（左側）
_EVENT_DATA		ev_pos_c08gym0101_gimmick_05	//２階の竜（右側）
_EVENT_DATA		ev_c08gym0101_sunglasses_01
_EVENT_DATA		ev_bg_c08gym0101_statue_01
_EVENT_DATA		ev_pos_c08gym0101_f2_03
_EVENT_DATA		ev_c08gym0101_f2_03
_EVENT_DATA_END

//--------------------------------------------------------------
//              ローカルワーク
//--------------------------------------------------------------
DEFINE_LOCAL TARGET_HEAD    //ギミック発動対象ドラゴン首インデックスを格納（0〜2）
DEFINE_LOCAL CAMERA_IDX     //カメラ移動識別用(0〜5)
DEFINE_LOCAL TARGET_ARM    //ギミック発動対象ドラゴン腕インデックスを格納（0〜1）

/************************************************************/
/*					ジムギミック初期化						*/
/************************************************************/
INIT_EVENT_START	ev_zone_c08gym0101
	//ジムギミック初期化コマンド
	_GYM_DRAGON_INIT()
	
	//バージョンを取得してOBJを変化させる
	_GET_ROM_VERSION( SCWK_ANSWER )
	
	//BlackVERならシャガ
	IF $SCWK_ANSWER == VERSION_BLACK THEN
		$OBJCHRWORK0 = LEADER8B
	
	//Whiteならアイリス
	ELSE
		$OBJCHRWORK0 = LEADER8W
	ENDIF

INIT_EVENT_END

/************************************************************/
/*	ジムリーダー　シャガ・アイリス                          */
/************************************************************/
EVENT_START	ev_c08gym0101_leader8_01
	_TALK_OBJ_START()
	
	//バージョンチェック
	DEFINE_LOCAL LCW_VERSION
	_GET_ROM_VERSION ( LCW_VERSION ) 
	
	//ジムバッジ取得チェック
	_GET_BADGE_FLAG( SCWK_TEMP0, BADGE_ID_08 )
	
	//★Blackの場合
	IF $LCW_VERSION == VERSION_BLACK THEN
	
		//ジムバッジを取得していない場合
		IF $SCWK_TEMP0 == 0 THEN
		
			//会話
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_01b,C08GYM0101_WKOBJCODE00_01 )
			_BALLOONWIN_CLOSE()
			
			//戦闘処理
			_TRAINER_BTL_SET( TRID_LEADER8B_01, 0 )
			//結果チェック
			_TRAINER_LOSE_CHECK( SCWK_ANSWER )
			IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
				_TRAINER_WIN()
			ELSE
				_TRAINER_LOSE()
			ENDIF
			
		
			//勝利後会話
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_02b , C08GYM0101_WKOBJCODE00_01 )
			_BALLOONWIN_CLOSE()

			//レジェンドバッジ入手処理
			_SET_BADGE_FLAG( BADGE_ID_08)
			
			//入手音再生
			_ME_PLAY( SEQ_ME_BADGE )
			_CALL_FLD3D_CUTIN( FLDCIID_GYM08 )
			_ME_WAIT()
			
			//シャガからレジェンドバッジをもらった
			_PLAYER_NAME( 0 )
			_SYSWIN_MSG_DOWN( msg_c08gym0101_leader_03b )
			_SYSWIN_CLOSE()

			//シャガメッセージ
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_04b , C08GYM0101_WKOBJCODE00_01 )
			_BALLOONWIN_CLOSE()

			//わざマシン入手
			_ITEM_EVENT_KEYWAIT( ITEM_WAZAMASIN82, 1 )

			//わざマシン中身解説
			_ITEM_NAME( 0, ITEM_WAZAMASIN01 )
			_ITEM_WAZA_NAME( 1, ITEM_WAZAMASIN01 )
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_05b , C08GYM0101_WKOBJCODE00_01 )
			_LAST_KEYWAIT()
			_BALLOONWIN_CLOSE()
			
			//========================================//
		
			//========================================//
			
		//ジムバッジ入手後
		ELSE
			
			//ゲームクリアしていたら
			IF FLAG_ON( SYS_FLAG_GAME_CLEAR ) THEN
				_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_06b , C08GYM0101_WKOBJCODE00_01 )
				_LAST_KEYWAIT()
				_BALLOONWIN_CLOSE()
			ELSE
			//未クリア
				_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_06b , C08GYM0101_WKOBJCODE00_01 )
				_LAST_KEYWAIT()
				_BALLOONWIN_CLOSE()
			ENDIF
			
		ENDIF
	
	//★Whiteの場合
	ELSE
	
		//ジムバッジを取得していない場合
		IF $SCWK_TEMP0 == 0 THEN
		
			//会話
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_01w,C08GYM0101_WKOBJCODE00_01 )
			_BALLOONWIN_CLOSE()
			
			//戦闘処理
			_TRAINER_BTL_SET( TRID_LEADER8A_01, 0 )
			//結果チェック
			_TRAINER_LOSE_CHECK( SCWK_ANSWER )
			IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
				_TRAINER_WIN()
			ELSE
				_TRAINER_LOSE()
			ENDIF
			
		
			//勝利後会話
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_02w , C08GYM0101_WKOBJCODE00_01 )
			_BALLOONWIN_CLOSE()

			//レジェンドバッジ入手処理
			_SET_BADGE_FLAG( BADGE_ID_08)
			
			//入手音再生
			_ME_PLAY( SEQ_ME_BADGE )
			_CALL_FLD3D_CUTIN( FLDCIID_GYM08 )
			_ME_WAIT()
			
			//アイリスからレジェンドバッジをもらった
			_PLAYER_NAME( 0 )
			_SYSWIN_MSG_DOWN( msg_c08gym0101_leader_03w )
			_SYSWIN_CLOSE()

			//アイリスメッセージ
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_04w , C08GYM0101_WKOBJCODE00_01 )
			_BALLOONWIN_CLOSE()

			//わざマシン入手
			_ITEM_EVENT_KEYWAIT( ITEM_WAZAMASIN82, 1 )

			//わざマシン中身解説
			_ITEM_NAME( 0, ITEM_WAZAMASIN01 )
			_ITEM_WAZA_NAME( 1, ITEM_WAZAMASIN01 )
			_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_05w , C08GYM0101_WKOBJCODE00_01 )
			_LAST_KEYWAIT()
			_BALLOONWIN_CLOSE()
			
			//========================================//
		
			//========================================//
			
		//ジムバッジ入手後
		ELSE
			
			//ゲームクリアしていたら
			IF FLAG_ON( SYS_FLAG_GAME_CLEAR ) THEN
				_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_06w , C08GYM0101_WKOBJCODE00_01 )
				_LAST_KEYWAIT()
				_BALLOONWIN_CLOSE()
			ELSE
			//未クリア
				_BALLOONWIN_OBJMSG( msg_c08gym0101_leader_06w , C08GYM0101_WKOBJCODE00_01 )
				_LAST_KEYWAIT()
				_BALLOONWIN_CLOSE()
			ENDIF
			
		ENDIF
		
	ENDIF
	
EVENT_END

/************************************************************/
/*	POS起動トレーナー戦                                     */
/************************************************************/
EVENT_START	ev_pos_c08gym0101_f2_03

	//視線曲PLAY
	 _TRAINER_BGM_SET( TRID_VETERANM_04 )

	//トレーナー近寄って来る
	_OBJ_ANIME( TR_C08GYM0101_F2_03,anm_c08r0101_tr_com )
	_OBJ_ANIME_WAIT()
	
	//トレーナーメッセージ
	_TALK_OBJ_START()
	_BALLOONWIN_OBJMSG( msg_c08gym0101_veteranm4_01,TR_C08GYM0101_F2_03 )
	_BALLOONWIN_CLOSE()
	
	//戦闘処理
	_TRAINER_BTL_SET( TRID_VETERANM_04, 0 )
	
	//結果チェック
	_TRAINER_LOSE_CHECK( SCWK_ANSWER )
	IF $SCWK_ANSWER == SCR_BATTLE_RESULT_WIN THEN
			
			//トレーナーメッセージ
			_TALK_OBJ_START()
			_BALLOONWIN_OBJMSG( msg_c08gym0101_veteranm4_02,TR_C08GYM0101_F2_03 )
			_BALLOONWIN_CLOSE()
	
			//========================================//
			//POS起動をオフに
			$WK_SCENE_C08GYM0101 = 1
			//========================================//
			
			_TRAINER_WIN()
		ELSE
			_TRAINER_LOSE()
		ENDIF
EVENT_END

//--------------------------------------------------------------
//	【仮】トレーナー接近
//--------------------------------------------------------------
	_ANIME_LABEL	anm_c08r0101_tr_com
	//_ANIME_DATA	AC_MARK_GYOE,1
	_ANIME_DATA	AC_WALK_U_8F,2
	_ANIME_DATA	AC_DIR_U,1
	_ANIME_DATA	ACMD_END,0

/************************************************************/
/*	POS起動トレーナー：会話時                                */
/************************************************************/
EVENT_START	ev_c08gym0101_f2_03
	_EASY_BALLOONWIN_TALKOBJ_MSG(msg_c08gym0101_veteranm4_02)
EVENT_END

/************************************************************/
/*						ジムガイド							*/
/************************************************************/
EVENT_START	ev_c08gym0101_sunglasses_01
	_TALK_OBJ_START()

	//バッジフラグ取得
	_GET_BADGE_FLAG( SCWK_TEMP0, BADGE_ID_08 )

	//バッジフラグで分岐
	IF $SCWK_TEMP0 == 0 THEN
		//バッジ入手前の処理

		//アイテム入手フラグで分岐
		IF FLAG_OFF( FE_C08GYM_ITEM ) THEN
			//アイテム未入手なら、おいしいみず入手イベント
			_BALLOONWIN_TALKOBJ_MSG( msg_c02gym0101_glasses_01 )
			_BALLOONWIN_CLOSE()
			_ITEM_EVENT_KEYWAIT( ITEM_OISIIMIZU, 1 )
			_BALLOONWIN_TALKOBJ_MSG( msg_c02gym0101_glasses_02 )
			_LAST_KEYWAIT()
			_BALLOONWIN_CLOSE()

			_FLAG_SET( FE_C08GYM_ITEM )			//アイテム入手フラグをセット

		ELSE
			//入手済みならメッセージのみ
			_BALLOONWIN_TALKOBJ_MSG( msg_c02gym0101_glasses_02 )
			_LAST_KEYWAIT()
			_BALLOONWIN_CLOSE()
		ENDIF

	ELSE
		//バッジ入手後の処理

		_BALLOONWIN_TALKOBJ_MSG( msg_c02gym0101_glasses_03 )
		_LAST_KEYWAIT()
		_BALLOONWIN_CLOSE()

	ENDIF

EVENT_END

/************************************************************/
/*							石像							*/
/************************************************************/
EVENT_START	ev_bg_c08gym0101_statue_01
	_TALK_OBJ_START()

	//バージョンチェック
	DEFINE_LOCAL LCW_VERSION_ST
	_GET_ROM_VERSION ( LCW_VERSION_ST ) 
	
	//主人公名取得
	_PLAYER_NAME( 0 )
	
	//バッジフラグ取得
	_GET_BADGE_FLAG( SCWK_TEMP0, BADGE_ID_08 )
	
	//★Blackの場合
	IF $LCW_VERSION_ST == VERSION_BLACK THEN

		//ジムバッジフラグによって分岐
		IF $SCWK_TEMP0 == 0 THEN
			//バッジ入手前なら
			_SYSWIN_MSG_DOWN( msg_c02gym0101_statue_b_01 )

		ELSE
			//バッジ入手後なら　【仮】イベント進行で分岐（？？後友達の名前も入る）
			IF FLAG_OFF( FH_01) THEN
				//イベント進行前
				_SYSWIN_MSG_DOWN( msg_c02gym0101_statue_b_02 )
			ELSE
				//イベント進行後
				_SYSWIN_MSG_DOWN( msg_c02gym0101_statue_b_03 )
			ENDIF

		ENDIF
	
	//★Whiteの場合

		//ジムバッジフラグによって分岐
		IF $SCWK_TEMP0 == 0 THEN
			//バッジ入手前なら
			_SYSWIN_MSG_DOWN( msg_c02gym0101_statue_w_01 )

		ELSE
			//バッジ入手後なら　【仮】イベント進行で分岐（？？後友達の名前も入る）
			IF FLAG_OFF( FH_01) THEN
				//イベント進行前
				_SYSWIN_MSG_DOWN( msg_c02gym0101_statue_w_02 )
			ELSE
				//イベント進行後
				_SYSWIN_MSG_DOWN( msg_c02gym0101_statue_w_03 )
			ENDIF

		ENDIF
	
	ENDIF

	_LAST_KEYWAIT()
	_SYSWIN_CLOSE()

EVENT_END

/************************************************************/
/*				リュウの腕に乗る １階左の竜（左側）			*/
/************************************************************/
EVENT_START	ev_pos_c08gym0101_gimmick_00
  
  _GYM_DRAGON_JUMP_DOWN(DIR_RIGHT)
  _GYM_DRAGON_CALL_GMK(0, 1)

  //カメラ移動インデックッス0　対象首インデックッス0　対象腕インデックス1
  $CAMERA_IDX = 0
  $TARGET_HEAD = 0
  $TARGET_ARM = 1
  _CALL move_dragon
EVENT_END

/************************************************************/
/*				リュウの腕に乗る １階左の竜（右側）			*/
/************************************************************/
EVENT_START	ev_pos_c08gym0101_gimmick_01

  _GYM_DRAGON_JUMP_DOWN(DIR_LEFT)
  _GYM_DRAGON_CALL_GMK(0, 0)

  //カメラ移動インデックッス1　対象首インデックッス0  対象腕インデックス0
  $CAMERA_IDX = 1
  $TARGET_HEAD = 0
  $TARGET_ARM = 0
  _CALL move_dragon
EVENT_END

/************************************************************/
/*				リュウの腕に乗る １階右の竜（左側）			*/
/************************************************************/
EVENT_START	ev_pos_c08gym0101_gimmick_02

  _GYM_DRAGON_JUMP_DOWN(DIR_RIGHT)
  _GYM_DRAGON_CALL_GMK(1, 0)

  //カメラ移動インデックッス1　対象首インデックッス1  対象腕インデックス0
  $CAMERA_IDX = 2
  $TARGET_HEAD = 1
  $TARGET_ARM = 0
  _CALL move_dragon
EVENT_END

/************************************************************/
/*				リュウの腕に乗る １階右の竜（右側）			*/
/************************************************************/
EVENT_START	ev_pos_c08gym0101_gimmick_03

  _GYM_DRAGON_JUMP_DOWN(DIR_LEFT)
  _GYM_DRAGON_CALL_GMK(1, 1)

  //カメラ移動インデックッス2　対象首インデックッス1  対象腕インデックス1
  $CAMERA_IDX = 3
  $TARGET_HEAD = 1
  $TARGET_ARM = 1
  _CALL move_dragon
EVENT_END

/************************************************************/
/*				リュウの腕に乗る ２階の竜（左側）			*/
/************************************************************/
EVENT_START	ev_pos_c08gym0101_gimmick_04

  _GYM_DRAGON_JUMP_DOWN(DIR_RIGHT)
  _GYM_DRAGON_CALL_GMK(2, 0)

  //カメラ移動インデックッス4　対象首インデックッス2  対象腕インデックス0
  $CAMERA_IDX = 4
  $TARGET_HEAD = 2
  $TARGET_ARM = 0
  _CALL move_dragon
EVENT_END

/************************************************************/
/*				リュウの腕に乗る ２階の竜（右側）			*/
/************************************************************/
EVENT_START	ev_pos_c08gym0101_gimmick_05

  _GYM_DRAGON_JUMP_DOWN(DIR_LEFT)
  _GYM_DRAGON_CALL_GMK(2, 1)

  //カメラ移動インデックッス5　対象首インデックッス2  対象腕インデックス1
  $CAMERA_IDX = 5
  $TARGET_HEAD = 2
  $TARGET_ARM = 1
  _CALL move_dragon
EVENT_END

/************************************************************/
/*				ドラゴン動作             */
/************************************************************/
move_dragon:
  //カメラ移動
  _CAMERA_START()

	_CAMERA_PURGE()

  _CALL move_arm

  _CALL move_head

  _CAMERA_DEF_MOVE( 30 )
	_CAMERA_WAIT_MOVE()
	_CAMERA_BIND()

	_CAMERA_END()

_RET

/************************************************************/
/*				カメラ移動+腕動作                       */
/*        input:CAMERA_IDX TARGET_HEAD  TARGET_ARM*/
/************************************************************/
move_arm:
  //分岐をかける
  SWITCH $CAMERA_IDX
  CASE 0 THEN
    _CAMERA_MOVE( 9688,0,1232896,819200,0,1933312,30 )
  CASE 1 THEN
    _CAMERA_MOVE( 9688,0,1232896,819200,0,1933312,30 )
  CASE 2 THEN
    _CAMERA_MOVE( 9688,0,1232896,2818048,0,1474560,30 )
  CASE 3 THEN
    _CAMERA_MOVE( 9688,0,1232896,2818048,0,1474560,30 )
  CASE 4 THEN
    _CAMERA_MOVE( 9688,0,1232896,1818624,327759,1802240,30 )
  CASE 5 THEN
    _CAMERA_MOVE( 9688,0,1232896,1818624,327759,1802240,30 )
  DEFAULT
	ENDSWITCH

	_CAMERA_WAIT_MOVE()

  //腕移動
  _GYM_DRAGON_MOVE_ARM(TARGET_HEAD, TARGET_ARM)

_RET



/************************************************************/
/*				カメラ移動+首動作             */
/*        input:CAMERA_IDX TARGET_HEAD  */
/************************************************************/
move_head:
  //分岐をかける
  SWITCH $CAMERA_IDX
  CASE 0 THEN
    _CAMERA_MOVE( 6488,7680,970752,1040384,249841,2576384,30 )
  CASE 1 THEN
    _CAMERA_MOVE( 6488,7680,970752,1040384,249841,2576384,30 )
  CASE 2 THEN
    _CAMERA_MOVE( 5080,57472,970752,2449408,331791,1114112,30 )
  CASE 3 THEN
    _CAMERA_MOVE( 5080,4736,970752,3039232,331791,1114112,30 )
  CASE 4 THEN
    _CAMERA_MOVE( 7128,6144,970752,1863680,774223,1241088,30 )
  CASE 5 THEN
    _CAMERA_MOVE( 7128,6144,970752,1863680,774223,1241088,30 )
  DEFAULT
	ENDSWITCH

	_CAMERA_WAIT_MOVE()

  //首移動
  _GYM_DRAGON_MOVE_HEAD(TARGET_HEAD)

_RET


