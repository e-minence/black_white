
//======================================================================
//                c03r0502.ev
//
//    スクリプトファイル：c03r0502用
//
//======================================================================

  .text

  .include  "scr_seq_def.h"
  .include  "msg_c03r0502.h"
  .include  "c03r0502.h"

//--------------------------------------------------------------
//               スクリプト本体
//--------------------------------------------------------------

//--------------------------------------------------------------
//               スクリプトテーブル
//--------------------------------------------------------------
_EVENT_DATA    ev_c03r0502_engineer_01	//HGSS連動。DLプログラム解除イベント
_EVENT_DATA    ev_c03r0502_mrlock_01	//HGSS連動。ロックカプセルイベント
_EVENT_DATA_END

DEFINE_LOCAL player_dir

/************************************************************/
/*					システムエンジニア（ASSISTANTM）		*/
/************************************************************/
EVENT_START	ev_c03r0502_engineer_01
  _TALK_OBJ_START()
  
  //タイトルからのスタートメニューオープンチェック
  _GET_STARTMENU_FLAG( SCR_STARTMENU_FLAG_MACHINE, SCWK_ANSWER )
  //転送マシンを実行した後か？
  IF $SCWK_ANSWER == TRUE THEN
    DEFINE_LOCAL msg
    //項目は「ＮＥＷ」か？
    _CHK_STARTMENU_VIEW_FLAG( SCR_STARTMENU_FLAG_MACHINE, SCWK_ANSWER )
    IF $SCWK_ANSWER == TRUE THEN   //ＮＥＷ表示済み
      //「つかうの　かんたん」　＞＞　終了
      $msg = msg_c03r0502_engineer_06
    ELSE                           //ＮＥＷ表示
      //「ためしてみて」＞＞　終了
      $msg = msg_c03r0502_engineer_04
    ENDIF
      _BALLOONWIN_TALKOBJ_MSG( msg )
      _LAST_KEYWAIT()
      _BALLOONWIN_CLOSE()
  ELSE
    _CALL pass_input_start
  ENDIF
EVENT_END

pass_input_start:
  DEFINE_LOCAL pass_word_clear
  DEFINE_LOCAL easy_talk_word1
  DEFINE_LOCAL easy_talk_word2

  //「パスワードおしえて」
  _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_engineer_01 )
  _BALLOONWIN_CLOSE()
  //簡易会話アプリ
  {
    _MAP_FADE_BLACK_OUT()
    _MAP_FADE_END_CHECK()
    _FIELD_CLOSE()
    _CALL_EASY_TALK_APP( EASYTALK_MODE_PASSWORD, easy_talk_word1, easy_talk_word2, SCWK_ANSWER )
    _FIELD_OPEN()
    _MAP_FADE_BLACK_IN()
    _MAP_FADE_END_CHECK()
  }
  IF $SCWK_ANSWER != TRUE THEN
    $pass_word_clear = FALSE
  ELSE
    //答え比較
    _MACHINE_PASSWORD(1, easy_talk_word1, easy_talk_word2, pass_word_clear)
  ENDIF

  //1つめパスワードはクリアした？
  IF $pass_word_clear != TRUE THEN
    //「なにかかんちがいを・・」  ＞＞　終了
    _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_engineer_05 )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
    _RET
  ENDIF

  //「つづきを・・」
  _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_engineer_02 )
  _BALLOONWIN_CLOSE()
  //簡易会話アプリ
  {
    _MAP_FADE_BLACK_OUT()
    _MAP_FADE_END_CHECK()
    _FIELD_CLOSE()
    _CALL_EASY_TALK_APP( EASYTALK_MODE_PASSWORD, easy_talk_word1, easy_talk_word2, SCWK_ANSWER )
    _FIELD_OPEN()
    _MAP_FADE_BLACK_IN()
    _MAP_FADE_END_CHECK()
  }
  IF $SCWK_ANSWER != TRUE THEN
    $pass_word_clear = FALSE
  ELSE 
    //答え比較
    _MACHINE_PASSWORD(2, easy_talk_word1, easy_talk_word2, pass_word_clear)    
  ENDIF

  //2つめスワードはクリアした？
  IF $pass_word_clear != TRUE THEN
    //「なにかかんちがいを・・」  ＞＞　終了
    _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_engineer_05 )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
    _RET
  ENDIF

  //メニュー解禁
  _SET_STARTMENU_FLAG( SCR_STARTMENU_FLAG_MACHINE )

  //「うむ、ただしい」
  _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_engineer_03 )
  _LAST_KEYWAIT()
  _BALLOONWIN_CLOSE()

_RET


/************************************************************/
/*					ミスターロック（CLOWN）					*/
/************************************************************/
EVENT_START	ev_c03r0502_mrlock_01
  _TALK_OBJ_START()

  //自機の方向を取得しておく
  _PLAYER_DIR_GET( player_dir )
  //イベント終了しているか？
  IF FLAG_ON(FE_ROCKCAPSULE_END) THEN    //終了
    //「ミスターロック」ラストメッセージ
    _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_mrlock_07 )
    _LAST_KEYWAIT()
    _BALLOONWIN_CLOSE()
  ELSE                            //まだ
    //１回転
    _CALL clown_spin
    //ロックカプセル持っているか?   //@todo ダウンロードアイテムチェックをする
    _ITEM_CHK( ITEM_ROKKUKAPUSERU, 1, SCWK_ANSWER )
    IF $SCWK_ANSWER == TRUE THEN    //持っている
      //タグ０番にプレーヤー名をセット
      _PLAYER_NAME( 0 )
       //「○○さんあて」
      _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_mrlock_02 )
      _BALLOONWIN_CLOSE()
      //モゾモゾ
      _CALL clown_mozo
      //「あきましたよ」
      _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_mrlock_03 )
      _BALLOONWIN_CLOSE()
      //アイテム取得  技マシン101
      _ITEM_EVENT_KEYWAIT(ITEM_WAZAMASIN101, 1)
      //「おやおや」
      _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_mrlock_04 )
      _BALLOONWIN_CLOSE()
      //モゾモゾ
      _CALL clown_mozo
      //「なになに」
      _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_mrlock_05 )
      _BALLOONWIN_CLOSE()
      //一回転
      _CALL clown_spin
      //「つづき」ラストメッセージ
      _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_mrlock_06 )
      _LAST_KEYWAIT()
      _BALLOONWIN_CLOSE()

      //イベント終了フラグＯＮ
      _FLAG_SET(FE_ROCKCAPSULE_END)
    ELSE                            //持ってない
      //「また　おあいすることに　なるでしょう」ラストメッセージ
      _BALLOONWIN_TALKOBJ_MSG( msg_c03r0502_mrlock_01 )
      _LAST_KEYWAIT()
      _BALLOONWIN_CLOSE()
    ENDIF
  ENDIF
EVENT_END

//ピエロ回転
clown_spin:
  //自機の方向で分岐
  SWITCH $player_dir
  CASE DIR_UP THEN
    //ピエロ下向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_spin1 )
  CASE DIR_RIGHT THEN
    //ピエロ左向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_spin2 )
  CASE DIR_DOWN THEN
    //ピエロ上向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_spin3 )
  CASE DIR_LEFT THEN
    //ピエロ右向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_spin4 )
  ENDSWITCH
  _OBJ_ANIME_WAIT()
_RET

//ピエロモゾモゾ
clown_mozo:
  //自機の方向で分岐
  SWITCH $player_dir
  CASE DIR_UP THEN
    //ピエロ下向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_mozo1 )
  CASE DIR_RIGHT THEN
    //ピエロ左向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_mozo2 )
  CASE DIR_DOWN THEN
    //ピエロ上向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_mozo3 )
  CASE DIR_LEFT THEN
    //ピエロ右向き
    _OBJ_ANIME( C03R0502_MRLOCK_01 ,anm_mozo4 )
  ENDSWITCH
  _OBJ_ANIME_WAIT()
_RET

//ピエロ回転下向きスタート
_ANIME_LABEL	anm_spin1
	_ANIME_DATA	AC_DIR_L,1
  _ANIME_DATA	AC_DIR_U,1
  _ANIME_DATA	AC_DIR_R,1
  _ANIME_DATA	AC_DIR_D,1
	_ANIME_DATA	ACMD_END,0

//ピエロ回転左向きスタート
_ANIME_LABEL	anm_spin2
  _ANIME_DATA	AC_DIR_U,1
  _ANIME_DATA	AC_DIR_R,1
  _ANIME_DATA	AC_DIR_D,1
  _ANIME_DATA	AC_DIR_L,1
	_ANIME_DATA	ACMD_END,0

//ピエロ回転上向きスタート
_ANIME_LABEL	anm_spin3
  _ANIME_DATA	AC_DIR_R,1
  _ANIME_DATA	AC_DIR_D,1
  _ANIME_DATA	AC_DIR_L,1
  _ANIME_DATA	AC_DIR_U,1
	_ANIME_DATA	ACMD_END,0

//ピエロ回転右向きスタート
_ANIME_LABEL	anm_spin4
  _ANIME_DATA	AC_DIR_D,1
  _ANIME_DATA	AC_DIR_L,1
  _ANIME_DATA	AC_DIR_U,1
  _ANIME_DATA	AC_DIR_R,1
	_ANIME_DATA	ACMD_END,0

//ピエロモゾモゾ下向き
_ANIME_LABEL	anm_mozo1
  _ANIME_DATA	AC_STAY_WALK_D_8F,2
	_ANIME_DATA	ACMD_END,0

//ピエロモゾモゾ左向き
_ANIME_LABEL	anm_mozo2
  _ANIME_DATA	AC_STAY_WALK_L_8F,2
	_ANIME_DATA	ACMD_END,0

//ピエロモゾモゾ上向き
_ANIME_LABEL	anm_mozo3
  _ANIME_DATA	AC_STAY_WALK_U_8F,2
	_ANIME_DATA	ACMD_END,0

//ピエロモゾモゾ右向き
_ANIME_LABEL	anm_mozo4
  _ANIME_DATA	AC_STAY_WALK_R_8F,2
	_ANIME_DATA	ACMD_END,0
