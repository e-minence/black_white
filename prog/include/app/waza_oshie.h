//============================================================================================
/**
 * @file	waza_oshie.h
 * @brief	技教え/思い出し処理
 * @author	Hiroyuki Nakamura/Akito Mori(WBに引越し）
 * @date	09.10.13
 */
//============================================================================================
#ifndef __WAZA_OSHIE_H__
#define __WAZA_OSHIE_H__

#include "gamesystem/gamesystem.h"


//============================================================================================
//	定数定義
//============================================================================================
typedef struct {
	POKEMON_PARAM * pp;		// ポケモン
	MYSTATUS * myst;		// 自分データ
	CONFIG * cfg;			// コンフィグデータ
  GAMESYS_WORK *gsys;
	u16 * waza_tbl;			// 技テーブル
	u16	pos;
	u16	scr;
	u8	page;
	u8	mode;				// 処理モード
	u8	ret;				// 戻り値
	u8	del_pos;
}WAZAOSHIE_DATA;

enum {
	WAZAOSHIE_MODE_TEACH = 0,	// 教え
	WAZAOSHIE_MODE_REMIND,		// 思い出し
};

enum {
	WAZAOSHIE_RET_SET = 0,	// 覚えた
	WAZAOSHIE_RET_CANCEL,	// キャンセル
};

#define	WAZAOSHIE_TBL_MAX		( 0xffff )	// 技テーブルの最後に追加

#ifdef PM_DEBUG

///デバッグメニュー用データ型
typedef struct {
	WAZAOSHIE_DATA	dat;
	u32	seq;
}D_WO_WORK;

#endif	//PM_DEBUG

//============================================================================================
//	プロトタイプ宣言
//============================================================================================

//--------------------------------------------------------------------------------------------
/**
 * プロセス関数：初期化
 *
 * @param	proc	プロセスデータ
 * @param	seq		シーケンス
 *
 * @return	処理状況
 */
//--------------------------------------------------------------------------------------------
extern GFL_PROC_RESULT WazaOshieProc_Init( GFL_PROC * proc, void *pwk, void *mywk );

//--------------------------------------------------------------------------------------------
/**
 * プロセス関数：メイン
 *
 * @param	proc	プロセスデータ
 * @param	seq		シーケンス
 *
 * @return	処理状況
 */
//--------------------------------------------------------------------------------------------
extern GFL_PROC_RESULT WazaOshieProc_Main( GFL_PROC * proc, void *pwk, void *mywk );

//--------------------------------------------------------------------------------------------
/**
 * プロセス関数：終了
 *
 * @param	proc	プロセスデータ
 * @param	seq		シーケンス
 *
 * @return	処理状況
 */
//--------------------------------------------------------------------------------------------
extern GFL_PROC_RESULT WazaOshieProc_End( GFL_PROC * proc, void *pwk, void *mywk );


//--------------------------------------------------------------------------------------------
/**
 * 技教えデータ領域取得
 *
 * @param	heap	ヒープID
 *
 * @return	技教えデータ領域
 */
//--------------------------------------------------------------------------------------------
extern WAZAOSHIE_DATA * WazaOshie_DataAlloc( u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 技教えデータ領域解放
 *
 * @param	heap	ヒープID
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void WazaOshie_DataFree( WAZAOSHIE_DATA * dat );

//--------------------------------------------------------------------------------------------
/**
 * 思い出し可能な技を取得
 *
 * @param	pp		ポケモンデータ
 * @param	heap	ヒープID
 *
 * @return	取得した技データ
 *
 *	解放は各自で
 */
//--------------------------------------------------------------------------------------------
extern u16 * RemaindWazaGet( POKEMON_PARAM * pp, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 教えられる/思い出せる技があるかチェック
 *
 * @param	tbl		技テーブル
 *
 * @retval	"TRUE = あり"
 * @retval	"FALSE = なし"
 */
//--------------------------------------------------------------------------------------------
extern BOOL WazaOshie_WazaTableChack( u16 * tbl );


#endif	// __WAZA_OSHIE_H__
