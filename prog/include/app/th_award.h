//============================================================================
/**
 *  @file   th_award.h
 *  @brief  トライアルハウス検定結果
 *  @author Koji Kawada
 *  @data   2010.03.04
 *  @note   
 *
 *  モジュール名：TH_AWARD
 */
//============================================================================
#pragma once


// インクルード
#include <gflib.h>

#include "savedata/trialhouse_save.h"


// オーバーレイ
FS_EXTERN_OVERLAY(th_award);


//=============================================================================
/**
*  定数定義
*/
//=============================================================================


//=============================================================================
/**
 *  PROC
 */
//=============================================================================
extern const GFL_PROC_DATA    TH_AWARD_ProcData;


//=============================================================================
/**
*  構造体宣言
*/
//=============================================================================
//-------------------------------------
/// PROC パラメータ
//=====================================
typedef struct
{
  u8                   sex;           ///< [in] プレイヤーの性別  // PM_MALE or PM_FEMALE  // include/pm_version.h
  const THSV_WORK*     thsv;          ///< [in] トライアルハウスセーブデータ
  BOOL                 b_download;    ///< [in] ダウンロードデータを表示するときTRUE
  BOOL                 b_me;          ///< [in] MEを鳴らすときTRUE
}
TH_AWARD_PARAM;


//=============================================================================
/**
*  関数のプロトタイプ宣言
*/
//=============================================================================
//-------------------------------------
/// パラメータ生成
//=====================================
extern TH_AWARD_PARAM*  TH_AWARD_AllocParam(
                                HEAPID               heap_id,
                                u8                   sex,           // PM_MALE or PM_FEMALE  // include/pm_version.h
                                const THSV_WORK*     thsv,
                                BOOL                 b_download,
                                BOOL                 b_me );

//-------------------------------------
/// パラメータ解放
//=====================================
extern void  TH_AWARD_FreeParam(
                      TH_AWARD_PARAM*  param );

//-------------------------------------
/// パラメータを設定する
//=====================================
extern void  TH_AWARD_InitParam(
                  TH_AWARD_PARAM*      param,
                  u8                   sex,           // PM_MALE or PM_FEMALE  // include/pm_version.h
                  const THSV_WORK*     thsv,
                  BOOL                 b_download,
                  BOOL                 b_me );

