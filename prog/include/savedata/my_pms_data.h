//[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
/**
 *
 *	@file		my_pms_data.h
 *	@brief  自己紹介文や対戦前挨拶などの、PMS情報セーブデータ
 *	@author	Toru=Nagihashi
 *	@date		2010.01.08
 *
 */
//]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
#pragma once

#include "savedata/save_control.h"
#include "system/pms_data.h"
//=============================================================================
/**
 *					定数宣言
*/
//=============================================================================
//-------------------------------------
///	PMSの種類
//=====================================
typedef enum
{
  MYPMS_PMS_TYPE_INTRODUCTION,  //自己紹介(トレーナーカードでいれる)
  MYPMS_PMS_TYPE_BATTLE_READY,  //バトル勝負前挨拶（以下４つはスクリプトからいれる）
  MYPMS_PMS_TYPE_BATTLE_WON,    //バトル勝ち時セリフ
  MYPMS_PMS_TYPE_BATTLE_LOST,   //バトル負け時セリフ
  MYPMS_PMS_TYPE_BATTLE_TOP,    //バトル１番になったとき
  MYPMS_PMS_TYPE_MAX            //.c内で使用
} MYPMS_PMS_TYPE;

//=============================================================================
/**
 *					構造体宣言
*/
//=============================================================================
//-------------------------------------
///	PMS情報セーブデータ
//=====================================
typedef struct _MYPMS_DATA MYPMS_DATA;

//=============================================================================
/**
 *					外部公開
*/
//=============================================================================
//----------------------------------------------------------
//セーブデータシステムに依存する関数
//----------------------------------------------------------
extern int MYPMS_GetWorkSize( void );
extern void MYPMS_Init( MYPMS_DATA *p_wk );

//----------------------------------------------------------
//セーブデータ取得のための関数
//----------------------------------------------------------
extern const MYPMS_DATA * SaveData_GetMyPmsDataConst( const SAVE_CONTROL_WORK * cp_sv);
extern MYPMS_DATA * SaveData_GetMyPmsData( SAVE_CONTROL_WORK * p_sv);

//----------------------------------------------------------
//それぞれの取得関数
//----------------------------------------------------------
extern void MYPMS_GetPms( const MYPMS_DATA *cp_wk, MYPMS_PMS_TYPE type, PMS_DATA *p_pms );
extern void MYPMS_SetPms( MYPMS_DATA *p_wk, MYPMS_PMS_TYPE type, const PMS_DATA *cp_pms );
