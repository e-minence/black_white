/////////////////////////////////////////////////////////////////////////
/**
 *
 * @brief  育て屋ワーク
 * @file   sodateya_work.h
 * @author obata
 * @date   2009.09.24
 *
 */
/////////////////////////////////////////////////////////////////////////
#pragma once

//=======================================================================
/**
 * @brief 定数
 */
//=======================================================================
// 預けポケモンID
typedef enum
{
  SODATE_POKE_FIRST,
  SODATE_POKE_SECOND,
  SODATE_POKE_MAX
} SODATE_POKE_ID;


//=======================================================================
/**
 * @brief 育て屋ワークの不完全型宣言
 */
//=======================================================================
typedef struct _SODATEYA_WORK SODATEYA_WORK;


//-----------------------------------------------------------------------
/**
 * @brief	育て屋ワークのサイズ取得
 *
 * @return 育て屋ワークのサイズ
 */
//-----------------------------------------------------------------------
u32 SODATEYA_WORK_GetWorkSize(void);

//-----------------------------------------------------------------------
/**
 * @brief	育て屋ワークの初期化
 *
 * @param	sodateya 初期化するワーク
 */
//-----------------------------------------------------------------------
void SODATEYA_WORK_InitWork( void* work );

//-----------------------------------------------------------------------
/**
 * @brief ワークへのポインタを取得する
 *
 * @param scw セーブデータ保持ワークへのポインタ
 *
 * @return 育て屋ワークへのポインタ
 */
//-----------------------------------------------------------------------
SODATEYA_WORK* SODATEYA_WORK_GetSodateyaWork( SAVE_CONTROL_WORK* scw );

//-----------------------------------------------------------------------
/**
 * @brief タマゴの有無を取得する
 *
 * @param sodateya 取得対象ワーク
 * 
 * @return タマゴがある場合 TRUE
 */
//-----------------------------------------------------------------------
BOOL SODATEYA_WORK_HaveEgg( SODATEYA_WORK* sodateya );

//-----------------------------------------------------------------------
/**
 * @brief タマゴを削除する
 *
 * @param sodateya 操作対象ワーク
 */
//-----------------------------------------------------------------------
void SODATEYA_WORK_DeleteEgg( SODATEYA_WORK* sodateya );

//-----------------------------------------------------------------------
/**
 * @brief タマゴを受け取る
 *
 * @param sodateya タマゴを所持する育て屋さん
 * @param party    タマゴを追加する手持ちポケパーティー
 */
//-----------------------------------------------------------------------
void SODATEYA_WORK_AddEggToParty( SODATEYA_WORK* sodateya, POKEPARTY* party );

//-----------------------------------------------------------------------
/**
 * @brief 預けポケモンの数を取得する
 *
 * @param sodateya 取得対象ワーク
 * 
 * @return 育て屋が預かっているポケモンの数
 */
//-----------------------------------------------------------------------
u8 SODATEYA_WORK_GetPokemonNum( SODATEYA_WORK* sodateya );

//-----------------------------------------------------------------------
/**
 * @brief 預けポケモンのパーソナルパラメータを取得する
 *
 * @param sodateya 取得対象ワーク
 * @param poke_id  パラメータ取得対象ポケモンの番号(0 or 1)
 *
 * @return 指定ポケモンのパーソナルパラメータ
 */
//-----------------------------------------------------------------------
POKEMON_PASO_PARAM* SODATEYA_WORK_GetPokemonPasoParam( 
    SODATEYA_WORK* sodateya, SODATE_POKE_ID poke_id ); 
