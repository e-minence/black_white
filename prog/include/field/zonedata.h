//============================================================================================
/**
 * @file	zonedata.h
 * @brief	ゾーン毎データへのアクセス
 * @author	tamada GAME FREAK inc.
 * @date	2008.11.12
 */
//============================================================================================
#pragma once


//------------------------------------------------------------------
/**
 * @brief	ゾーン名データの最大長（デバッグ用）
 */
//------------------------------------------------------------------
#define	ZONEDATA_NAME_LENGTH	(16)


//============================================================================================
//============================================================================================
//------------------------------------------------------------------
/**
 * @brief	ゾーン名データの取得
 * @param	heapID		作業用ヒープの指定
 * @param	buffer		名前を取得するためのバッファ
 * @param	zoneid		取得するゾーンの名前
 */
//------------------------------------------------------------------
extern void ZONEDATA_GetZoneName(HEAPID heapID, char * buffer, u16 zoneid);


//------------------------------------------------------------------
//------------------------------------------------------------------
extern const char * ZONEDATA_GetAllZoneName(HEAPID heapID);

//------------------------------------------------------------------
/**
 * @brief	ゾーンの最大数の取得
 * @return	u16	最大数
 */
//------------------------------------------------------------------
extern u16 ZONEDATA_GetZoneIDMax(void);
//------------------------------------------------------------------
/**
 * @brief	マトリックス指定の取得
 * @param	zone_id	ゾーン指定ID
 * @return	u16	マトリックス指定値
 */
//------------------------------------------------------------------
extern u16 ZONEDATA_GetMatrixID(u16 zone_id);
//------------------------------------------------------------------
/**
 * @brief	エリア指定の取得
 * @param	zone_id	ゾーン指定ID
 * @return	u16	エリア指定値
 */
//------------------------------------------------------------------
extern u16 ZONEDATA_GetAreaID(u16 zone_id);
//------------------------------------------------------------------
/**
 * @brief	マップ構造指定の取得
 * @param	zone_id	ゾーン指定ID
 * @return	u16	マップ構造指定値
 */
//------------------------------------------------------------------
extern u16 ZONEDATA_GetMapRscID(u16 zone_id);

//------------------------------------------------------------------
/**
 * @brief	マップ開始位置の取得（デバッグ用）
 * @param	zone_id	ゾーン指定ID
 * @param	pos		開始位置を受け取るためのfx32型ポインタ
 */
//------------------------------------------------------------------
extern void ZONEDATA_DEBUG_GetStartPos(u16 zone_id, VecFx32 * pos);

//------------------------------------------------------------------
/**
 * @brief	カメラ指定IDの取得
 * @param	zone_id	ゾーン指定ID
 * @param	u8		カメラ指定IDの値
 */
//------------------------------------------------------------------
extern u8 ZONEDATA_GetCameraID(u16 zone_id);

//------------------------------------------------------------------
/**
 * @brief	特殊なサンプルOBJを使用するかどうかの設定取得
 * @param	zone_id	ゾーン指定ID
 * @param	BOOL	TRUEのとき、サンプルOBJを使用する
 */
//------------------------------------------------------------------
extern BOOL ZONEDATA_DEBUG_GetSampleObject(u16 zone_id);

