//============================================================================================
/**
 * @file	gamemsystem.h
 * @brief	ポケモンゲームシステム（ここが通常ゲームのトップレベル）
 * @author	tamada GAME FREAK Inc.
 * @date	08.10.21
 *
 */
//============================================================================================

#pragma once
#ifdef	__cplusplus
extern "C" {
#endif

#include "gamesystem/game_data.h"
#include "gamesystem/playerwork.h"
//============================================================================================
//============================================================================================
//------------------------------------------------------------------
/**
 * @brief
 */
//------------------------------------------------------------------
typedef struct _GAMESYS_WORK GAMESYS_WORK;

//------------------------------------------------------------------
/**
 * @brief
 */
//------------------------------------------------------------------
typedef struct _GMEVENT_CONTROL GMEVENT_CONTROL;


//============================================================================================
//============================================================================================
//------------------------------------------------------------------
/**
 */
//------------------------------------------------------------------
extern const GFL_PROC_DATA GameMainProcData;

//------------------------------------------------------------------
/**
 * @brief	ゲーム内プロセスの呼び出し（分岐）
 * @param	gsys		ゲーム制御ワークへのポインタ
 * @param	ov_id		オーバーレイ指定ID
 * @param	procdata	プロセスデータへのポインタ
 * @param	pwk			上位プロセスから渡すワーク
 */
//------------------------------------------------------------------
extern void GameSystem_SetNextProc(GAMESYS_WORK * gsys,
		FSOverlayID ov_id, const GFL_PROC_DATA *procdata, void * pwk);

//------------------------------------------------------------------
/**
 * @brief	ゲーム内プロセスの呼び出し（コール）
 * @param	gsys		ゲーム制御ワークへのポインタ
 * @param	ov_id		オーバーレイ指定ID
 * @param	procdata	プロセスデータへのポインタ
 * @param	pwk			上位プロセスから渡すワーク
 */
//------------------------------------------------------------------
extern void GameSystem_CallProc(GAMESYS_WORK * gsys,
		FSOverlayID ov_id, const GFL_PROC_DATA *procdata, void * pwk);

//------------------------------------------------------------------
/**
 * @brief	フィールドマッププロセスの呼び出し
 * @param	gsys		ゲーム制御ワークへのポインタ
 */
//------------------------------------------------------------------
extern void GameSystem_CallFieldProc(GAMESYS_WORK * gsys);

//------------------------------------------------------------------
/**
 * @brief	イベントの取得
 * @param	gsys			ゲーム制御ワークへのポインタ
 * @return	GMEVENT_CONTROL	イベントへのポインタ
 */
//------------------------------------------------------------------
extern GMEVENT_CONTROL * GAMESYSTEM_GetEvent(GAMESYS_WORK * gsys);

//------------------------------------------------------------------
/**
 * @brief	イベントのセット
 * @param	gsys	ゲーム制御ワークへのポインタ
 * @param	event	イベントへのポインタ
 */
//------------------------------------------------------------------
extern void GAMESYSTEM_SetEvent(GAMESYS_WORK * gsys, GMEVENT_CONTROL * event);

//------------------------------------------------------------------
/**
 * @brief	プロセス起動中かどうかを返す
 * @param	gsys	ゲーム制御ワークへのポインタ
 * @return	BOOL	TRUEのとき、プロセスが存在する
 */
//------------------------------------------------------------------
extern BOOL GAMESYSTEM_IsProcExists(const GAMESYS_WORK * gsys);

//------------------------------------------------------------------
/**
 * @brief	ゲームデータの取得
 * @param	gsys		ゲーム制御ワークへのポインタ
 * @return	GAMEDATA	ゲームデータへのポインタ
 */
//------------------------------------------------------------------
extern GAMEDATA * GAMESYSTEM_GetGameData(GAMESYS_WORK * gsys);

//------------------------------------------------------------------
/**
 * @brief	自分プレイヤーデータの取得
 * @param	gsys		ゲーム制御ワークへのポインタ
 * @return	PLAYER_WORK	自分プレイヤーデータへのポインタ
 *
 * 今は利便性のためGAMESYS_WORKから直接取得にしているが
 * 設計上はGAMESYS_WORK→GAMEDATA→PLAYER_WORKにするべきかも
 */
//------------------------------------------------------------------
extern PLAYER_WORK * GAMESYSTEM_GetMyPlayerWork(GAMESYS_WORK * gsys);

#ifdef	__cplusplus
} /* extern "C" */
#endif
