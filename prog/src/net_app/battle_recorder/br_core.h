//[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
/**
 *
 *	@file		br_core.h
 *	@brief	バトルレコーダー本体
 *	@author	Toru=Nagihashi
 *	@date		2009.11.09
 *
 */
//]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
#pragma once

#include "net_app/battle_recorder.h"
#include "br_net.h"
#include "br_inner.h"
#include "br_data.h"
//=============================================================================
/**
 *					定数
*/
//=============================================================================
//-------------------------------------
///	プロセスID
//=====================================
typedef enum 
{
	BR_PROCID_START,				//起動画面
	BR_PROCID_MENU,					//メニュー画面
	BR_PROCID_RECORD,				//録画記録画面
	BR_PROCID_BTLSUBWAY,		//バトルサブウェイ成績画面
	BR_PROCID_RNDMATCH,			//ランダムマッチ成績画面
	BR_PROCID_BV_RANK,			//バトルビデオ30件画面（最新、通信対戦、サブウェイ）
	BR_PROCID_BV_SEARCH,		//詳しく探す画面
	BR_PROCID_CODEIN,				//バトルビデオナンバー入力画面
	BR_PROCID_BV_SEND,			//バトルビデオ送信画面
	BR_PROCID_BV_DELETE,	  //バトルビデオ消去画面
  BR_PROCID_BV_SAVE,      //バトルビデオ保存画面
	BR_PROCID_MUSICAL_LOOK,	//ミュージカルショット	写真を見る画面
	BR_PROCID_MUSICAL_SEND,	//ミュージカルショット	写真を送る画面

	BR_PROCID_MAX
} BR_PROCID;

//-------------------------------------
///	バトルレコーダーコアの起動モード
//=====================================
typedef enum
{
  BR_CORE_MODE_INIT,    //初期
  BR_CORE_MODE_RETURN,  //バトルから復帰
} BR_CORE_MODE;

//-------------------------------------
///	バトルレコーダーコアの終了モード
//=====================================
typedef enum
{
  BR_CORE_RETURN_FINISH,  //終了
  BR_CORE_RETURN_BTLREC,  //バトルへ
} BR_CORE_RETURN;

//=============================================================================
/**
 *					構造体
*/
//=============================================================================
//-------------------------------------
///	バトルレコーダーコア用引数
//=====================================
typedef struct 
{
  BR_CORE_RETURN        ret;      //[out]終了モード
  BR_CORE_MODE          mode;     //[in ]起動モード
  BR_DATA               *p_data;  //[in ]常駐データ
	BATTLERECORDER_PARAM	*p_param; //[in ]本体の引数
} BR_CORE_PARAM;


//=============================================================================
/**
 *					プロセスデータ
*/
//=============================================================================
extern const GFL_PROC_DATA BR_CORE_ProcData;
