


typedef struct {
  int leftx;
  int lefty;
  int width;
  int height;
} _WINDOWPOS;


#define _X8(a)  (a)*8

#define _IRMAIN_BATTLE_ST_X (4)
#define _IRMAIN_BATTLE_ST_Y (6)
#define _IRMAIN_BATTLE_WIDTH (10)
#define _IRMAIN_BATTLE_HEIGHT (4)

#define _IRMAIN_TRADE_ST_X (0x14)
#define _IRMAIN_TRADE_ST_Y (6)
#define _IRMAIN_TRADE_WIDTH (10)
#define _IRMAIN_TRADE_HEIGHT (4)

#define _IRMAIN_CHECK_ST_X (0x0b)
#define _IRMAIN_CHECK_ST_Y (0x0e)
#define _IRMAIN_CHECK_WIDTH (10)
#define _IRMAIN_CHECK_HEIGHT (4)

#define _IRMAIN_FRIEND_ST_X (0x02)
#define _IRMAIN_FRIEND_ST_Y (0x14)
#define _IRMAIN_FRIEND_WIDTH (16)
#define _IRMAIN_FRIEND_HEIGHT (4)

#define _IRMAIN_EXIT_ST_X (24-4)
#define _IRMAIN_EXIT_ST_Y (32-10)
#define _IRMAIN_EXIT_WIDTH (10)
#define _IRMAIN_EXIT_HEIGHT (4)



static _WINDOWPOS wind_irmain[]={
  {    _IRMAIN_BATTLE_ST_X  ,    _IRMAIN_BATTLE_ST_Y, _IRMAIN_BATTLE_WIDTH,  _IRMAIN_BATTLE_HEIGHT},
  {    _IRMAIN_TRADE_ST_X  ,    _IRMAIN_TRADE_ST_Y, _IRMAIN_TRADE_WIDTH,  _IRMAIN_TRADE_HEIGHT},
  {    _IRMAIN_CHECK_ST_X  ,    _IRMAIN_CHECK_ST_Y, _IRMAIN_CHECK_WIDTH,  _IRMAIN_CHECK_HEIGHT},
  {    _IRMAIN_FRIEND_ST_X  ,    _IRMAIN_FRIEND_ST_Y, _IRMAIN_FRIEND_WIDTH,  _IRMAIN_FRIEND_HEIGHT},
};

static const GFL_UI_TP_HITTBL btn_irmain[] = {
  //上下左右
	{ _X8(_IRMAIN_BATTLE_ST_Y-1),_X8(_IRMAIN_BATTLE_ST_Y+_IRMAIN_BATTLE_HEIGHT+1),
	  _X8(_IRMAIN_BATTLE_ST_X-1),_X8(_IRMAIN_BATTLE_ST_X+_IRMAIN_BATTLE_WIDTH+1)},

	{ _X8(_IRMAIN_TRADE_ST_Y-1),_X8(_IRMAIN_TRADE_ST_Y+_IRMAIN_TRADE_HEIGHT+1),
	  _X8(_IRMAIN_TRADE_ST_X-1),_X8(_IRMAIN_TRADE_ST_X+_IRMAIN_TRADE_WIDTH+1)},

	{ _X8(_IRMAIN_CHECK_ST_Y-1),_X8(_IRMAIN_CHECK_ST_Y+_IRMAIN_CHECK_HEIGHT+1),
	  _X8(_IRMAIN_CHECK_ST_X-1),_X8(_IRMAIN_CHECK_ST_X+_IRMAIN_CHECK_WIDTH+1)},

	{ _X8(_IRMAIN_FRIEND_ST_Y-1),_X8(_IRMAIN_FRIEND_ST_Y+_IRMAIN_FRIEND_HEIGHT+1),
	  _X8(_IRMAIN_FRIEND_ST_X-1),_X8(_IRMAIN_FRIEND_ST_X+_IRMAIN_FRIEND_WIDTH+1)},

	{ _X8(_IRMAIN_EXIT_ST_Y-1),_X8(_IRMAIN_EXIT_ST_Y+_IRMAIN_EXIT_HEIGHT+1),
	  _X8(_IRMAIN_EXIT_ST_X-1),_X8(_IRMAIN_EXIT_ST_X+_IRMAIN_EXIT_WIDTH+1)},

  {GFL_UI_TP_HIT_END,0,0,0},		 //終了データ
};



#define _IRVS1_VS_ST_X (5)
#define _IRVS1_VS_ST_Y (8)
#define _IRVS1_VS_WIDTH (24)
#define _IRVS1_VS_HEIGHT (4)

#define _IRVS1_MULTI_ST_X (5)
#define _IRVS1_MULTI_ST_Y (0xe)
#define _IRVS1_MULTI_WIDTH (24)
#define _IRVS1_MULTI_HEIGHT (4)

static _WINDOWPOS wind_irvs1[]={
  {    _IRVS1_VS_ST_X  ,    _IRVS1_VS_ST_Y, _IRVS1_VS_WIDTH,  _IRVS1_VS_HEIGHT},
  {    _IRVS1_MULTI_ST_X  ,    _IRVS1_MULTI_ST_Y, _IRVS1_MULTI_WIDTH,  _IRVS1_MULTI_HEIGHT},
};



static const GFL_UI_TP_HITTBL btn_irvs1[] = {
  //上下左右
	{ _X8(_IRVS1_VS_ST_Y-1),_X8(_IRVS1_VS_ST_Y+_IRVS1_VS_HEIGHT+1),
	  _X8(_IRVS1_VS_ST_X-1),_X8(_IRVS1_VS_ST_X+_IRVS1_VS_WIDTH+1)},

	{ _X8(_IRVS1_MULTI_ST_Y-1),_X8(_IRVS1_MULTI_ST_Y+_IRVS1_MULTI_HEIGHT+1),
	  _X8(_IRVS1_MULTI_ST_X-1),_X8(_IRVS1_MULTI_ST_X+_IRVS1_MULTI_WIDTH+1)},

	{ _X8(_IRMAIN_EXIT_ST_Y-1),_X8(_IRMAIN_EXIT_ST_Y+_IRMAIN_EXIT_HEIGHT+1),
	  _X8(_IRMAIN_EXIT_ST_X-1),_X8(_IRMAIN_EXIT_ST_X+_IRMAIN_EXIT_WIDTH+1)},



  {GFL_UI_TP_HIT_END,0,0,0},		 //終了データ
};






#define _IRVS2_SINGLE_ST_X (5)
#define _IRVS2_SINGLE_ST_Y (2)
#define _IRVS2_SINGLE_WIDTH (24)
#define _IRVS2_SINGLE_HEIGHT (4)

#define _IRVS2_DOUBLE_ST_X (5)
#define _IRVS2_DOUBLE_ST_Y (7)
#define _IRVS2_DOUBLE_WIDTH (24)
#define _IRVS2_DOUBLE_HEIGHT (4)


#define _IRVS2_TRIPLE_ST_X (5)
#define _IRVS2_TRIPLE_ST_Y (0xc)
#define _IRVS2_TRIPLE_WIDTH (24)
#define _IRVS2_TRIPLE_HEIGHT (4)

#define _IRVS2_ROTATE_ST_X (5)
#define _IRVS2_ROTATE_ST_Y (0x11)
#define _IRVS2_ROTATE_WIDTH (24)
#define _IRVS2_ROTATE_HEIGHT (4)


static _WINDOWPOS wind_irvs2[]={
  {    _IRVS2_SINGLE_ST_X  ,    _IRVS2_SINGLE_ST_Y, _IRVS2_SINGLE_WIDTH,  _IRVS2_SINGLE_HEIGHT},
  {    _IRVS2_DOUBLE_ST_X  ,    _IRVS2_DOUBLE_ST_Y, _IRVS2_DOUBLE_WIDTH,  _IRVS2_DOUBLE_HEIGHT},
  {    _IRVS2_TRIPLE_ST_X  ,    _IRVS2_TRIPLE_ST_Y, _IRVS2_TRIPLE_WIDTH,  _IRVS2_TRIPLE_HEIGHT},
  {    _IRVS2_ROTATE_ST_X  ,    _IRVS2_ROTATE_ST_Y, _IRVS2_ROTATE_WIDTH,  _IRVS2_ROTATE_HEIGHT},
};



static const GFL_UI_TP_HITTBL btn_irvs2[] = {
  //上下左右
	{ _X8(_IRVS2_SINGLE_ST_Y-1),_X8(_IRVS2_SINGLE_ST_Y+_IRVS2_SINGLE_HEIGHT),
	  _X8(_IRVS2_SINGLE_ST_X-1),_X8(_IRVS2_SINGLE_ST_X+_IRVS2_SINGLE_WIDTH+1)},

	{ _X8(_IRVS2_DOUBLE_ST_Y-1),_X8(_IRVS2_DOUBLE_ST_Y+_IRVS2_DOUBLE_HEIGHT),
	  _X8(_IRVS2_DOUBLE_ST_X-1),_X8(_IRVS2_DOUBLE_ST_X+_IRVS2_DOUBLE_WIDTH+1)},

	{ _X8(_IRVS2_TRIPLE_ST_Y-1),_X8(_IRVS2_TRIPLE_ST_Y+_IRVS2_TRIPLE_HEIGHT),
	  _X8(_IRVS2_TRIPLE_ST_X-1),_X8(_IRVS2_TRIPLE_ST_X+_IRVS2_TRIPLE_WIDTH+1)},

	{ _X8(_IRVS2_ROTATE_ST_Y-1),_X8(_IRVS2_ROTATE_ST_Y+_IRVS2_ROTATE_HEIGHT),
	  _X8(_IRVS2_ROTATE_ST_X-1),_X8(_IRVS2_ROTATE_ST_X+_IRVS2_ROTATE_WIDTH+1)},

	{ _X8(_IRMAIN_EXIT_ST_Y-1),_X8(_IRMAIN_EXIT_ST_Y+_IRMAIN_EXIT_HEIGHT),
	  _X8(_IRMAIN_EXIT_ST_X-1),_X8(_IRMAIN_EXIT_ST_X+_IRMAIN_EXIT_WIDTH+1)},

  {GFL_UI_TP_HIT_END,0,0,0},		 //終了データ
};




//ボタンのパレット場所
static u8 Btn_PalettePos[] = { 1, 2, 3,4 };  //

static u8 Btn_PaletteSelectEntry[] ={ 1,6};
static u8 Btn_PaletteSelectBattle[] ={ 1,6,7,8};

//ボタンのパレット変化テーブル
static u16 Btn_PaletteTable[] =
{ 0, 5,15,15,15,15,15,5,
  5, 0, 0, 0, 0,15,15,15};


