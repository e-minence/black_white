//==============================================================================
/**
 * @file    union_local.h
 * @brief   ユニオンルーム関連のシステム部分を扱うソースのみで使用される定義類
 * @author  matsuda
 * @date    2009.07.04(土)
 */
//==============================================================================
#pragma once

#include "net_app/union/union_main.h"
#include "union_types.h"
#include "field/field_msgbg.h"
#include "net_app/union/comm_player.h"
#include "net_app/union/colosseum_types.h"


//==============================================================================
//  定数定義
//==============================================================================
///一度に受信できる最大ビーコン数
#define UNION_RECEIVE_BEACON_MAX      (10)

///キャラクタ管理数(一度に出せる最大キャラクタ数)
#define UNION_CHARACTER_MAX           (UNION_RECEIVE_BEACON_MAX * UNION_CONNECT_PLAYER_NUM)

///巨大データ受信バッファサイズ
#define UNION_HUGE_RECEIVE_BUF_SIZE   (0x800)

///リスタートモード
typedef enum{
  UNION_RESTART_SHUTDOWN_RESTARTS,    ///<切断→再開
  UNION_RESTART_SHUTDOWN,             ///<切断のみ
  UNION_RESTART_RESTARTS,             ///<再開のみ
}UNION_RESTART;


//==============================================================================
//  構造体定義
//==============================================================================
typedef struct _UNION_SYSTEM{
  UNION_PARENT_WORK *uniparent;
  u8 huge_receive_buf[UNION_CONNECT_PLAYER_NUM][UNION_HUGE_RECEIVE_BUF_SIZE];
  
  GFL_MSGDATA *msgdata;
  FLDMSGWIN_STREAM *fld_msgwin_stream;
  FLDMENUFUNC *fldmenu_func;
  FLDMENUFUNC *fldmenu_yesno_func;
  
  UNION_MY_SITUATION my_situation;    ///<自分の状況
  UNION_BEACON my_beacon;             ///<自分の送信ビーコン
  UNION_BEACON_PC receive_beacon[UNION_RECEIVE_BEACON_MAX];  ///<受信ビーコン
  UNION_CHARACTER character[UNION_CHARACTER_MAX];   ///<キャラクタ管理バッファ
  
  UNION_SUB_PROC subproc;             ///<サブPROC呼び出し制御
  void *parent_work;                  ///<サブPROC用に使用する一時的なワーク管理用
  
  COLOSSEUM_SYSTEM *colosseum_sys;    ///<コロシアムシステムワーク
  
  u8 comm_status;
  u8 restart_seq;                     ///<「切断→再開」処理シーケンスNo
  u8 restart_mode;                    ///< UNION_RESTART_???
  u8 player_pause;                    ///<自機のポーズ状況
}UNION_SYSTEM;


