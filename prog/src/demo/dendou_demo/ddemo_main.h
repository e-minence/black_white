//============================================================================================
/**
 * @file		ddemo_main.h
 * @brief		殿堂入りデモ画面
 * @author	Hiroyuki Nakamura
 * @date		10.04.06
 *
 *	モジュール名：DDEMOMAIN
 */
//============================================================================================
#pragma	once

#include "system/main.h"
#include "system/bmp_oam.h"
#include "system/mcss.h"
#include "print/printsys.h"
#include "print/wordset.h"
#include "sound/sound_manager.h"
#include "demo/dendou_demo.h"

#include "ddemo_obj_def.h"


//============================================================================================
//	定数定義
//============================================================================================

// 後方確保用ヒープＩＤ
#define	HEAPID_DENDOU_DEMO_L		( GFL_HEAP_LOWID(HEAPID_DENDOU_DEMO) )

// ＯＡＭフォントワーク
typedef struct {
	BMPOAM_ACT_PTR oam;
	GFL_BMP_DATA * bmp;
}DDEMO_FONTOAM;

typedef struct {
	DENDOUDEMO_PARAM * dat;

	GFL_TCB * vtask;		// TCB ( VBLANK )

	u32	scene;

	SOUNDMAN_PRESET_HANDLE * sndHandle;

	// ３Ｄ関連
	GFL_G3D_UTIL * g3d_util;
	GFL_G3D_SCENE * g3d_scene;
	// MCSS
	MCSS_SYS_WORK * mcss;
	MCSS_WORK * mcssWork;
	GFL_G3D_CAMERA * mcssCamera;
	BOOL	mcssAnmEndFlg;
	// パーティクル
	GFL_PTC_PTR	ptc;											// パーティクル
	GFL_PTC_PTR	ptcName;									// パーティクル
	u8	ptcWork[PARTICLE_LIB_HEAP_SIZE];	// パーティクルで使用するワーク
	u8	ptcNameWork[PARTICLE_LIB_HEAP_SIZE];	// パーティクルで使用するワーク

	GFL_FONT * font;						// 通常フォント
	GFL_FONT * nfnt;						// 数字フォント
	GFL_MSGDATA * mman;					// メッセージデータマネージャ
	WORDSET * wset;							// 単語セット
	STRBUF * exp;								// メッセージ展開領域

	// OBJ
	GFL_CLUNIT * clunit;
	GFL_CLWK * clwk[DDEMOOBJ_ID_MAX];
	u32	chrRes[DDEMOOBJ_CHRRES_MAX];
	u32	palRes[DDEMOOBJ_PALRES_MAX];
	u32	celRes[DDEMOOBJ_CELRES_MAX];
	GFL_CLSYS_REND * clrend;

	// ＯＡＭフォント
	BMPOAM_SYS_PTR	fntoam;
	DDEMO_FONTOAM	fobj[DDEMOOBJ_FOAM_MAX];

	POKEMON_PARAM * pp[6];
	u16	monsno;
	u16	type;
	u8	form;

	u8	pokePos;
	u8	pokeMax;

	u8	rndCnt;
	s16	rndDx;
	s16	rndDy;
	s16	rndMx[8];
	s16	rndMy[8];

	u32	voicePlayer;

	int	wait;

	int	mainSeq;
	int	subSeq;
	int	nextSeq;

	BOOL	endFlag;

}DDEMOMAIN_WORK;

typedef int (*pDDEMOMAIN_FUNC)(DDEMOMAIN_WORK*);


//============================================================================================
//	プロトタイプ宣言
//============================================================================================

//--------------------------------------------------------------------------------------------
/**
 * @brief		VBLANK関数設定（シーン１）
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitScene1VBlank( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		VBLANK関数設定（シーン２）
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitScene2VBlank( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		VBLANK関数削除
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitVBlank( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		VRAM初期化
 *
 * @param		scene		シーン
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitVram( u32 scene );

//--------------------------------------------------------------------------------------------
/**
 * @brief		VRAM設定取得
 *
 * @param		scene		シーン
 *
 * @return	VRAM設定
 */
//--------------------------------------------------------------------------------------------
extern const GFL_DISP_VRAM * DDEMOMAIN_GetVramBankData( u32 scene );

//--------------------------------------------------------------------------------------------
/**
 * @brief		BG初期化
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitBg(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		BG削除
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitBg(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		BGモード初期化
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitBgMode(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		BGフレーム設定（シーン２）
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitScene2BgFrame(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		BGフレーム削除（シーン２）
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitScene2BgFrame(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		BG読み込み（シーン２）
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_LoadScene2BgGraphic(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		アルファブレンド設定
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_SetBlendAlpha(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief	  メッセージ関連初期化
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitMsg( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief	  メッセージ関連解放
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitMsg( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief	  サウンド初期設定
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitSound( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief	  サウンド削除
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitSound( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief	  ポケモン最大数設定
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_GetPokeMax( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief	  ポケモンデータ取得
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_GetPokeData( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief	  鳴き声読み込み
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_LoadPokeVoice( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		３Ｄ初期化
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_Init3D( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		３Ｄ削除
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_Exit3D( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		３Ｄメイン処理（通常）
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_Main3D( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		３Ｄメイン処理（２画面３Ｄ用）
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_MainDouble3D( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		２画面３Ｄ初期化
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitDouble3D(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		２画面３Ｄ削除
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitDouble3D(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		パーティクル初期化
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitParticle(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		パーティクル削除
 *
 * @param		none
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitParticle(void);

//--------------------------------------------------------------------------------------------
/**
 * @brief		タイプ別パーティクル作成
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_CreateTypeParticle( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		タイプ別パーティクル削除
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_DeleteTypeParticle( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		タイプ別パーティクル追加
 *
 * @param		wk		殿堂入りデモ画面ワーク
 * @param		id		パーティクルＩＤ
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_SetTypeParticle( DDEMOMAIN_WORK * wk, u32 id );

//--------------------------------------------------------------------------------------------
/**
 * @brief		名前エフェクトパーティクル作成
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_CreateNameParticle( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		名前エフェクトパーティクル削除
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_DeleteNameParticle( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		名前エフェクトパーティクル追加
 *
 * @param		wk		殿堂入りデモ画面ワーク
 * @param		id		パーティクルＩＤ
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_SetNameParticle( DDEMOMAIN_WORK * wk, u32 id );

//--------------------------------------------------------------------------------------------
/**
 * @brief		MCSS初期化
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_InitMcss( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		MCSS解放
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_ExitMcss( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		MCSS追加
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_AddMcss( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		MCSS削除
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_DelMcss( DDEMOMAIN_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		MCSS移動
 *
 * @param		wk		殿堂入りデモ画面ワーク
 * @param		mv		移動値
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_MoveMcss( DDEMOMAIN_WORK * wk, s16 mv );

//--------------------------------------------------------------------------------------------
/**
 * @brief		MCSSコールバック関数セット
 *
 * @param		wk		殿堂入りデモ画面ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void DDEMOMAIN_SetMcssCallBack( DDEMOMAIN_WORK * wk );
