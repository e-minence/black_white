/////////////////////////////////////////////////////////////////////////////////////////
/**
 * @brief  電光掲示板 臨時ニュース
 * @file   elboard_spnews_data.h
 * @author obata
 * @date   2009.12.14
 */
/////////////////////////////////////////////////////////////////////////////////////////
#pragma once


//=======================================================================================
// ■定数
//=======================================================================================
// ニュース タイプ
#define SPNEWS_TYPE_DIRECT (0)  // メッセージをそのまま表示
#define SPNEWS_TYPE_CHAMP  (1)  // チャンピオン
#define SPNEWS_TYPE_GYM    (2)  // ジム情報

// フラグ操作タイプ
#define FLAG_CONTROL_NONE  (0)  // 変更なし
#define FLAG_CONTROL_RESET (1)  // フラグをリセットする


//=======================================================================================
// ■臨時ニュース
//=======================================================================================
typedef struct
{
  u32 version;      // バージョン ( VERSION_xxxx, 0 ==> 全バージョン )
  u32 flag;         // フラグ
  u32 flagControl;  // フラグ操作 ( FLAG_CONTROL_xxxx )
  u32 msgID;        // 表示するニュースのメッセージID
  u32 newsType;     // タイプ ( SPNEWS_TYPE_xxxx )
  u32 zoneID_1;     // 表示するゾーン ( ZONE_ID_MAX ==> 全ゾーン )
  u32 zoneID_2;     // 表示するゾーン ( ZONE_ID_MAX ==> 全ゾーン )
  u32 zoneID_3;     // 表示するゾーン ( ZONE_ID_MAX ==> 全ゾーン )
  u32 zoneID_4;     // 表示するゾーン ( ZONE_ID_MAX ==> 全ゾーン )

} ELBOARD_SPNEWS_DATA;


//=======================================================================================
// ■データ取得関数
//=======================================================================================

//--------------------------------------------------------------------------------------
/**
 * @brief 臨時ニュースデータを読み込む
 * 
 * @param buf    読み込んだデータの格納先
 * @param arc_id 読み込むデータのアーカイブID
 * @param dat_id 読み込むデータのアーカイブ内インデックス
 *
 * @return 読み込みが正しく行われた場合 TRUE
 */
//--------------------------------------------------------------------------------------
extern BOOL ELBOARD_SPNEWS_DATA_Load( ELBOARD_SPNEWS_DATA* buf, ARCID arc_id, ARCDATID dat_id );

//--------------------------------------------------------------------------------------
/**
 * @brief 指定したゾーンに一致するかどうかを判定する
 *
 * @param news    臨時ニュース
 * @param zone_id 判定するゾーンID
 *
 * @return 指定ゾーンに一致する場合 TRUE, そうでなければ FALSE
 */
//--------------------------------------------------------------------------------------
extern BOOL ELBOARD_SPNEWS_DATA_CheckZoneHit( const ELBOARD_SPNEWS_DATA* news, u32 zone_id );

//--------------------------------------------------------------------------------------
/**
 * @brief バージョンが一致するかどうかを判定する
 *
 * @param news 臨時ニュース
 *
 * @return バージョンが一致する場合 TRUE, そうでなければ FALSE
 */
//--------------------------------------------------------------------------------------
extern BOOL ELBOARD_SPNEWS_DATA_CheckVersionHit( const ELBOARD_SPNEWS_DATA* news );
