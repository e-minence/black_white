/*
  @file debug_numinput.cdat
  @brief  数値入力デバッグメニュー　パラメータリスト定義ファイル
  @author Miyuki Iwasawa
  @date   09.11.26
*/

#ifdef PM_DEBUG

//////////////////////////////////////////////////////
///エフェクトエンカウント関連
static const DEBUG_NUMINPUT_PARAM enceff_interval_param = {
 1, 0xFFFF, EFFENC_DEB_NumInputParamGet, EFFENC_DEB_NumInputParamSet,
};
static const DEBUG_NUMINPUT_PARAM enceff_prob_param = {
 0, 100, EFFENC_DEB_NumInputParamGet, EFFENC_DEB_NumInputParamSet,
};
static const DEBUG_NUMINPUT_PARAM enceff_prob_fix_param = {
 0, 1, EFFENC_DEB_NumInputParamGet, EFFENC_DEB_NumInputParamSet,
};
static const DEBUG_NUMINPUT_PARAM enceff_ofs_param = {
 0, 10, EFFENC_DEB_NumInputParamGet, EFFENC_DEB_NumInputParamSet,
};
static const DEBUG_NUMINPUT_PARAM enceff_pos_param = {
 0, 0, EFFENC_DEB_NumInputParamGet, EFFENC_DEB_NumInputParamSet,
};
static const DEBUG_NUMINPUT_LIST DNI_EffectEncountList[] = {
  //gmm_id, param, dni_param
 { dni_effenc_interval, EFFENC_DNI_INTERVAL, &enceff_interval_param },
 { dni_effenc_prob,     EFFENC_DNI_PROB, &enceff_prob_param },
 { dni_effenc_prob_fix, EFFENC_DNI_PROB_FIX, &enceff_prob_fix_param },
 { dni_effenc_pos_ofsx, EFFENC_DNI_OFSX, &enceff_ofs_param }, 
 { dni_effenc_pos_ofsz, EFFENC_DNI_OFSZ, &enceff_ofs_param },
 { dni_effenc_pos_check, EFFENC_DNI_POSITION, &enceff_pos_param },
 { dni_effenc_add_delete, EFFENC_DNI_ADD_DELETE, &enceff_prob_fix_param },
};

//////////////////////////////////////////////////////
///国コード関連
static const DEBUG_NUMINPUT_PARAM country_param = {
 0, 233, DebugGetUnCouontry, DebugSetUnCouontry,
};

static const DEBUG_NUMINPUT_LIST DNI_UnitedNationsList[] = {
  //gmm_id, param, dni_param
 { dni_country_code, 0, &country_param },
};

//////////////////////////////////////////////////////
///所持金他
static const DEBUG_NUMINPUT_PARAM gold_param = {
 0, MY_GOLD_MAX, DebugGetGold, DebugSetGold,
};
static const DEBUG_NUMINPUT_PARAM quiz_param = {
 0, 31, DebugGetQuiz, DebugSetQuiz,
};
static const DEBUG_NUMINPUT_PARAM bp_param = {
 0, 9999, DebugGetBP, DebugSetBP,
};
static const DEBUG_NUMINPUT_PARAM tv_param = {
 0, 159, DebugGetTV, DebugSetTV,
};
static const DEBUG_NUMINPUT_LIST DNI_FortuneList[] = {
  //gmm_id, param, dni_param
  { dni_gold, 0, &gold_param },
  { dni_quiz, 0, &quiz_param },
  { dni_bp, 0, &bp_param },
  { dni_tv, 0, &tv_param },
};

//////////////////////////////////////////////////////
//フェード関連
static const DEBUG_NUMINPUT_PARAM debug_fade_param = {
 1, 15, DebugGetFadeSpeed, DebugSetFadeSpeed,
};
static const DEBUG_NUMINPUT_LIST DNI_DebugFadeList[] = {
  { dni_top_fadespeed, 0, &debug_fade_param },
};

//////////////////////////////////////////////////////
///通信関連
static const DEBUG_NUMINPUT_PARAM net_whpipe_alonetest_param = {
 0, 255, DebugGetNetWhpipeAloneTestCode, DebugSetNetWhpipeAloneTestCode,
};

static const DEBUG_NUMINPUT_LIST DNI_DebugNetConfigList[] = {
  //gmm_id, param, dni_param
 { dni_dnc_alonetest, 0, &net_whpipe_alonetest_param },
};

//////////////////////////////////////////////////////
///ブラックシティ・ホワイトフォレスト・パレスレベル
static const DEBUG_NUMINPUT_PARAM white_level_param = {
 0, OCCUPY_LEVEL_MAX, DebugGetWhiteLevel, DebugSetWhiteLevel,
};
static const DEBUG_NUMINPUT_PARAM black_level_param = {
 0, OCCUPY_LEVEL_MAX, DebugGetBlackLevel, DebugSetBlackLevel,
};
static const DEBUG_NUMINPUT_LIST DNI_PalaceLevelList[] = {
  //gmm_id, param, dni_param
  { dni_palace_level_white, 0, &white_level_param },
  { dni_palace_level_black, 0, &black_level_param },

};


//////////////////////////////////////////////////////
///ミュージカル関係
static const DEBUG_NUMINPUT_PARAM musEntryNum = {
 0, MUS_SAVE_ENTRY_NUM_MAX, DebugGetMusEntryNum, DebugSetMusEntryNum,
};
static const DEBUG_NUMINPUT_PARAM musTopNum = {
 0, MUS_SAVE_ENTRY_NUM_MAX, DebugGetMusTopNum, DebugSetMusTopNum,
};
static const DEBUG_NUMINPUT_PARAM musConDition = {
 0, 255, DebugGetMusBefCon, DebugSetMusBefCon,
};
static const DEBUG_NUMINPUT_PARAM musBefPoint = {
 0, MUS_SAVE_ENTRY_NUM_MAX, DebugGetMusBefPoint, DebugSetMusBefPoint,
};
static const DEBUG_NUMINPUT_PARAM musSumPoint = {
 0, MUS_SAVE_ENTRY_NUM_MAX, DebugGetMusSumPoint, DebugSetMusSumPoint,
};
static const DEBUG_NUMINPUT_LIST DNI_MusicalList[] = {
  //gmm_id, param, dni_param
  { dni_mus_02, 0, &musEntryNum },
  { dni_mus_03, 0, &musTopNum },
  { dni_mus_04, 0, &musConDition },
  { dni_mus_05, 1, &musConDition },
  { dni_mus_06, 2, &musConDition },
  { dni_mus_07, 3, &musConDition },
  { dni_mus_08, 0, &musBefPoint },
  { dni_mus_09, 0, &musSumPoint },
};

//////////////////////////////////////////////////////
///サウンド関連
static const DEBUG_NUMINPUT_PARAM DNP_SoundLoadBlockSize = {
 0, 0xffff, DebugGetSoundLoadBlockSize, DebugSetSoundLoadBlockSize,
};
static const DEBUG_NUMINPUT_LIST DNI_SoundList[] = {
  //gmm_id, param, dni_param
  { dni_sound_01, 0, &DNP_SoundLoadBlockSize },
};

//////////////////////////////////////////////////////
///自機関連
static const DEBUG_NUMINPUT_PARAM DNP_TrainerID_high = {
 0x00000000, 0x0000ffff, DebugGetMyTrainerID_high, DebugSetMyTrainerID_high,
};
static const DEBUG_NUMINPUT_PARAM DNP_TrainerID_low = {
 0x00000000, 0x0000ffff, DebugGetMyTrainerID_low, DebugSetMyTrainerID_low,
};
static const DEBUG_NUMINPUT_PARAM DNP_TrainerID_full = {
 0x00000000, 0xffffffff, DebugGetMyTrainerID_full, DebugSetMyTrainerID_full,
};
static const DEBUG_NUMINPUT_PARAM DNP_ProfileID = {
 0x00000000, 0xffffffff, DebugGetMyProfileID, DebugSetMyProfileID,
};
static const DEBUG_NUMINPUT_LIST DNI_PlayerList[] = {
  //gmm_id, param, dni_param
  { dni_player_01, 0, &DNP_TrainerID_high },
  { dni_player_02, 0, &DNP_TrainerID_low },
  { dni_player_03, 0, &DNP_TrainerID_full },
  { dni_player_04, 0, &DNP_ProfileID },
};

//////////////////////////////////////////////////////
///プレイ時間関連
static const DEBUG_NUMINPUT_PARAM DNP_PlayTimeHour = {
 0, PTIME_HOUR_MAX, DebugGetPlayTimeHour, DebugSetPlayTimeHour,
};
static const DEBUG_NUMINPUT_PARAM DNP_PlayTimeMinute = {
 0, PTIME_MINUTE_MAX, DebugGetPlayTimeMinute, DebugSetPlayTimeMinute,
};
static const DEBUG_NUMINPUT_PARAM DNP_PlayTimeSecond = {
 0, PTIME_SECOND_MAX, DebugGetPlayTimeSecond, DebugSetPlayTimeSecond,
};
static const DEBUG_NUMINPUT_LIST DNI_PlayTimeList[] = {
  //gmm_id, param, dni_param
  { dni_playtime_01, 0, &DNP_PlayTimeHour },
  { dni_playtime_02, 0, &DNP_PlayTimeMinute },
  { dni_playtime_03, 0, &DNP_PlayTimeSecond },
};

//////////////////////////////////////////////////////
///地名表示関連
static const DEBUG_NUMINPUT_PARAM DNP_PlaceNameEnable = {
 0, 1, DebugGetPlaceNameEnable, DebugSetPlaceNameEnable,
};
static const DEBUG_NUMINPUT_LIST DNI_PlaceNameList[] = {
  //gmm_id, param, dni_param
  { dni_place_name_01, 0, &DNP_PlaceNameEnable },
};

#endif  //PM_DEBUG
