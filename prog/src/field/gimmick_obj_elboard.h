#pragma once
////////////////////////////////////////////////////////////////////////////////////
/**
 *
 * @brief 電光掲示板
 * @file  gimmick_obj_elboard.h
 * @author obata
 * @date   2009.10.21
 *
 */
////////////////////////////////////////////////////////////////////////////////////
#include "fieldmap.h"
#include "print/wordset.h"


//==================================================================================
// ■定数
//==================================================================================
#define MAX_NEWS_NUM (6)


//==================================================================================
// ■掲示板パラメータ
//==================================================================================
typedef struct
{
  HEAPID        heapID;  // 使用するヒープID
  u8        maxNewsNum;  // 表示可能なニュースの最大数
  u8          dispSize;  // 一画面に表示可能な文字数
  u8      newsInterval;  // ニュース間の間隔(文字数)
  GFL_G3D_OBJ*  g3dObj;  // 掲示板の3Dオブジェクト
} ELBOARD_PARAM;


//==================================================================================
// ■ニュースパラメータ
//==================================================================================
typedef struct
{
  u16     animeIndex;  // ニュースのスクロールに使用するアニメ番号
  char*      texName;  // ニュースを描画するテクスチャ名
  char*      pltName;  // ニュースを描画するテクスチャのパレット名
  ARCID     msgArcID;  // ニュースの引用元アーカイブ
  ARCDATID  msgDatID;  // ニュースの引用元アーカイブ内インデックス
  u32       msgStrID;  // ニュースのメッセージID
  WORDSET*   wordset;  // 展開するワードセット(不要ならNULL)
} NEWS_PARAM;


//==================================================================================
// ■不完全型の宣言
//==================================================================================
typedef struct _GOBJ_ELBOARD GOBJ_ELBOARD;


//==================================================================================
// ■初期化
//==================================================================================

//----------------------------------------------------------------------------------
/**
 * @brief 電光掲示板を作成する
 *
 * @param param 掲示板パラメータ
 *
 * @return 作成した電光掲示板
 */
//----------------------------------------------------------------------------------
extern GOBJ_ELBOARD* GOBJ_ELBOARD_Create( ELBOARD_PARAM* param );

//----------------------------------------------------------------------------------
/**
 * @brief 表示するニュースを追加する
 *
 * @param elboard    追加先の掲示板
 * @param news_param 追加するニュース
 */
//----------------------------------------------------------------------------------
extern void GOBJ_ELBOARD_AddNews( GOBJ_ELBOARD* elboard, const NEWS_PARAM* news_param );


//==================================================================================
// ■破棄
//==================================================================================
//----------------------------------------------------------------------------------
/**
 * @brief 電光掲示板を破棄する
 *
 * @param elboard 破棄する掲示板
 */
//----------------------------------------------------------------------------------
extern void GOBJ_ELBOARD_Delete( GOBJ_ELBOARD* elboard );


//==================================================================================
// ■動作
//==================================================================================

//----------------------------------------------------------------------------------
/**
 * @brief 電光掲示板メイン動作
 *
 * @param elboard 動かす掲示板
 * @param frame   動作フレーム数
 */
//----------------------------------------------------------------------------------
extern void GOBJ_ELBOARD_Main( GOBJ_ELBOARD* elboard, fx32 frame );


//==================================================================================
// ■取得
//==================================================================================

//----------------------------------------------------------------------------------
/**
 * @brief 現在の動作フレーム数を取得する
 *
 * @param elboard 取得対象の掲示板
 *
 * @return 指定した掲示板の現在の動作フレーム数
 */
//----------------------------------------------------------------------------------
extern fx32 GOBJ_ELBOARD_GetFrame( const GOBJ_ELBOARD* elboard );

//----------------------------------------------------------------------------------
/**
 * @brief 電光掲示板が使用するヒープIDを取得する
 *
 * @param elboard 取得対象の掲示板
 *
 * @return 掲示板が使用するヒープID
 */
//----------------------------------------------------------------------------------
extern HEAPID GOBJ_ELBOARD_GetHeapID( const GOBJ_ELBOARD* elboard );

//----------------------------------------------------------------------------------
/**
 * @brief 表示するニュースの数を取得する
 *
 * @param elboard 取得対象の掲示板
 *
 * @return 指定した掲示板が表示するニュースの数
 */
//----------------------------------------------------------------------------------
extern u8 GOBJ_ELBOARD_GetNewsNum( const GOBJ_ELBOARD* elboard );


//==================================================================================
// ■設定
//==================================================================================

//----------------------------------------------------------------------------------
/**
 * @brief 動作フレーム数を設定する
 *
 * @param elboard 設定対象の掲示板
 * @param frame   設定するフレーム数
 */
//----------------------------------------------------------------------------------
extern void GOBJ_ELBOARD_SetFrame( GOBJ_ELBOARD* elboard, fx32 frame );
