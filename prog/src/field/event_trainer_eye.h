//======================================================================
/**
 * @file	event_trainer_eye.h
 * @brief  トレーナー視線イベント
 * @author  kagaya
 * @date  05.10.03
 */
//======================================================================
#pragma once
#include <gflib.h>

#include "system/gfl_use.h"
#include "gamesystem/gamesystem.h"
#include "gamesystem/game_event.h"

#include "field/fieldmap_proc.h"

#include "trainer_eye_data.h"

//======================================================================
//	define
//======================================================================
#define EYE_CHECK_NOHIT (-1) ///<視線範囲チェック ヒット無し

//======================================================================
//	struct
//======================================================================

//======================================================================
//	extern
//======================================================================
//--------------------------------------------------------------
/**
 * 視線チェック＆トレーナーイベント生成
 */
//--------------------------------------------------------------
extern GMEVENT * EVENT_CheckTrainerEye( FIELDMAP_WORK *fieldMap, BOOL vs2 );

//--------------------------------------------------------------
/**
 * 視線ヒット移動制御用ワークの生成
 */
//--------------------------------------------------------------
extern EV_EYEMEET_MOVE_WORK * TRAINER_EYEMOVE_Create( HEAPID heapID,
    FIELDMAP_WORK *fieldMap, const TRAINER_HITDATA * hitdata, u32 work_pos );

//--------------------------------------------------------------
/**
 * @brief 視線ヒット移動制御イベントの生成
 */
//--------------------------------------------------------------
extern GMEVENT * EVENT_TrainerEyeMoveControl(
    GAMESYS_WORK * gsys, EV_EYEMEET_MOVE_WORK * eye0, EV_EYEMEET_MOVE_WORK * eye1 );

//--------------------------------------------------------------
/// ツール関数：トレーナー視線チェック
//--------------------------------------------------------------
extern int TRAINER_MMDL_CheckEyeRange(
    const MMDL *mmdl, u16 eye_dir, int eye_range, const FIELD_ENCOUNT *enc );

//--------------------------------------------------------------
/// ツール関数：トレーナーID取得
//--------------------------------------------------------------
extern u16 TRAINER_MMDL_GetTrainerID( const MMDL *mmdl );

