//=============================================================================================
/**
 * @file	btl_common.h
 * @brief	ポケモンWB バトルシステム ローカル共通ヘッダ
 * @author	taya
 *
 * @date	2008.09.06	作成
 */
//=============================================================================================
#ifndef __BTL_COMMON_H__
#define __BTL_COMMON_H__

#ifdef TEST_IN_DOS
#include "ds_types.h"
#endif


#include <gflib.h>
#include "pm_define.h"
#include "waza_tool\wazadata.h"

/*--------------------------------------------------------------------------*/
/* Typedefs                                                                 */
/*--------------------------------------------------------------------------*/


//--------------------------------------------------------------
/**
 *	定数群
 */
//--------------------------------------------------------------
enum {
	BTL_CLIENT_MAX = 4,				///< 稼働するクライアント数
	BTL_POSIDX_MAX = 3,				///< クライアントが管理する最大の戦闘位置数
	BTL_PARTY_MEMBER_MAX = 6,	///< パーティのメンバー最大数
};

//--------------------------------------------------------------
/**
 *	陣営を現す
 */
//--------------------------------------------------------------
typedef enum {

	BTL_SIDE_1ST,		///< スタンドアローンならプレイヤー側、通信対戦ならサーバ側
	BTL_SIDE_2ND,

}BtlSide;

//--------------------------------------------------------------
/**
 *	ポケモン立ち位置を現す（画面上の見た目ではなく、概念上の位置）
 */
//--------------------------------------------------------------
typedef enum {

	BTL_POS_1ST_0,		///< スタンドアローンならプレイヤー側、通信対戦ならサーバ側
	BTL_POS_2ND_0,
	BTL_POS_1ST_1,
	BTL_POS_2ND_1,
	BTL_POS_1ST_2,
	BTL_POS_2ND_2,

	BTL_POS_MAX,

}BtlPokePos;

//--------------------------------------------------------------
/**
 *	考えるのが人間かAIか？
 */
//--------------------------------------------------------------
typedef enum {

	BTL_THINKER_UI = 0,
	BTL_THINKER_AI,

	BTL_THINKER_TYPE_MAX,
	BTL_THINKER_NONE = BTL_THINKER_TYPE_MAX,

}BtlThinkerType;

//--------------------------------------------------------------
/**
 *	ダブルバトル時のチーム構成
 */
//--------------------------------------------------------------
typedef enum {
	BTL_DBLTEAM_ALONE_ALONE,	///< 個人vs個人
	BTL_DBLTEAM_ALONE_TAG,		///< 個人vsタッグ
	BTL_DBLTEAM_TAG_ALONE,		///< タッグvs個人
	BTL_DBLTEAM_TAG_TAG,		///< タッグvsタッグ
}BtlDblTeamFormation;




#endif
