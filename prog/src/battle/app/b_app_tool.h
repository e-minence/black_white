//============================================================================================
/**
 * @file		b_app_tool.h
 * @brief		戦闘用アプリ共通処理
 * @author	Hiroyuki Nakamura
 * @date		06.03.30
 */
//============================================================================================
#pragma	once

#include "print/printsys.h"
#include "system/cursor_move.h"


//============================================================================================
//	定数定義
//============================================================================================

typedef struct _BAPP_CURSOR_PUT_WORK	BAPP_CURSOR_PUT_WORK;		// カーソル表示ワーク

#define	BAPPTOOL_CURSOR_MAX		( 4 )		// カーソルで使用するセルアクターの数

#define	BAPPTOOL_SET_STR_SCRN_END		( 0xff )		// 転送ウィンドウ終了


//============================================================================================
//	プロトタイプ宣言
//============================================================================================

//============================================================================================
//	カーソル関連
//============================================================================================

//--------------------------------------------------------------------------------------------
/**
 * @brief		カーソル表示ワーク作成
 *
 * @param		heapID		ヒープＩＤ
 *
 * @return	カーソル表示ワーク
 */
//--------------------------------------------------------------------------------------------
extern BAPP_CURSOR_PUT_WORK * BAPPTOOL_CreateCursor( HEAPID heapID );

//--------------------------------------------------------------------------------------------
/**
 * @brief		カーソル表示ワーク開放
 *
 * @param		wk		カーソル表示ワーク
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_FreeCursor( BAPP_CURSOR_PUT_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		カーソル追加
 *
 * @param		wk			カーソル表示ワーク
 * @param		clunit	セルアクターユニット
 * @param		chrRes	キャラリソース
 * @param		palRes	パレットリソース
 * @param		celRes	セルリソース
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_AddCursor( BAPP_CURSOR_PUT_WORK * wk, GFL_CLUNIT * clunit, u32 chrRes, u32 palRes, u32 celRes );

//--------------------------------------------------------------------------------------------
/**
 * @brief		カーソル削除
 *
 * @param		wk			カーソル表示ワーク
 * @param		clunit	セルアクターユニット
 * @param		chrRes	キャラリソース
 * @param		palRes	パレットリソース
 * @param		celRes	セルリソース
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_DelCursor( BAPP_CURSOR_PUT_WORK * wk );

//--------------------------------------------------------------------------------------------
/**
 * @brief		カーソル表示切り替え
 *
 * @param		wk			カーソル表示ワーク
 * @param		flg			TRUE = 表示, FALSE = 非表示
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_VanishCursor( BAPP_CURSOR_PUT_WORK * wk, BOOL flg );

//--------------------------------------------------------------------------------------------
/**
 * @brief		カーソル移動
 *
 * @param		wk			カーソル表示ワーク
 * @param		dat			座標データ
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_MoveCursorPoint( BAPP_CURSOR_PUT_WORK * wk, const CURSORMOVE_DATA * dat );

//============================================================================================
//	文字表示関連
//============================================================================================

//--------------------------------------------------------------------------------------------
/**
 * @brief		BMPウィンドウスクリーン転送（単発）
 *
 * @param		util		PRINT_UTIL
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_PrintScreenTrans( PRINT_UTIL * util );

//--------------------------------------------------------------------------------------------
/**
 * @brief		BMPウィンドウスクリーン転送（テーブル参照）
 *
 * @param		util		PRINT_UTIL
 * @param		tbl			データ番号テーブル
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_SetStrScrn( PRINT_UTIL * util, const u8 * tbl );

//--------------------------------------------------------------------------------------------
/**
 * @brief		文字列転送
 *
 * @param		util		PRINT_UTIL
 * @param		que			PRINT_QUE
 * @param		max			PRINT_UTILの数
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void BAPPTOOL_PrintUtilTrans( PRINT_UTIL * util, PRINT_QUE * que, u32 max );
