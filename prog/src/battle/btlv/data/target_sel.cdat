
//============================================================================================
/**
 * @file	target_sel.cdat
 * @brief	攻撃対象選択用タッチパネル＆キー操作データテーブル
 * @author	soga
 * @date	2009.10.22
 */
//============================================================================================

static const GFL_UI_TP_HITTBL PokeSeleMenuTouch4DataHitTbl[] = {
  //UP      DOWN    LEFT    RIGHT
  { 11 * 8, 16 * 8,  0 * 8, 16 * 8 },  //ターゲットA
  {  4 * 8, 11 * 8, 16 * 8, 255 },     //ターゲットB
  { 11 * 8, 16 * 8, 16 * 8, 255 },     //ターゲットC
  {  4 * 8, 11 * 8,  0 * 8, 16 * 8 },  //ターゲットD
  { 18 * 8, 24 * 8, 22 * 8, 255},      //キャンセル
  { GFL_UI_TP_HIT_END, 0, 0, 0 },    
};

static const BOOL PokeSeleMenuTouch4DataCancel[] = {
  FALSE,  //ターゲットA
  FALSE,  //ターゲットB
  FALSE,  //ターゲットC
  FALSE,  //ターゲットD
  TRUE << CANCEL_FLAG_SHIFT | TRUE,   //キャンセル
};

static const int PokeSeleMenuTouch4DataPlttNormal[] = {
  ( 1 <<  9 ),  //ターゲットA
  ( 1 <<  8 ),  //ターゲットB
  ( 1 << 10 ),  //ターゲットC
  ( 1 <<  7 ),  //ターゲットD
  1 << 4,   //キャンセル
};

static const int PokeSeleMenuTouch4DataPlttNoMine_L[] = {
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 10 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 10 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 10 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 10 ),  //ターゲットD
  1 << 4,   //キャンセル
};

static const int PokeSeleMenuTouch4DataPlttNoMine_R[] = {
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットD
  1 << 4,   //キャンセル
};

static const int PokeSeleMenuTouch4DataPlttEnemy[] = {
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットD
  1 << 4,   //キャンセル
};

static const int PokeSeleMenuTouch4DataPlttMine[] = {
  ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットA
  ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットB
  ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットC
  ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットD
  1 << 4,   //キャンセル
};

static const int PokeSeleMenuTouch4DataPlttAll[] = {
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ),  //ターゲットD
  1 << 4,   //キャンセル
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch4Normal = {
  PokeSeleMenuTouch4DataHitTbl,
  PokeSeleMenuTouch4DataCancel,
  PokeSeleMenuTouch4DataPlttNormal,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch4NoMine_L = {
  PokeSeleMenuTouch4DataHitTbl,
  PokeSeleMenuTouch4DataCancel,
  PokeSeleMenuTouch4DataPlttNoMine_L,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch4NoMine_R = {
  PokeSeleMenuTouch4DataHitTbl,
  PokeSeleMenuTouch4DataCancel,
  PokeSeleMenuTouch4DataPlttNoMine_R,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch4Enemy = {
  PokeSeleMenuTouch4DataHitTbl,
  PokeSeleMenuTouch4DataCancel,
  PokeSeleMenuTouch4DataPlttEnemy,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch4Mine = {
  PokeSeleMenuTouch4DataHitTbl,
  PokeSeleMenuTouch4DataCancel,
  PokeSeleMenuTouch4DataPlttMine,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch4All = {
  PokeSeleMenuTouch4DataHitTbl,
  PokeSeleMenuTouch4DataCancel,
  PokeSeleMenuTouch4DataPlttAll,
};

static const BTLV_INPUT_HITTBL  *PokeSeleMenuTouch4Data[ 2 ][ WAZA_TARGET_MAX + 1 ] = {
  { 
    &PokeSeleMenuTouch4Normal,   ///< 自分以外１体（選択）
    &PokeSeleMenuTouch4Normal,   ///< 自分を含む味方１体（選択）
    &PokeSeleMenuTouch4Normal,   ///< 自分以外の味方１体（選択）
    &PokeSeleMenuTouch4Normal,   ///< 相手側１体（選択）
    &PokeSeleMenuTouch4NoMine_L, ///< 自分以外全て
    &PokeSeleMenuTouch4Enemy,    ///< 相手側全て
    &PokeSeleMenuTouch4Mine,     ///< 味方側全ポケ
    &PokeSeleMenuTouch4Normal,   ///< 自分のみ
    &PokeSeleMenuTouch4All,      ///< 場に出ているポケモン全て
    &PokeSeleMenuTouch4Normal,   ///< 相手側１体ランダム
    &PokeSeleMenuTouch4All,      ///< 場全体（天候など）
    &PokeSeleMenuTouch4Enemy,    ///< 敵側陣営
    &PokeSeleMenuTouch4Mine,     ///< 自分側陣営
    &PokeSeleMenuTouch4Normal,   ///< ゆびをふるなど特殊型
    &PokeSeleMenuTouch4Normal,   ///< 自分以外１体（遠距離）
  },
  { 
    &PokeSeleMenuTouch4Normal,   ///< 自分以外１体（選択）
    &PokeSeleMenuTouch4Normal,   ///< 自分を含む味方１体（選択）
    &PokeSeleMenuTouch4Normal,   ///< 自分以外の味方１体（選択）
    &PokeSeleMenuTouch4Normal,   ///< 相手側１体（選択）
    &PokeSeleMenuTouch4NoMine_R, ///< 自分以外全て
    &PokeSeleMenuTouch4Enemy,    ///< 相手側全て
    &PokeSeleMenuTouch4Mine,     ///< 味方側全ポケ
    &PokeSeleMenuTouch4Normal,   ///< 自分のみ
    &PokeSeleMenuTouch4All,      ///< 場に出ているポケモン全て
    &PokeSeleMenuTouch4Normal,   ///< 相手側１体ランダム
    &PokeSeleMenuTouch4All,      ///< 場全体（天候など）
    &PokeSeleMenuTouch4Enemy,    ///< 敵側陣営
    &PokeSeleMenuTouch4Mine,     ///< 自分側陣営
    &PokeSeleMenuTouch4Normal,   ///< ゆびをふるなど特殊型
    &PokeSeleMenuTouch4Normal,   ///< 自分以外１体（遠距離）
  },
};

///< 自分以外１体（選択）& 自分以外１体（遠距離）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4Normal_L[] = {  
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  BTLV_INPUT_NOMOVE,  1,  3,  4 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  1,  4 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D   L                   R                   A   B
  { { 2,  2,  2,  2,  -1, -1 }, 1,  3,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  2,  4 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, -2, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //3
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4Normal_R[] = {  
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  3,  4 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  0,  BTLV_INPUT_NOMOVE,  1,  4 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D   L                   R                   A   B
  { { 0,  0,  0,  0,  -1, -1 }, 0,  3,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  0,  4 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, -2, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //3
};

///< 自分以外全て
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4NoMine_L[] = { 
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 3,  1,  3,  2,  2,  -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  3,  4 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //1
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4NoMine_R[] = { 
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 3,  1,  0,  1,  -1, 0 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  3,  4 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //1
};

///< 相手側１体（選択）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4EnemySel[] = {  
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  3,  4 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  1,  4 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //2
};

///< 相手側全て & 敵側陣営
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4Enemy[] = { 
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 3,  1,  3,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  3,  4 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //1
};

///< 自分のみ & 相手側１体ランダム & ゆびをふるなど特殊型
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4Mine_L[] = {  
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 0,  0,  0,  0,  -1, -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  0,  4 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //1
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4Mine_R[] = {  
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 2,  2,  2,  2,  -1, -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  2,  4 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //1
};

///< 自分を含む味方１体（選択）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4MineSel[] = {  
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 0,  0,  0,  0,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  0,  4 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 2,  2,  2,  2,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  2,  4 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //2
};

///< 場に出ているポケモン全て
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4All[] = { 
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 3,  1,  0,  2,  -1, -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  3,  4 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //1
};

///< 自分側陣営
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey4Mine[] = { 
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 0,  2,  0,  2,  -1, -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  0,  4 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  4 },  //1
};

const BTLV_INPUT_KEYTBL  *PokeSeleMenuKey4Data[ 2 ][ WAZA_TARGET_MAX + 1 ] = {
  { 
    PokeSeleMenuKey4Normal_L,  ///< 自分以外１体（選択）
    PokeSeleMenuKey4MineSel,   ///< 自分を含む味方１体（選択）
    PokeSeleMenuKey4Mine_R,    ///< 自分以外の味方１体（選択）
    PokeSeleMenuKey4EnemySel,  ///< 相手側１体（選択）
    PokeSeleMenuKey4NoMine_L,  ///< 自分以外全て
    PokeSeleMenuKey4Enemy,     ///< 相手側全て
    PokeSeleMenuKey4Mine,      ///< 味方側全ポケ
    PokeSeleMenuKey4Mine_L,    ///< 自分のみ
    PokeSeleMenuKey4All,       ///< 場に出ているポケモン全て
    PokeSeleMenuKey4Mine_L,    ///< 相手側１体ランダム
    PokeSeleMenuKey4All,       ///< 場全体（天候など）
    PokeSeleMenuKey4Enemy,     ///< 敵側陣営
    PokeSeleMenuKey4Mine,      ///< 自分側陣営
    PokeSeleMenuKey4Mine_L,    ///< ゆびをふるなど特殊型
    PokeSeleMenuKey4Normal_L,  ///< 自分以外１体（遠距離）
  },
  { 
    PokeSeleMenuKey4Normal_R,  ///< 自分以外１体（選択）
    PokeSeleMenuKey4MineSel,   ///< 自分を含む味方１体（選択）
    PokeSeleMenuKey4Mine_L,    ///< 自分以外の味方１体（選択）
    PokeSeleMenuKey4EnemySel,  ///< 相手側１体（選択）
    PokeSeleMenuKey4NoMine_R,  ///< 自分以外全て
    PokeSeleMenuKey4Enemy,     ///< 相手側全て
    PokeSeleMenuKey4Mine,      ///< 味方側全ポケ
    PokeSeleMenuKey4Mine_R,    ///< 自分のみ
    PokeSeleMenuKey4All,       ///< 場に出ているポケモン全て
    PokeSeleMenuKey4Mine_R,    ///< 相手側１体ランダム
    PokeSeleMenuKey4All,       ///< 場全体（天候など）
    PokeSeleMenuKey4Enemy,     ///< 敵側陣営
    PokeSeleMenuKey4Mine,      ///< 自分側陣営
    PokeSeleMenuKey4Mine_R,    ///< ゆびをふるなど特殊型
    PokeSeleMenuKey4Normal_R,  ///< 自分以外１体（遠距離）
  },
};

const u8 PokeSeleMenuKey4DataCount[ 2 ][ WAZA_TARGET_MAX + 1 ] = {
  { 
    NELEMS(PokeSeleMenuKey4Normal_L),  ///< 自分以外１体（選択）
    NELEMS(PokeSeleMenuKey4MineSel),   ///< 自分を含む味方１体（選択）
    NELEMS(PokeSeleMenuKey4Mine_R),    ///< 自分以外の味方１体（選択）
    NELEMS(PokeSeleMenuKey4EnemySel),  ///< 相手側１体（選択）
    NELEMS(PokeSeleMenuKey4NoMine_L),  ///< 自分以外全て
    NELEMS(PokeSeleMenuKey4Enemy),     ///< 相手側全て
    NELEMS(PokeSeleMenuKey4Mine),      ///< 味方側全ポケ
    NELEMS(PokeSeleMenuKey4Mine_L),    ///< 自分のみ
    NELEMS(PokeSeleMenuKey4All),       ///< 場に出ているポケモン全て
    NELEMS(PokeSeleMenuKey4Mine_L),    ///< 相手側１体ランダム
    NELEMS(PokeSeleMenuKey4All),       ///< 場全体（天候など）
    NELEMS(PokeSeleMenuKey4Enemy),     ///< 敵側陣営
    NELEMS(PokeSeleMenuKey4Mine),      ///< 自分側陣営
    NELEMS(PokeSeleMenuKey4Mine_L),    ///< ゆびをふるなど特殊型
    NELEMS(PokeSeleMenuKey4Normal_L),  ///< 自分以外１体（遠距離）
  },
  { 
    NELEMS(PokeSeleMenuKey4Normal_R),  ///< 自分以外１体（選択）
    NELEMS(PokeSeleMenuKey4MineSel),   ///< 自分を含む味方１体（選択）
    NELEMS(PokeSeleMenuKey4Mine_L),    ///< 自分以外の味方１体（選択）
    NELEMS(PokeSeleMenuKey4EnemySel),  ///< 相手側１体（選択）
    NELEMS(PokeSeleMenuKey4NoMine_R),  ///< 自分以外全て
    NELEMS(PokeSeleMenuKey4Enemy),     ///< 相手側全て
    NELEMS(PokeSeleMenuKey4Mine),      ///< 味方側全ポケ
    NELEMS(PokeSeleMenuKey4Mine_R),    ///< 自分のみ
    NELEMS(PokeSeleMenuKey4All),       ///< 場に出ているポケモン全て
    NELEMS(PokeSeleMenuKey4Mine_R),    ///< 相手側１体ランダム
    NELEMS(PokeSeleMenuKey4All),       ///< 場全体（天候など）
    NELEMS(PokeSeleMenuKey4Enemy),     ///< 敵側陣営
    NELEMS(PokeSeleMenuKey4Mine),      ///< 自分側陣営
    NELEMS(PokeSeleMenuKey4Mine_R),    ///< ゆびをふるなど特殊型
    NELEMS(PokeSeleMenuKey4Normal_R),  ///< 自分以外１体（遠距離）
  },
};

static const GFL_UI_TP_HITTBL PokeSeleMenuTouch6DataHitTbl[] = {
  //UP      DOWN    LEFT    RIGHT
  { 11 * 8, 16 * 8,  1 * 8, 11 * 8 },  //ターゲットA
  {  4 * 8, 11 * 8, 21 * 8, 31 * 8 },  //ターゲットB
  { 11 * 8, 16 * 8, 11 * 8, 21 * 8 },  //ターゲットC
  {  4 * 8, 11 * 8, 11 * 8, 21 * 8 },  //ターゲットD
  { 11 * 8, 16 * 8, 21 * 8, 31 * 8 },  //ターゲットE
  {  4 * 8, 11 * 8,  1 * 8, 11 * 8 },  //ターゲットF
  { 18 * 8, 24 * 8, 22 * 8, 255},      //キャンセル
  { GFL_UI_TP_HIT_END, 0, 0, 0 },
};

static const BOOL PokeSeleMenuTouch6DataCancel[] = {
  FALSE,  //ターゲットA
  FALSE,  //ターゲットB
  FALSE,  //ターゲットC
  FALSE,  //ターゲットD
  FALSE,  //ターゲットE
  FALSE,  //ターゲットF
  TRUE << CANCEL_FLAG_SHIFT | TRUE,   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttNormal[] = {
  ( 1 << 10 ),  //ターゲットA
  ( 1 <<  9 ),  //ターゲットB
  ( 1 << 11 ),  //ターゲットC
  ( 1 <<  8 ),  //ターゲットD
  ( 1 << 12 ),  //ターゲットE
  ( 1 <<  7 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttNoMine_L[] = {
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットD
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットE
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttNoMine_C[] = {
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 12 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 12 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 12 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 12 ),  //ターゲットD
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 12 ),  //ターゲットE
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 12 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttNoMine_R[] = {
  ( 1 << 9 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットA
  ( 1 << 9 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットB
  ( 1 << 9 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットC
  ( 1 << 9 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットD
  ( 1 << 9 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットE
  ( 1 << 9 ) | ( 1 << 8 ) | ( 1 << 11 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttEnemy_L[] = {
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットD
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットE
  ( 1 << 7 ) | ( 1 << 8 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttEnemy_C[] = {
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットD
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットE
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttEnemy_R[] = {
  ( 1 << 9 ) | ( 1 << 8 ),  //ターゲットA
  ( 1 << 9 ) | ( 1 << 8 ),  //ターゲットB
  ( 1 << 9 ) | ( 1 << 8 ),  //ターゲットC
  ( 1 << 9 ) | ( 1 << 8 ),  //ターゲットD
  ( 1 << 9 ) | ( 1 << 8 ),  //ターゲットE
  ( 1 << 9 ) | ( 1 << 8 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttMine[] = {
  ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットA
  ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットB
  ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットC
  ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットD
  ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットE
  ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BOOL PokeSeleMenuTouch6DataPlttAll[] = {
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットA
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットB
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットC
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットD
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットE
  ( 1 << 7 ) | ( 1 << 8 ) | ( 1 << 9 ) | ( 1 << 10 ) | ( 1 << 11 ) | ( 1 << 12 ),  //ターゲットF
  ( 1 << 4 ),   //キャンセル
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataNormal = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttNormal,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataNoMine_L = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttNoMine_L,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataNoMine_C = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttNoMine_C,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataNoMine_R = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttNoMine_R,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataEnemy_L = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttEnemy_L,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataEnemy_C = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttEnemy_C,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataEnemy_R = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttEnemy_R,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataMine = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttMine,
};

static const BTLV_INPUT_HITTBL PokeSeleMenuTouch6DataAll = {
  PokeSeleMenuTouch6DataHitTbl,
  PokeSeleMenuTouch6DataCancel,
  PokeSeleMenuTouch6DataPlttAll,
};

static const BTLV_INPUT_HITTBL  *PokeSeleMenuTouch6Data[ 3 ][ WAZA_TARGET_MAX + 1 ] = {
  { 
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 自分を含む味方１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外の味方１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 相手側１体（選択）
    &PokeSeleMenuTouch6DataNoMine_L, ///< 自分以外全て
    &PokeSeleMenuTouch6DataEnemy_L,  ///< 相手側全て
    &PokeSeleMenuTouch6DataMine,     ///< 味方側全ポケ
    &PokeSeleMenuTouch6DataNormal,   ///< 自分のみ
    &PokeSeleMenuTouch6DataAll,      ///< 場に出ているポケモン全て
    &PokeSeleMenuTouch6DataNormal,   ///< 相手側１体ランダム
    &PokeSeleMenuTouch6DataAll,      ///< 場全体（天候など）
    &PokeSeleMenuTouch6DataEnemy_C,  ///< 敵側陣営
    &PokeSeleMenuTouch6DataMine,     ///< 自分側陣営
    &PokeSeleMenuTouch6DataNormal,   ///< ゆびをふるなど特殊型
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外１体（遠距離）
  },
  {
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 自分を含む味方１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外の味方１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 相手側１体（選択）
    &PokeSeleMenuTouch6DataNoMine_C, ///< 自分以外全て
    &PokeSeleMenuTouch6DataEnemy_C,  ///< 相手側全て
    &PokeSeleMenuTouch6DataMine,     ///< 味方側全ポケ
    &PokeSeleMenuTouch6DataNormal,   ///< 自分のみ
    &PokeSeleMenuTouch6DataAll,      ///< 場に出ているポケモン全て
    &PokeSeleMenuTouch6DataNormal,   ///< 相手側１体ランダム
    &PokeSeleMenuTouch6DataAll,      ///< 場全体（天候など）
    &PokeSeleMenuTouch6DataEnemy_C,  ///< 敵側陣営
    &PokeSeleMenuTouch6DataMine,     ///< 自分側陣営
    &PokeSeleMenuTouch6DataNormal,   ///< ゆびをふるなど特殊型
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外１体（遠距離）
  },
  {
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 自分を含む味方１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外の味方１体（選択）
    &PokeSeleMenuTouch6DataNormal,   ///< 相手側１体（選択）
    &PokeSeleMenuTouch6DataNoMine_R, ///< 自分以外全て
    &PokeSeleMenuTouch6DataEnemy_R,  ///< 相手側全て
    &PokeSeleMenuTouch6DataMine,     ///< 味方側全ポケ
    &PokeSeleMenuTouch6DataNormal,   ///< 自分のみ
    &PokeSeleMenuTouch6DataAll,      ///< 場に出ているポケモン全て
    &PokeSeleMenuTouch6DataNormal,   ///< 相手側１体ランダム
    &PokeSeleMenuTouch6DataAll,      ///< 場全体（天候など）
    &PokeSeleMenuTouch6DataEnemy_C,  ///< 敵側陣営
    &PokeSeleMenuTouch6DataMine,     ///< 自分側陣営
    &PokeSeleMenuTouch6DataNormal,   ///< ゆびをふるなど特殊型
    &PokeSeleMenuTouch6DataNormal,   ///< 自分以外１体（遠距離）
  },
};

///< 自分以外１体（選択）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Normal_L[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 5,  5,  5,  5,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  BTLV_INPUT_NOMOVE,  1,  5,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  3,  6 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D   L                   R                   A   B
  { { 2,  2,  2,  2,  -1, -1 }, 1,  3,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  2,  6 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -2, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //3
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Normal_C[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 5,  5,  5,  5,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  BTLV_INPUT_NOMOVE,  1,  5,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  5,  0,  2,  3,  6 },                                  //1
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  4,  1,  BTLV_INPUT_NOMOVE,  1,  6 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D   L                   R   A   B
  { { 0,  0,  0,  0,  -1, -1 }, 0,  5,  BTLV_INPUT_NOMOVE,  4,  0,  6 },                                  //3
  //  LU  RU  LD  RD  LD2 RD2   U   D   L   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 2,  5,  3,  BTLV_INPUT_NOMOVE,  4,  6 },                                  //4
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //5
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Normal_R[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  3,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  0,  BTLV_INPUT_NOMOVE,  1,  6 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D   L                   R                   A   B
  { { 2,  2,  2,  2,  -1, -1 }, 0,  3,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  2,  6 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //3
};

///< 自分以外全て
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6NoMine_L[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 5,  3,  5,  2,  2,  -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  5,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6NoMine_C[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 5,  1,  0,  4,  4,  0 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  5,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6NoMine_R[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 3,  1,  0,  0,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  3,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};

///< 相手側１体（選択）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6EnemySel_L[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 5,  5,  5,  5,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  5,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  3,  6 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //2
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6EnemySel_C[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 5,  5,  5,  5,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  BTLV_INPUT_NOMOVE,  1,  5,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  0,  2,  3,  6 },                                  //1
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  1,  BTLV_INPUT_NOMOVE,  1,  6 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //3
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6EnemySel_R[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  3,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  1,  6 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //2
};

///< 相手側全て
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Enemy_L[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 5,  3,  5,  3,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  5,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};
///< 敵側陣営
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Enemy_C[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 5,  1,  5,  1,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  5,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Enemy_R[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 3,  1,  3,  1,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  3,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};

///< 自分のみ & 相手側１体ランダム & ゆびをふるなど特殊型
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Mine_L[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 0,  0,  0,  0,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  0,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Mine_C[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 2,  2,  2,  2,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  2,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Mine_R[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 4,  4,  4,  4,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  4,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};

///< 自分を含む味方１体（選択）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6MineSel[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 0,  0,  0,  0,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  BTLV_INPUT_NOMOVE,  1,  0,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R   A   B
  { { 2,  2,  2,  2,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  0,  2,  2,  6 },                                  //1
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  1,  BTLV_INPUT_NOMOVE,  4,  6 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //3
};

///< 自分以外の味方１体（選択）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Pair_L[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 2,  2,  2,  2,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  2,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  4,  6 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //2
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Pair_C[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 0,  0,  0,  0,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  0,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  4,  6 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //2
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Pair_R[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 0,  0,  0,  0,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  BTLV_INPUT_NOMOVE,  1,  0,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 2,  2,  2,  2,  -1, -1 }, BTLV_INPUT_NOMOVE,  2,  0,  BTLV_INPUT_NOMOVE,  2,  6 },                  //1
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //2
};

///< 場に出ているポケモン全て & 場全体（天候など）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6All[] = { 
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 5,  1,  0,  4,  -1, -1 }, BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  5,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};

///< 自分側陣営
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Mine[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R                   A   B
  { { 0,  4,  0,  4,  -1, 1 },  BTLV_INPUT_NOMOVE,  1,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  0,  6 },  //0
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, 0,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //1
};

///< 自分以外１体（遠距離）
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Long_L[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 5,  5,  5,  5,  -1, -1 }, BTLV_INPUT_NOMOVE,  5,  BTLV_INPUT_NOMOVE,  1,  5,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  0,  2,  3,  6 },                                  //1
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  4,  1,  BTLV_INPUT_NOMOVE,  1,  6 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D   L                   R   A   B
  { { 2,  2,  2,  2,  -1, -1 }, 1,  5,  BTLV_INPUT_NOMOVE,  4,  2,  6 },                                  //3
  //  LU  RU  LD  RD  LD2 RD2   U   D   L   R                   A   B
  { { 4,  4,  4,  4,  -1, -1 }, 2,  5,  3,  BTLV_INPUT_NOMOVE,  4,  6 },                                  //4
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //5
};
static const BTLV_INPUT_KEYTBL  PokeSeleMenuKey6Long_R[] = {
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L                   R   A   B
  { { 5,  5,  5,  5,  -1, -1 }, BTLV_INPUT_NOMOVE,  3,  BTLV_INPUT_NOMOVE,  1,  5,  6 },                  //0
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R   A   B
  { { 3,  3,  3,  3,  -1, -1 }, BTLV_INPUT_NOMOVE,  4,  0,  2,  3,  6 },                                  //1
  //  LU  RU  LD  RD  LD2 RD2   U                   D   L   R                   A   B
  { { 1,  1,  1,  1,  -1, -1 }, BTLV_INPUT_NOMOVE,  5,  1,  BTLV_INPUT_NOMOVE,  1,  6 },                  //2
  //  LU  RU  LD  RD  LD2 RD2   U   D   L                   R   A   B
  { { 0,  0,  0,  0,  -1, -1 }, 0,  5,  BTLV_INPUT_NOMOVE,  4,  0,  6 },                                  //3
  //  LU  RU  LD  RD  LD2 RD2   U   D   L   R                   A   B
  { { 2,  2,  2,  2,  -1, -1 }, 2,  5,  3,  BTLV_INPUT_NOMOVE,  2,  6 },                                  //4
  //  LU  RU  LD  RD  LD2 RD2   U   D                   L                   R                   A   B
  { { 6,  6,  6,  6,  -1, -1 }, -1, BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  BTLV_INPUT_NOMOVE,  6,  6 },  //5
};

const BTLV_INPUT_KEYTBL  *PokeSeleMenuKey6Data[ 3 ][ WAZA_TARGET_MAX + 1 ] = { 
  { 
    PokeSeleMenuKey6Normal_L,   ///< 自分以外１体（選択）
    PokeSeleMenuKey6MineSel,    ///< 自分を含む味方１体（選択）
    PokeSeleMenuKey6Pair_L,     ///< 自分以外の味方１体（選択）
    PokeSeleMenuKey6EnemySel_L, ///< 相手側１体（選択）
    PokeSeleMenuKey6NoMine_L,   ///< 自分以外全て
    PokeSeleMenuKey6Enemy_L,    ///< 相手側全て
    PokeSeleMenuKey6Mine,       ///< 味方側全ポケ
    PokeSeleMenuKey6Mine_L,     ///< 自分のみ
    PokeSeleMenuKey6All,        ///< 場に出ているポケモン全て
    PokeSeleMenuKey6Mine_L,     ///< 相手側１体ランダム
    PokeSeleMenuKey6All,        ///< 場全体（天候など）
    PokeSeleMenuKey6Enemy_C,    ///< 敵側陣営
    PokeSeleMenuKey6Mine,       ///< 自分側陣営
    PokeSeleMenuKey6Mine_L,     ///< ゆびをふるなど特殊型
    PokeSeleMenuKey6Long_L,     ///< 自分以外１体（遠距離）
  },
  { 
    PokeSeleMenuKey6Normal_C,   ///< 自分以外１体（選択）
    PokeSeleMenuKey6MineSel,    ///< 自分を含む味方１体（選択）
    PokeSeleMenuKey6Pair_C,     ///< 自分以外の味方１体（選択）
    PokeSeleMenuKey6EnemySel_C, ///< 相手側１体（選択）
    PokeSeleMenuKey6NoMine_C,   ///< 自分以外全て
    PokeSeleMenuKey6Enemy_C,    ///< 相手側全て
    PokeSeleMenuKey6Mine,       ///< 味方側全ポケ
    PokeSeleMenuKey6Mine_C,     ///< 自分のみ
    PokeSeleMenuKey6All,        ///< 場に出ているポケモン全て
    PokeSeleMenuKey6Mine_C,     ///< 相手側１体ランダム
    PokeSeleMenuKey6All,        ///< 場全体（天候など）
    PokeSeleMenuKey6Enemy_C,    ///< 敵側陣営
    PokeSeleMenuKey6Mine,       ///< 自分側陣営
    PokeSeleMenuKey6Mine_C,     ///< ゆびをふるなど特殊型
    PokeSeleMenuKey6Normal_C,   ///< 自分以外１体（遠距離）
  },
  { 
    PokeSeleMenuKey6Normal_R,   ///< 自分以外１体（選択）
    PokeSeleMenuKey6MineSel,    ///< 自分を含む味方１体（選択）
    PokeSeleMenuKey6Pair_R,     ///< 自分以外の味方１体（選択）
    PokeSeleMenuKey6EnemySel_R, ///< 相手側１体（選択）
    PokeSeleMenuKey6NoMine_R,   ///< 自分以外全て
    PokeSeleMenuKey6Enemy_R,    ///< 相手側全て
    PokeSeleMenuKey6Mine,       ///< 味方側全ポケ
    PokeSeleMenuKey6Mine_R,     ///< 自分のみ
    PokeSeleMenuKey6All,        ///< 場に出ているポケモン全て
    PokeSeleMenuKey6Mine_R,     ///< 相手側１体ランダム
    PokeSeleMenuKey6All,        ///< 場全体（天候など）
    PokeSeleMenuKey6Enemy_C,    ///< 敵側陣営
    PokeSeleMenuKey6Mine,       ///< 自分側陣営
    PokeSeleMenuKey6Mine_R,     ///< ゆびをふるなど特殊型
    PokeSeleMenuKey6Long_R,     ///< 自分以外１体（遠距離）
  },
};

const u8 PokeSeleMenuKey6DataCount[ 3 ][ WAZA_TARGET_MAX + 1 ] = { 
  { 
    NELEMS(PokeSeleMenuKey6Normal_L),   ///< 自分以外１体（選択）
    NELEMS(PokeSeleMenuKey6MineSel),    ///< 自分を含む味方１体（選択）
    NELEMS(PokeSeleMenuKey6Pair_L),     ///< 自分以外の味方１体（選択）
    NELEMS(PokeSeleMenuKey6EnemySel_L), ///< 相手側１体（選択）
    NELEMS(PokeSeleMenuKey6NoMine_L),   ///< 自分以外全て
    NELEMS(PokeSeleMenuKey6Enemy_L),    ///< 相手側全て
    NELEMS(PokeSeleMenuKey6Mine),       ///< 味方側全ポケ
    NELEMS(PokeSeleMenuKey6Mine_L),     ///< 自分のみ
    NELEMS(PokeSeleMenuKey6All),        ///< 場に出ているポケモン全て
    NELEMS(PokeSeleMenuKey6Mine_L),     ///< 相手側１体ランダム
    NELEMS(PokeSeleMenuKey6All),        ///< 場全体（天候など）
    NELEMS(PokeSeleMenuKey6Enemy_C),    ///< 敵側陣営
    NELEMS(PokeSeleMenuKey6Mine),       ///< 自分側陣営
    NELEMS(PokeSeleMenuKey6Mine_L),     ///< ゆびをふるなど特殊型
    NELEMS(PokeSeleMenuKey6Long_L),     ///< 自分以外１体（遠距離）
  },
  { 
    NELEMS(PokeSeleMenuKey6Normal_C),   ///< 自分以外１体（選択）
    NELEMS(PokeSeleMenuKey6MineSel),    ///< 自分を含む味方１体（選択）
    NELEMS(PokeSeleMenuKey6Pair_C),     ///< 自分以外の味方１体（選択）
    NELEMS(PokeSeleMenuKey6EnemySel_C), ///< 相手側１体（選択）
    NELEMS(PokeSeleMenuKey6NoMine_C),   ///< 自分以外全て
    NELEMS(PokeSeleMenuKey6Enemy_C),    ///< 相手側全て
    NELEMS(PokeSeleMenuKey6Mine),       ///< 味方側全ポケ
    NELEMS(PokeSeleMenuKey6Mine_C),     ///< 自分のみ
    NELEMS(PokeSeleMenuKey6All),        ///< 場に出ているポケモン全て
    NELEMS(PokeSeleMenuKey6Mine_C),     ///< 相手側１体ランダム
    NELEMS(PokeSeleMenuKey6All),        ///< 場全体（天候など）
    NELEMS(PokeSeleMenuKey6Enemy_C),    ///< 敵側陣営
    NELEMS(PokeSeleMenuKey6Mine),       ///< 自分側陣営
    NELEMS(PokeSeleMenuKey6Mine_C),     ///< ゆびをふるなど特殊型
    NELEMS(PokeSeleMenuKey6Normal_C),   ///< 自分以外１体（遠距離）
  },
  { 
    NELEMS(PokeSeleMenuKey6Normal_R),   ///< 自分以外１体（選択）
    NELEMS(PokeSeleMenuKey6MineSel),    ///< 自分を含む味方１体（選択）
    NELEMS(PokeSeleMenuKey6Pair_R),     ///< 自分以外の味方１体（選択）
    NELEMS(PokeSeleMenuKey6EnemySel_R), ///< 相手側１体（選択）
    NELEMS(PokeSeleMenuKey6NoMine_R),   ///< 自分以外全て
    NELEMS(PokeSeleMenuKey6Enemy_R),    ///< 相手側全て
    NELEMS(PokeSeleMenuKey6Mine),       ///< 味方側全ポケ
    NELEMS(PokeSeleMenuKey6Mine_R),     ///< 自分のみ
    NELEMS(PokeSeleMenuKey6All),        ///< 場に出ているポケモン全て
    NELEMS(PokeSeleMenuKey6Mine_R),     ///< 相手側１体ランダム
    NELEMS(PokeSeleMenuKey6All),        ///< 場全体（天候など）
    NELEMS(PokeSeleMenuKey6Enemy_C),    ///< 敵側陣営
    NELEMS(PokeSeleMenuKey6Mine),       ///< 自分側陣営
    NELEMS(PokeSeleMenuKey6Mine_R),     ///< ゆびをふるなど特殊型
    NELEMS(PokeSeleMenuKey6Long_R),     ///< 自分以外１体（遠距離）
  },
};

// ↑描画位置から上記テーブルインデックスを引くためのテーブル
static const u8 STW_HitTblIndex[] = {
  BTLV_MCSS_POS_A,
  BTLV_MCSS_POS_B,
  BTLV_MCSS_POS_C,
  BTLV_MCSS_POS_D,
  BTLV_MCSS_POS_E,
  BTLV_MCSS_POS_F,
};

