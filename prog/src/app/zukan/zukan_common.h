//============================================================================================
/**
 * @file		zukan_common.h
 * @brief		図鑑画面 共通処理
 * @author	Hiroyuki Nakamura
 * @date		09.12.15
 *
 *	モジュール名：ZKNCOMM
 */
//============================================================================================
#pragma	once

#include "savedata/zukan_savedata.h"
#include "search/zukan_search_engine.h"


//============================================================================================
//	定数定義
//============================================================================================

// 上下バーのスクロールスピード
#define ZKNCOMM_BAR_SPEED   (8)     // 毎フレームZKNCOMM_BAR_SPEEDだけ移動する
// フェードイン/アウトのスピード
#define ZKNCOMM_FADE_WAIT   (-14)     // PaletteFadeReqWriteのwaitに渡せる値


// セルアクターデータ
typedef struct {
	GFL_CLWK_DATA	dat;

	u32	chrRes;
	u32	palRes;
	u32	celRes;

	u16	pal;
	u16	disp;

}ZKNCOMM_CLWK_DATA;

// リストデータ
enum {
	ZUKAN_LIST_MONS_NONE = 0,		// 未確認
	ZUKAN_LIST_MONS_SEE,				// 見た
	ZUKAN_LIST_MONS_GET,				// 捕獲した
};


//============================================================================================
//	プロトタイプ宣言
//============================================================================================

//--------------------------------------------------------------------------------------------
/**
 * @brief		デフォルトリスト作成
 *
 * @param		sv			図鑑セーブデータ
 * @param		list		リスト作成場所
 * @param		heapID	ヒープＩＤ
 *
 * @return	リストに登録した数
 */
//--------------------------------------------------------------------------------------------
extern u16 ZKNCOMM_MakeDefaultList( ZUKAN_SAVEDATA * sv, u16 ** list, HEAPID heapID );

//--------------------------------------------------------------------------------------------
/**
 * @brief		デフォルトポケモンを登録されているものにする
 *
 * @param		sv		図鑑セーブデータ
 * @param		list	リストデータ
 * @param		max		リスト項目数
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void ZKNCOMM_InitDefaultMons( ZUKAN_SAVEDATA * sv, u16 * list, u16 max );

//--------------------------------------------------------------------------------------------
/**
 * @brief		ビクティチェック
 *
 * @param		sv		図鑑セーブデータ
 *
 * @retval	"TRUE = 表示する"
 * @retval	"FALSE = それ以外"
 */
//--------------------------------------------------------------------------------------------
extern BOOL ZKNCOMM_CheckLocalListNumberZero( ZUKAN_SAVEDATA * sv );

//--------------------------------------------------------------------------------------------
/**
 * @brief		ソートデータリセット
 *
 * @param		sv		図鑑セーブデータ
 * @param		sort	ソートデータ
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void ZKNCOMM_ResetSortData( const ZUKAN_SAVEDATA * sv, ZKNCOMM_LIST_SORT * sort );

//--------------------------------------------------------------------------------------------
/**
 * @brief		フェードインセット
 *
 * @param		heapID		ヒープＩＤ
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void ZKNCOMM_SetFadeIn( HEAPID heapID );

//--------------------------------------------------------------------------------------------
/**
 * @brief		フェードアウトセット
 *
 * @param		heapID		ヒープＩＤ
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void ZKNCOMM_SetFadeOut( HEAPID heapID );

//--------------------------------------------------------------------------------------------
/**
 * @brief		背景スクロール
 *
 * @param		mainBG		メイン画面のＢＧフレーム
 * @param		subBG			サブ画面のＢＧフレーム
 * @param		cnt				カウンタ
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
extern void ZKNCOMM_ScrollBaseBG( u8 mainBG, u8 subBG, u32 * cnt );

//--------------------------------------------------------------------------------------------
/**
 * @brief		セルアクター追加
 *
 * @param		unit		GFL_CLUNIT
 * @param		prm			セルアクターデータ
 * @param		heapID	ヒープＩＤ
 *
 * @return	GFL_CLWK
 */
//--------------------------------------------------------------------------------------------
extern GFL_CLWK * ZKNCOMM_CreateClact( GFL_CLUNIT * unit, const ZKNCOMM_CLWK_DATA * prm, HEAPID heapID );
